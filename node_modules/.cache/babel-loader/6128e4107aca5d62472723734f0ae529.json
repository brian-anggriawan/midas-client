{"ast":null,"code":"import sw from 'sweetalert2';\nimport Decode from 'jwt-decode';\n\nvar encode = function encode(file) {\n  var reader = new FileReader();\n\n  reader.onloadend = function () {\n    return reader.result;\n  };\n\n  return reader.readAsDataURL(file);\n};\n/* API */\n\n\nvar proxy = 'http://192.168.40.88:4000/';\nvar headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n  'Authorization': 'Bearer' + localStorage.getItem('token')\n};\n\nvar apiGet = function apiGet(url) {\n  return fetch(proxy + url, {\n    method: 'get',\n    headers: headers\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiGet1 = function apiGet1(url, params1) {\n  return fetch(proxy + url + '/' + params1, {\n    method: 'get'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiGet2 = function apiGet2(url, params1, params2) {\n  return fetch(proxy + url + '/' + params1 + '/' + params2, {\n    method: 'get'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiPostFormdata = function apiPostFormdata(url, data) {\n  return fetch(proxy + url, {\n    method: 'post',\n    body: data\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiPostJson = function apiPostJson(url, data) {\n  return fetch(proxy + url, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n/* API */\n\n/* SWET ALERT */\n\n\nvar msgerror = function msgerror(msg) {\n  sw.fire({\n    type: 'error',\n    title: 'Oops...',\n    text: msg\n  });\n};\n\nvar msgok = function msgok(msg, url) {\n  sw.fire({\n    type: \"success\",\n    title: \"Berhasil\",\n    text: msg\n  }).then(function () {\n    window.location.href = url;\n  });\n};\n\nexport default {\n  encode: encode,\n  proxy: proxy,\n  apiGet: apiGet,\n  apiGet1: apiGet1,\n  apiGet2: apiGet2,\n  apiPostJson: apiPostJson,\n  apiPostFormdata: apiPostFormdata,\n  msgerror: msgerror,\n  msgok: msgok\n};","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\app.js"],"names":["sw","Decode","encode","file","reader","FileReader","onloadend","result","readAsDataURL","proxy","headers","localStorage","getItem","apiGet","url","fetch","method","then","res","json","data","apiGet1","params1","apiGet2","params2","apiPostFormdata","body","apiPostJson","JSON","stringify","msgerror","msg","fire","type","title","text","msgok","window","location","href"],"mappings":"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","sourcesContent":["import sw from 'sweetalert2';\r\nimport Decode from 'jwt-decode';\r\n\r\n\r\nlet encode = (file)=>{\r\n\r\nvar reader = new FileReader();\r\nreader.onloadend = ()=>{\r\n    return reader.result;\r\n}\r\n\r\nreturn reader.readAsDataURL(file)\r\n\r\n    \r\n}\r\n\r\n/* API */\r\n\r\n    let proxy = 'http://192.168.40.88:4000/';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer'+ localStorage.getItem('token')\r\n    }\r\n\r\n    let apiGet = (url)=>{\r\n        return fetch(proxy+url , {\r\n            method: 'get',\r\n            headers\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data\r\n        })\r\n    }\r\n\r\n    let apiGet1 = (url , params1)=>{\r\n        return fetch(proxy+url+'/'+params1 , {\r\n            method: 'get'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data\r\n        })\r\n    }\r\n\r\n    let apiGet2 = (url , params1 , params2)=>{\r\n        return fetch(proxy+url+'/'+params1+'/'+params2 , {\r\n            method: 'get'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data\r\n        })\r\n    }\r\n\r\n\r\n    let apiPostFormdata = (url , data)=>{\r\n        return fetch(proxy+url,{\r\n            method: 'post',\r\n            body: data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data;\r\n        })\r\n    }\r\n\r\n\r\n    let apiPostJson = (url , data)=>{\r\n        return fetch(proxy+url,{\r\n            method: 'post',\r\n            headers: { 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data;\r\n        })\r\n    }\r\n/* API */\r\n\r\n/* SWET ALERT */\r\n\r\nlet msgerror = (msg) =>{\r\n    sw.fire({\r\n    type: 'error',\r\n    title: 'Oops...',\r\n    text: msg\r\n    })\r\n}\r\n\r\nlet msgok =(msg , url)=>{\r\n    sw.fire({\r\n        type: \"success\",\r\n        title: \"Berhasil\",\r\n        text: msg  \r\n    }).then(()=>{\r\n        window.location.href = url\r\n    })\r\n}\r\n\r\n\r\nexport default { encode , proxy , apiGet , apiGet1 , apiGet2 ,apiPostJson ,apiPostFormdata , msgerror , msgok}"]},"metadata":{},"sourceType":"module"}