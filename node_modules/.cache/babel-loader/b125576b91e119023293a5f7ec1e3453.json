{"ast":null,"code":"var encode = function encode(file) {\n  var reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = function (res) {\n    return res = reader.result;\n  };\n};\n\nvar proxy = 'http://192.168.40.88:4000/';\n\nvar apiGet = function apiGet(url) {\n  return fetch(proxy + url, {\n    method: 'get'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiGet1 = function apiGet1(url, params1) {\n  return fetch(proxy + url + '/' + params1, {\n    method: 'get'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiGet2 = function apiGet2(url, params1, params2) {\n  return fetch(proxy + url + '/' + params1 + '/' + params2, {\n    method: 'get'\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiPostFormdata = function apiPostFormdata(url, data) {\n  return fetch(proxy + url, {\n    method: 'post',\n    body: data\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiPostJson = function apiPostJson(url, data) {\n  return fetch(proxy + url, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nexport default {\n  encode: encode,\n  proxy: proxy,\n  apiGet: apiGet,\n  apiGet1: apiGet1,\n  apiGet2: apiGet2,\n  apiPostJson: apiPostJson,\n  apiPostFormdata: apiPostFormdata\n};","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\app.js"],"names":["encode","file","reader","FileReader","readAsDataURL","onload","res","result","proxy","apiGet","url","fetch","method","then","json","data","apiGet1","params1","apiGet2","params2","apiPostFormdata","body","apiPostJson","headers","JSON","stringify"],"mappings":"AACA,IAAIA,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAS;AAClB,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACID,EAAAA,MAAM,CAACE,aAAP,CAAqBH,IAArB;;AACAC,EAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUC,GAAV,EAAe;AAC3B,WAAOA,GAAG,GAAGJ,MAAM,CAACK,MAApB;AACP,GAFG;AAIP,CAPD;;AASA,IAAIC,KAAK,GAAG,4BAAZ;;AAEA,IAAIC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAO;AAChB,SAAOC,KAAK,CAACH,KAAK,GAACE,GAAP,EAAa;AACrBE,IAAAA,MAAM,EAAE;AADa,GAAb,CAAL,CAGNC,IAHM,CAGD,UAAAP,GAAG;AAAA,WAAIA,GAAG,CAACQ,IAAJ,EAAJ;AAAA,GAHF,EAIND,IAJM,CAID,UAAAE,IAAI,EAAG;AACT,WAAOA,IAAP;AACH,GANM,CAAP;AAOH,CARD;;AAUA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAACN,GAAD,EAAOO,OAAP,EAAiB;AAC3B,SAAON,KAAK,CAACH,KAAK,GAACE,GAAN,GAAU,GAAV,GAAcO,OAAf,EAAyB;AACjCL,IAAAA,MAAM,EAAE;AADyB,GAAzB,CAAL,CAGNC,IAHM,CAGD,UAAAP,GAAG;AAAA,WAAIA,GAAG,CAACQ,IAAJ,EAAJ;AAAA,GAHF,EAIND,IAJM,CAID,UAAAE,IAAI,EAAG;AACT,WAAOA,IAAP;AACH,GANM,CAAP;AAOH,CARD;;AAUA,IAAIG,OAAO,GAAG,SAAVA,OAAU,CAACR,GAAD,EAAOO,OAAP,EAAiBE,OAAjB,EAA2B;AACrC,SAAOR,KAAK,CAACH,KAAK,GAACE,GAAN,GAAU,GAAV,GAAcO,OAAd,GAAsB,GAAtB,GAA0BE,OAA3B,EAAqC;AAC7CP,IAAAA,MAAM,EAAE;AADqC,GAArC,CAAL,CAGNC,IAHM,CAGD,UAAAP,GAAG;AAAA,WAAIA,GAAG,CAACQ,IAAJ,EAAJ;AAAA,GAHF,EAIND,IAJM,CAID,UAAAE,IAAI,EAAG;AACT,WAAOA,IAAP;AACH,GANM,CAAP;AAOH,CARD;;AAWA,IAAIK,eAAe,GAAG,SAAlBA,eAAkB,CAACV,GAAD,EAAOK,IAAP,EAAc;AAChC,SAAOJ,KAAK,CAACH,KAAK,GAACE,GAAP,EAAW;AACnBE,IAAAA,MAAM,EAAE,MADW;AAEnBS,IAAAA,IAAI,EAAEN;AAFa,GAAX,CAAL,CAINF,IAJM,CAID,UAAAP,GAAG;AAAA,WAAIA,GAAG,CAACQ,IAAJ,EAAJ;AAAA,GAJF,EAKND,IALM,CAKD,UAAAE,IAAI,EAAG;AACT,WAAOA,IAAP;AACH,GAPM,CAAP;AAQH,CATD;;AAYA,IAAIO,WAAW,GAAG,SAAdA,WAAc,CAACZ,GAAD,EAAOK,IAAP,EAAc;AAC5B,SAAOJ,KAAK,CAACH,KAAK,GAACE,GAAP,EAAW;AACnBE,IAAAA,MAAM,EAAE,MADW;AAEnBW,IAAAA,OAAO,EAAE;AAAE,sBAAe;AAAjB,KAFU;AAGnBF,IAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeV,IAAf;AAHa,GAAX,CAAL,CAKNF,IALM,CAKD,UAAAP,GAAG;AAAA,WAAIA,GAAG,CAACQ,IAAJ,EAAJ;AAAA,GALF,EAMND,IANM,CAMD,UAAAE,IAAI,EAAG;AACT,WAAOA,IAAP;AACH,GARM,CAAP;AASH,CAVD;;AAaA,eAAe;AAAEf,EAAAA,MAAM,EAANA,MAAF;AAAWQ,EAAAA,KAAK,EAALA,KAAX;AAAmBC,EAAAA,MAAM,EAANA,MAAnB;AAA4BO,EAAAA,OAAO,EAAPA,OAA5B;AAAsCE,EAAAA,OAAO,EAAPA,OAAtC;AAA+CI,EAAAA,WAAW,EAAXA,WAA/C;AAA4DF,EAAAA,eAAe,EAAfA;AAA5D,CAAf","sourcesContent":["\r\nlet encode = (file) =>{\r\n    const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function (res) {\r\n            return res = reader.result\r\n    };\r\n\r\n}\r\n\r\nlet proxy = 'http://192.168.40.88:4000/';\r\n\r\nlet apiGet = (url)=>{\r\n    return fetch(proxy+url , {\r\n        method: 'get'\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        return data\r\n    })\r\n}\r\n\r\nlet apiGet1 = (url , params1)=>{\r\n    return fetch(proxy+url+'/'+params1 , {\r\n        method: 'get'\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        return data\r\n    })\r\n}\r\n\r\nlet apiGet2 = (url , params1 , params2)=>{\r\n    return fetch(proxy+url+'/'+params1+'/'+params2 , {\r\n        method: 'get'\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        return data\r\n    })\r\n}\r\n\r\n\r\nlet apiPostFormdata = (url , data)=>{\r\n    return fetch(proxy+url,{\r\n        method: 'post',\r\n        body: data\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        return data;\r\n    })\r\n}\r\n\r\n\r\nlet apiPostJson = (url , data)=>{\r\n    return fetch(proxy+url,{\r\n        method: 'post',\r\n        headers: { 'Content-Type':'application/json'},\r\n        body: JSON.stringify(data)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        return data;\r\n    })\r\n}\r\n\r\n\r\nexport default { encode , proxy , apiGet , apiGet1 , apiGet2 ,apiPostJson ,apiPostFormdata}"]},"metadata":{},"sourceType":"module"}