{"ast":null,"code":"import _toConsumableArray from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\form-file.jsx\";\nimport React from 'react';\nimport Baseformmodal from 'layouts/form-modal.jsx';\nimport { FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Card, Label } from 'reactstrap';\nimport { StyledDropZone } from 'react-drop-zone';\nimport ReactDatetime from \"react-datetime\";\nimport 'react-drop-zone/dist/styles.css';\nimport app from 'app';\n\nvar formUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(formUpload, _React$Component);\n\n  function formUpload() {\n    var _this;\n\n    _classCallCheck(this, formUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(formUpload).call(this));\n\n    _this.addFile = function (file, text) {\n      _this.setState({\n        files: [].concat(_toConsumableArray(_this.state.files), [file])\n      });\n\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        _this.setState({\n          encode: reader.result\n        });\n      };\n    };\n\n    _this.Save = function () {\n      var formData = new FormData();\n      formData.append('file', _this.state.files[0]);\n      formData.append('description', document.getElementById('description').value);\n      formData.append('kategori', document.getElementById('kategori').value);\n      formData.append('tanggal', _this.state.tanggal);\n      formData.append('blob', _this.state.encode);\n      var des = formData.get('description'),\n          kategori = formData.get('kategori'),\n          tanggal = formData.get('tanggal'),\n          file = formData.get('file');\n\n      if (des && kategori && tanggal && file !== 'undefined') {\n        app.apiPostFormdata('uploadfile', formData).then(function (res) {\n          app.msgok('berhasil', '/admin/listfile');\n        });\n      } else {\n        app.msgerror('Masih Ada Yang Kosong');\n      }\n    };\n\n    _this.getDate = function (date) {\n      _this.setState({\n        tanggal: date._d\n      });\n    };\n\n    _this.state = {\n      files: [],\n      kategori: [],\n      tanggal: '',\n      encode: ''\n    };\n    return _this;\n  }\n\n  _createClass(formUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      app.apiGet('uploadsckategori').then(function (res) {\n        _this2.setState({\n          kategori: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Baseformmodal, {\n        title: 'FORM UPLOAD',\n        captionbtn: 'Upload File',\n        action: this.Save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"ni ni-calendar-grid-58\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(ReactDatetime, {\n        onChange: this.getDate,\n        closeOnSelect: true,\n        timeFormat: false,\n        inputProps: {\n          placeholder: \"Tanggal Period\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"description\",\n        placeholder: \"Description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        id: \"kategori\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Pilih Kategori\"), this.state.kategori.map(function (kategori) {\n        return React.createElement(\"option\", {\n          key: kategori.VCIDREPO,\n          value: kategori.VCIDREPO,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, kategori.VCDESCRIPTION);\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Card, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"test\"), React.createElement(Input, {\n        type: \"select\",\n        id: \"minggu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Minggu Ke\"), React.createElement(\"option\", {\n        value: \"Minggu Ke 1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Minggu Ke 1\"), React.createElement(\"option\", {\n        value: \"Minggu Ke 2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Minggu Ke 2\"), React.createElement(\"option\", {\n        value: \"Minggu Ke 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Minggu Ke 3\"), React.createElement(\"option\", {\n        value: \"Minggu Ke 4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Minggu Ke 4\")))), React.createElement(StyledDropZone, {\n        onDrop: this.addFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.files.map(function (file) {\n        return React.createElement(\"li\", {\n          key: file.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-file\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), \" \", file.name);\n      }))));\n    }\n  }]);\n\n  return formUpload;\n}(React.Component);\n\nexport default formUpload;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\form-file.jsx"],"names":["React","Baseformmodal","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Card","Label","StyledDropZone","ReactDatetime","app","formUpload","addFile","file","text","setState","files","state","reader","FileReader","readAsDataURL","onload","encode","result","Save","formData","FormData","append","document","getElementById","value","tanggal","des","get","kategori","apiPostFormdata","then","res","msgok","msgerror","getDate","date","_d","apiGet","placeholder","map","VCIDREPO","VCDESCRIPTION","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Baseformmodal from 'layouts/form-modal.jsx';\r\nimport { FormGroup , Input , InputGroup , InputGroupAddon, InputGroupText  , Card , Label } from 'reactstrap';\r\nimport { StyledDropZone } from 'react-drop-zone';\r\nimport ReactDatetime from \"react-datetime\";\r\nimport 'react-drop-zone/dist/styles.css';\r\nimport app from 'app';\r\n\r\n\r\nclass formUpload extends React.Component{\r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n        files: [],\r\n        kategori: [],\r\n        tanggal:'',\r\n        encode:''\r\n      }\r\n\r\n    }\r\n   \r\n      componentDidMount(){\r\n\r\n        app.apiGet('uploadsckategori')\r\n           .then(res =>{\r\n              this.setState({\r\n                kategori: res\r\n              })\r\n           });       \r\n      }\r\n\r\n    \r\n      addFile = (file, text) => {\r\n        this.setState({ files: [...this.state.files, file] })\r\n        \r\n        let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = ()=>{\r\n              this.setState({\r\n                encode: reader.result\r\n              })\r\n            }\r\n\r\n\r\n        \r\n      }\r\n\r\n      Save = ()=>{\r\n            let formData = new FormData();\r\n\r\n              formData.append('file', this.state.files[0]);\r\n              formData.append('description', document.getElementById('description').value );\r\n              formData.append('kategori', document.getElementById('kategori').value );\r\n              formData.append('tanggal',this.state.tanggal);\r\n              formData.append('blob' , this.state.encode);\r\n\r\n              let des = formData.get('description'),\r\n                  kategori = formData.get('kategori'),\r\n                  tanggal = formData.get('tanggal'),\r\n                  file = formData.get('file');\r\n\r\n              if (des && kategori && tanggal && file !=='undefined' ) { \r\n                app.apiPostFormdata('uploadfile',formData)\r\n                .then(res =>{\r\n                  app.msgok('berhasil','/admin/listfile')\r\n                }) \r\n                \r\n              }else{\r\n                app.msgerror('Masih Ada Yang Kosong')\r\n              }\r\n        }\r\n      \r\n      getDate =(date)=>{\r\n       this.setState({\r\n          tanggal: date._d\r\n        })\r\n\r\n      }\r\n      \r\n \r\n\r\n    render(){\r\n        return(\r\n           <div>\r\n              <Baseformmodal title={'FORM UPLOAD'} captionbtn={'Upload File'} action={this.Save}>\r\n              <FormGroup>\r\n                <InputGroup className=\"input-group-alternative\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText >\r\n                      <i className=\"ni ni-calendar-grid-58\" />\r\n                    </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <ReactDatetime  onChange={this.getDate} \r\n                      closeOnSelect={true}\r\n                      timeFormat={false}\r\n                      inputProps={{\r\n                        placeholder: \"Tanggal Period\",\r\n                      }}\r\n                    />\r\n                </InputGroup>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input id=\"description\" placeholder=\"Description\" type=\"text\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input type=\"select\" id=\"kategori\">\r\n                  <option value=''>Pilih Kategori</option>   \r\n                    {\r\n                      this.state.kategori.map(kategori=>\r\n                        <option key = {kategori.VCIDREPO} value={kategori.VCIDREPO}>{kategori.VCDESCRIPTION}</option>   \r\n                      )\r\n                    }\r\n                  </Input>\r\n               </FormGroup>\r\n               <FormGroup>\r\n                 <Card body>\r\n                 <Label className=\"text-center\">test</Label>\r\n                  <Input type=\"select\" id=\"minggu\">\r\n                      <option value =''>Minggu Ke</option>\r\n                      <option value ='Minggu Ke 1'>Minggu Ke 1</option>\r\n                      <option value ='Minggu Ke 2'>Minggu Ke 2</option>\r\n                      <option value ='Minggu Ke 3'>Minggu Ke 3</option>\r\n                      <option value ='Minggu Ke 4'>Minggu Ke 4</option>\r\n                  </Input>\r\n                 </Card>\r\n                 \r\n               </FormGroup>\r\n                <StyledDropZone onDrop={this.addFile} /><br/>\r\n                <ul>\r\n                  {\r\n                    this.state.files.map(file =>\r\n                      <li key={file.name} >\r\n                        <i className='fa fa-file' /> {file.name}\r\n                      </li>\r\n                    )\r\n                  }\r\n              </ul>\r\n              </Baseformmodal>\r\n           </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default formUpload;"]},"metadata":{},"sourceType":"module"}