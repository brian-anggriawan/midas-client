{"ast":null,"code":"// inlined http://underscorejs.org/ realization isString, isNumber\nvar toString = Object.prototype.toString;\n\nfunction isString(obj) {\n  return toString.call(obj) === \"[object String]\";\n}\n\nfunction isNumber(obj) {\n  return toString.call(obj) === \"[object Number]\";\n}\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\n\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n\n    /* eslint no-self-compare: 0 */\n    return x !== x && y !== y;\n  }\n}\n\nfunction isFuzzy(x, y) {\n  /* eslint eqeqeq: 0 */\n  if (x == y) {\n    if ((isString(x) || isNumber(x)) && (isString(y) || isNumber(y))) {\n      return true;\n    }\n  }\n\n  return is(x, y);\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty; // custom algoritm from https://github.com/facebook/fbjs\n// fbjs/lib/shallowEqual\n\nfunction shallowEqualFuzzy(objA, objB) {\n  if (isFuzzy(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n\n  if (objA instanceof Array && objB instanceof Array) {\n    if (objA.length !== objB.length) {\n      return false;\n    } // greed search\n\n\n    var valA,\n        iLen = objA.length;\n    var equalityMap = new Array(iLen);\n\n    for (var i = 0; i < iLen; i++) {\n      valA = objA[i];\n\n      if (shallowEqualFuzzy(valA, objB[i])) {\n        // elements in array in normal order\n        equalityMap[i] = true;\n        continue;\n      } // elements in array have different order\n\n\n      var isEqual = false;\n\n      for (var k = 0, kLen = objB.length; k < kLen; k++) {\n        if (equalityMap[k]) {\n          continue;\n        }\n\n        if (shallowEqualFuzzy(valA, objB[k])) {\n          equalityMap[k] = true;\n          isEqual = true;\n          break;\n        }\n      }\n\n      if (!isEqual) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  for (var j = 0; j < keysA.length; j++) {\n    if (!hasOwnProperty.call(objB, keysA[j]) || !shallowEqualFuzzy(objA[keysA[j]], objB[keysA[j]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualFuzzy;","map":null,"metadata":{},"sourceType":"script"}