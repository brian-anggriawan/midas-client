{"ast":null,"code":"import _toConsumableArray from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\form-file.jsx\";\nimport React from 'react';\nimport Baseformmodal from 'layouts/form-modal.jsx';\nimport { FormGroup, Input } from 'reactstrap';\nimport { StyledDropZone } from 'react-drop-zone';\nimport 'react-drop-zone/dist/styles.css';\nimport app from 'app';\n\nvar formUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(formUpload, _React$Component);\n\n  function formUpload() {\n    var _this;\n\n    _classCallCheck(this, formUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(formUpload).call(this));\n\n    _this.addFile = function (file, text) {\n      _this.setState({\n        files: [].concat(_toConsumableArray(_this.state.files), [file])\n      });\n\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        _this.setState({\n          encode: reader.result\n        });\n      };\n    };\n\n    _this.Save = function () {\n      var formData = new FormData();\n      formData.append('file', _this.state.files[0]);\n      formData.append('description', document.getElementById('description').value);\n      formData.append('template', _this.props.data[0].idtemplate);\n      formData.append('period', _this.props.data[0].idperiod);\n      formData.append('directory', _this.props.data[0].directory);\n      formData.append('blob', _this.state.encode);\n      formData.append('user', app.dataUser[0].IDLOGIN);\n      var des = formData.get('description'),\n          file = formData.get('file');\n\n      if (des && file !== 'undefined') {\n        /*\r\n        app.apiPostFormdata('uploadfile',formData)\r\n        .then(res =>{\r\n          app.msgok('berhasil','/admin/index')\r\n        }) */\n        console.log(_this.props.data[0].period);\n      } else {\n        app.msgerror('Masih Ada Yang Kosong');\n      }\n    };\n\n    _this.state = {\n      files: [],\n      encode: ''\n    };\n    return _this;\n  }\n\n  _createClass(formUpload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Baseformmodal, {\n        title: 'FORM UPLOAD',\n        captionbtn: 'Upload File',\n        action: this.Save,\n        modal: this.props.modal,\n        mode: this.props.mode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"description\",\n        placeholder: \"Description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(StyledDropZone, {\n        onDrop: this.addFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.files.map(function (file) {\n        return React.createElement(\"li\", {\n          key: file.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-file\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), \" \", file.name);\n      }))));\n    }\n  }]);\n\n  return formUpload;\n}(React.Component);\n\nexport default formUpload;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\form-file.jsx"],"names":["React","Baseformmodal","FormGroup","Input","StyledDropZone","app","formUpload","addFile","file","text","setState","files","state","reader","FileReader","readAsDataURL","onload","encode","result","Save","formData","FormData","append","document","getElementById","value","props","data","idtemplate","idperiod","directory","dataUser","IDLOGIN","des","get","console","log","period","msgerror","modal","mode","map","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Baseformmodal from 'layouts/form-modal.jsx';\r\nimport { FormGroup , Input  } from 'reactstrap';\r\nimport { StyledDropZone } from 'react-drop-zone';\r\nimport 'react-drop-zone/dist/styles.css';\r\nimport app from 'app';\r\n\r\n \r\n\r\n\r\nclass formUpload extends React.Component{\r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n        files: [],\r\n        encode:''\r\n      }\r\n\r\n    }\r\n   \r\n\r\n    \r\n      addFile = (file, text) => {\r\n        this.setState({ files: [...this.state.files, file] })\r\n        \r\n        let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = ()=>{\r\n              this.setState({\r\n                encode: reader.result\r\n              })\r\n            }     \r\n      }\r\n\r\n      Save = ()=>{\r\n            let formData = new FormData();\r\n\r\n              formData.append('file', this.state.files[0]);\r\n              formData.append('description', document.getElementById('description').value );\r\n              formData.append('template', this.props.data[0].idtemplate);\r\n              formData.append('period', this.props.data[0].idperiod);\r\n              formData.append('directory', this.props.data[0].directory);\r\n              formData.append('blob' , this.state.encode);\r\n              formData.append('user' , app.dataUser[0].IDLOGIN);\r\n\r\n              let des = formData.get('description'),\r\n                  file = formData.get('file');\r\n\r\n              if (des && file !=='undefined' ) { \r\n                /*\r\n                app.apiPostFormdata('uploadfile',formData)\r\n                .then(res =>{\r\n                  app.msgok('berhasil','/admin/index')\r\n                }) */\r\n                console.log(this.props.data[0].period)\r\n                \r\n              }else{\r\n                app.msgerror('Masih Ada Yang Kosong')\r\n              }\r\n        }\r\n      \r\n\r\n    render(){\r\n        return(\r\n           <div>\r\n              <Baseformmodal title={'FORM UPLOAD'} captionbtn={'Upload File'} action={this.Save} modal={this.props.modal} mode={this.props.mode}>\r\n              <FormGroup>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input id=\"description\" placeholder=\"Description\" type=\"text\" />\r\n                </FormGroup>\r\n                <StyledDropZone onDrop={this.addFile} /><br/>\r\n                <ul>\r\n                  {\r\n                    this.state.files.map(file =>\r\n                      <li key={file.name} >\r\n                        <i className='fa fa-file' /> {file.name}\r\n                      </li>\r\n                    )\r\n                  }\r\n              </ul>\r\n              </Baseformmodal>\r\n           </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default formUpload;"]},"metadata":{},"sourceType":"module"}