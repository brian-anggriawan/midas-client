{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-repository\\\\form-repository.jsx\";\nimport React from 'react';\nimport Baseformmodal from 'layouts/form-modal.jsx';\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport 'react-drop-zone/dist/styles.css';\nimport app from 'app';\n\nvar formRepository =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(formRepository, _React$Component);\n\n  function formRepository() {\n    var _this;\n\n    _classCallCheck(this, formRepository);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(formRepository).call(this));\n\n    _this.Divisi = function (e) {\n      app.apiGet1('repository/dpt/' + e.target.value).then(function (res) {\n        _this.setState({\n          dpt: res\n        });\n      });\n      console.log(_this.state.dpt);\n    };\n\n    _this.Save = function () {\n      var name = document.getElementById('name').value,\n          jenis = document.getElementById('jenis').value,\n          ket = document.getElementById('ket').value;\n\n      if (name && jenis && ket) {\n        app.apiPostJson('repository', {\n          name: name,\n          jenis: jenis,\n          ket: ket,\n          user: app.dataUser[0].IDLOGIN\n        }).then(function (res) {\n          if (res) {\n            app.msgok('Berhasil Disimpan', '/');\n          }\n        });\n      } else {\n        app.msgerror('Masih Ada Yang Kosong');\n      }\n    };\n\n    _this.state = {\n      sbu: [],\n      dpt: []\n    };\n    return _this;\n  }\n\n  _createClass(formRepository, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      app.apiGet('repository/sbu/sbu').then(function (res) {\n        _this2.setState({\n          sbu: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Baseformmodal, {\n        title: 'FORM KATEGORI',\n        captionbtn: 'Tambah Kategori',\n        action: this.Save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Nama Master Report\"), React.createElement(Input, {\n        placeholder: \"Master Report\",\n        type: \"text\",\n        id: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"SBU\"), React.createElement(Input, {\n        type: \"select\",\n        id: \"sbu\",\n        onChange: this.Divisi,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Pilih SBU\"), this.state.sbu.map(function (sbu) {\n        return React.createElement(\"option\", {\n          key: sbu.SYSTEM_ID,\n          value: sbu.SYSTEM_ID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, sbu.SBU);\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Jenis Report\"), React.createElement(Input, {\n        type: \"select\",\n        id: \"jenis\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Pilih Jenis Report\"), React.createElement(\"option\", {\n        value: \"Harian\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Harian\"), React.createElement(\"option\", {\n        value: \"Mingguan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Mingguan\"), React.createElement(\"option\", {\n        value: \"Bulanan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Bulanan\"), React.createElement(\"option\", {\n        value: \"Tahunan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Tahunan\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Keterangan\"), React.createElement(Input, {\n        placeholder: \"Keterangan\",\n        type: \"textarea\",\n        id: \"ket\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return formRepository;\n}(React.Component);\n\nexport default formRepository;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-repository\\form-repository.jsx"],"names":["React","Baseformmodal","FormGroup","Input","Label","app","formRepository","Divisi","e","apiGet1","target","value","then","res","setState","dpt","console","log","state","Save","name","document","getElementById","jenis","ket","apiPostJson","user","dataUser","IDLOGIN","msgok","msgerror","sbu","apiGet","map","SYSTEM_ID","SBU","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Baseformmodal from 'layouts/form-modal.jsx';\r\nimport { FormGroup ,Input ,Label} from 'reactstrap';\r\nimport 'react-drop-zone/dist/styles.css';\r\nimport app from 'app';\r\n\r\n\r\nclass formRepository extends React.Component{\r\n   constructor(){\r\n      super()\r\n      this.state ={\r\n         sbu: [],\r\n         dpt: []\r\n      }\r\n   }\r\n\r\n\r\n   componentDidMount(){\r\n      app.apiGet('repository/sbu/sbu')\r\n         .then(res =>{\r\n            this.setState({\r\n               sbu: res\r\n            })\r\n         })\r\n\r\n\r\n        \r\n   }\r\n\r\n   Divisi =(e)=>{\r\n      app.apiGet1('repository/dpt/'+e.target.value)\r\n         .then(res =>{\r\n            this.setState({\r\n               dpt: res\r\n            })\r\n         })\r\n\r\n         console.log(this.state.dpt)\r\n   }\r\n  \r\n  Save = () =>{\r\n   let name = document.getElementById('name').value,\r\n       jenis = document.getElementById('jenis').value,\r\n       ket = document.getElementById('ket').value;\r\n\r\n       if (name && jenis  && ket ) {\r\n         app.apiPostJson('repository',{\r\n            name: name , \r\n            jenis: jenis , \r\n            ket: ket ,\r\n            user: app.dataUser[0].IDLOGIN\r\n         })\r\n         .then(res =>{\r\n            if (res) {\r\n               app.msgok('Berhasil Disimpan','/')\r\n            }\r\n         }) \r\n  \r\n       }else {\r\n         app.msgerror('Masih Ada Yang Kosong')\r\n       }  \r\n   }\r\n\r\n    render(){\r\n        return(\r\n           <div>\r\n               <Baseformmodal title={'FORM KATEGORI'} captionbtn={'Tambah Kategori'} action={this.Save}>\r\n               <FormGroup>\r\n                  <Label>Nama Master Report</Label>\r\n                  <Input placeholder=\"Master Report\" type=\"text\" id=\"name\" required/>\r\n               </FormGroup>\r\n               <FormGroup>\r\n                  <Label>SBU</Label>\r\n                  <Input type=\"select\" id=\"sbu\" onChange={this.Divisi} required>\r\n                     <option value='0'> Pilih SBU</option>\r\n                     {\r\n                        this.state.sbu.map(sbu=>\r\n                           <option key={sbu.SYSTEM_ID} value={sbu.SYSTEM_ID}>{sbu.SBU}</option>\r\n                        )\r\n                     }\r\n                   \r\n                  </Input>\r\n               </FormGroup>\r\n               <FormGroup>\r\n                  <Label>Jenis Report</Label>\r\n                  <Input type=\"select\" id=\"jenis\" required>\r\n                    <option value=\"\">Pilih Jenis Report</option>\r\n                    <option value=\"Harian\">Harian</option>\r\n                    <option value=\"Mingguan\">Mingguan</option>\r\n                    <option value=\"Bulanan\">Bulanan</option>\r\n                    <option value=\"Tahunan\">Tahunan</option>\r\n                  </Input>\r\n               </FormGroup>\r\n                <FormGroup>\r\n                  <Label>Keterangan</Label>\r\n                  <Input placeholder=\"Keterangan\" type=\"textarea\" id=\"ket\" required/>\r\n               </FormGroup>\r\n              </Baseformmodal>\r\n           </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default formRepository;"]},"metadata":{},"sourceType":"module"}