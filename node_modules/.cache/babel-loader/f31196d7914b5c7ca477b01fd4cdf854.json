{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\search-report\\\\search-report.jsx\";\nimport React, { Component } from 'react';\nimport Page from 'layouts/page-admin';\nimport Autosuggest from 'react-autosuggest';\nimport './src.css';\nimport { Row, Col, Button } from 'reactstrap';\nimport app from 'app';\n\nvar SearchReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchReport, _Component);\n\n  function SearchReport() {\n    var _this;\n\n    _classCallCheck(this, SearchReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchReport).call(this));\n\n    _this.getSuggestions = function (value) {\n      var laporan = _this.state.laporan;\n      var inputValue = value.trim().toLowerCase();\n      var inputLength = inputValue.length;\n      return inputLength === 0 ? [] : laporan.filter(function (x) {\n        return x.REPO.toLowerCase().slice(0, inputLength) === inputValue;\n      });\n    };\n\n    _this.getSuggestionValue = function (suggestion) {\n      return suggestion.name;\n    };\n\n    _this.renderSuggestion = function (suggestion) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, suggestion.REPO);\n    };\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: _this.getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.state = {\n      value: '',\n      suggestions: [],\n      laporan: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchReport, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      app.apiGet('search').then(function (res) {\n        var user = app.dataUser[0].ACCESS;\n\n        if (user === 2) {\n          console.log(user);\n        } else {\n          _this2.setState({\n            laporan: res\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n      var inputProps = {\n        placeholder: 'Cari Laporan Anda',\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(Page, {\n        head: 'Pencarian Laporan',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: this.getSuggestionValue,\n        renderSuggestion: this.renderSuggestion,\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" Search \"), React.createElement(Button, {\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" Filter \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchReport;\n}(Component);\n\nexport { SearchReport as default };","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\search-report\\search-report.jsx"],"names":["React","Component","Page","Autosuggest","Row","Col","Button","app","SearchReport","getSuggestions","value","laporan","state","inputValue","trim","toLowerCase","inputLength","length","filter","x","REPO","slice","getSuggestionValue","suggestion","name","renderSuggestion","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","apiGet","then","res","user","dataUser","ACCESS","console","log","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Page from 'layouts/page-admin';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './src.css';\r\nimport { Row , \r\n         Col , \r\n         Button \r\n        } from 'reactstrap';\r\nimport app from 'app';\r\n\r\n\r\nexport default class SearchReport  extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          value: '',\r\n          suggestions: [],\r\n          laporan: []\r\n        };\r\n      }\r\n\r\n      componentWillMount(){\r\n        app.apiGet('search')\r\n           .then(res=>{\r\n               let user = app.dataUser[0].ACCESS;\r\n\r\n               if (user === 2) {\r\n                    console.log(user)\r\n               }else{\r\n                   this.setState({\r\n                       laporan: res\r\n                   })\r\n               }\r\n           })\r\n      }\r\n\r\n    \r\n      getSuggestions = value => {\r\n        let { laporan } = this.state;\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n      \r\n        return inputLength === 0 ? [] : laporan.filter(x =>\r\n          x.REPO.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n\r\n      };\r\n      \r\n    \r\n      getSuggestionValue = suggestion => suggestion.name;\r\n    \r\n      renderSuggestion = suggestion => (\r\n        <div>\r\n          {suggestion.REPO}\r\n        </div>\r\n      );\r\n    \r\n      onChange = (event, { newValue }) => {\r\n        this.setState({\r\n          value: newValue\r\n        });\r\n      };\r\n    \r\n      onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n\r\n      };\r\n    \r\n      onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n      };\r\n    \r\n    render() {\r\n\r\n        const { value, suggestions } = this.state;\r\n\r\n        const inputProps = {\r\n        placeholder: 'Cari Laporan Anda',\r\n        value,\r\n        onChange: this.onChange\r\n        };\r\n          \r\n        return (\r\n            <Page head={'Pencarian Laporan'}>\r\n                <Row className='mb-3'>\r\n                    <Col md='12'>\r\n                    <Autosuggest \r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                        getSuggestionValue={this.getSuggestionValue}\r\n                        renderSuggestion={this.renderSuggestion}\r\n                        inputProps={inputProps}\r\n                    />\r\n                    </Col>\r\n                </Row> \r\n                <Button color='primary'> Search </Button>\r\n                <Button color='info'> Filter </Button>\r\n                <hr />\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}