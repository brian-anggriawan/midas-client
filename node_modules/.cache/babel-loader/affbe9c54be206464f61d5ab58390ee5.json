{"ast":null,"code":"import Decode from 'jwt-decode';\nimport app from 'app';\n\nvar login = function login(user, pass) {\n  var data = {\n    name: user,\n    pass: pass\n  };\n  return app.apiPostJson('/login', data).then(function (res) {\n    localStorage.setItem('token', res.token);\n  });\n};\n\nvar loggedin = function loggedin() {\n  var token = localStorage.getItem('token');\n  return !!token && !isTokenExpired(token);\n};\n\nvar isTokenExpired = function isTokenExpired(token) {\n  try {\n    var decode = Decode(token);\n\n    if (decode.exp < Date.now() / 1000) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n\nvar getProfile = function getProfile() {\n  return Decode(localStorage.getItem('token'));\n};\n\nvar logout = function logout() {\n  localStorage.removeItem('token');\n};\n\nexport default {\n  login: login,\n  loggedin: loggedin,\n  getProfile: getProfile,\n  logout: logout\n};","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\AuthService.js"],"names":["Decode","app","login","user","pass","data","name","apiPostJson","then","res","localStorage","setItem","token","loggedin","getItem","isTokenExpired","decode","exp","Date","now","err","getProfile","logout","removeItem"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,YAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAGG,IAAIC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAQC,IAAR,EAAe;AACtB,MAAIC,IAAI,GAAG;AACPC,IAAAA,IAAI,EAAEH,IADC;AAEPC,IAAAA,IAAI,EAAEA;AAFC,GAAX;AAIA,SAAOH,GAAG,CAACM,WAAJ,CAAgB,QAAhB,EAA0BF,IAA1B,EACIG,IADJ,CACS,UAAAC,GAAG,EAAG;AACVC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA+BF,GAAG,CAACG,KAAnC;AACD,GAHJ,CAAP;AAIH,CATF;;AAWA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAI;AACd,MAAID,KAAK,GAAGF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,CAAC,CAACF,KAAF,IAAW,CAACG,cAAc,CAACH,KAAD,CAAjC;AAGH,CALF;;AAOA,IAAIG,cAAc,GAAG,SAAjBA,cAAiB,CAACH,KAAD,EAAS;AACzB,MAAG;AACC,QAAII,MAAM,GAAGhB,MAAM,CAACY,KAAD,CAAnB;;AAEA,QAAII,MAAM,CAACC,GAAP,GAAaC,IAAI,CAACC,GAAL,KAAa,IAA9B,EAAmC;AAC/B,aAAO,IAAP;AACH,KAFD,MAEK;AACD,aAAO,KAAP;AACH;AACJ,GARD,CAUA,OAAMC,GAAN,EAAU;AACN,WAAO,KAAP;AACH;AACJ,CAdF;;AAgBC,IAAIC,UAAU,GAAG,SAAbA,UAAa,GAAI;AACjB,SAAOrB,MAAM,CAACU,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAD,CAAb;AACH,CAFD;;AAIA,IAAIQ,MAAM,GAAG,SAATA,MAAS,GAAI;AACbZ,EAAAA,YAAY,CAACa,UAAb,CAAwB,OAAxB;AACH,CAFD;;AAKA,eAAgB;AAACrB,EAAAA,KAAK,EAALA,KAAD;AAASW,EAAAA,QAAQ,EAARA,QAAT;AAAmBQ,EAAAA,UAAU,EAAVA,UAAnB;AAA+BC,EAAAA,MAAM,EAANA;AAA/B,CAAhB","sourcesContent":["import Decode from 'jwt-decode';\r\nimport app from 'app';\r\n\r\n\r\n   let login = (user , pass)=>{\r\n        let data = {\r\n            name: user,\r\n            pass: pass\r\n        }\r\n        return app.apiPostJson('/login', data)\r\n                  .then(res =>{\r\n                    localStorage.setItem('token' , res.token)\r\n                  })\r\n    }\r\n\r\n   let loggedin = ()=>{\r\n        let token = localStorage.getItem('token');\r\n        return !!token && !isTokenExpired(token)\r\n       \r\n\r\n    }\r\n\r\n   let isTokenExpired = (token)=>{\r\n        try{\r\n            let decode = Decode(token);\r\n\r\n            if (decode.exp < Date.now() / 1000){\r\n                return true\r\n            }else{\r\n                return false\r\n            }\r\n        }\r\n\r\n        catch(err){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    let getProfile = ()=>{\r\n        return Decode(localStorage.getItem('token'));\r\n    }\r\n\r\n    let logout = ()=>{\r\n        localStorage.removeItem('token')\r\n    }\r\n    \r\n\r\n    export default  {login , loggedin ,getProfile ,logout}"]},"metadata":{},"sourceType":"module"}