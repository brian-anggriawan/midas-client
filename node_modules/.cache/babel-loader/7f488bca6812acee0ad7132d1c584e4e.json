{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\list_file_detail.jsx\";\nimport React from 'react';\nimport Baselistmmodal from 'layouts/list_modal.jsx';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { Button } from 'reactstrap';\nimport download from 'downloadjs';\nimport app from 'app';\n\nvar listfiledetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listfiledetail, _React$Component);\n\n  function listfiledetail(props) {\n    var _this;\n\n    _classCallCheck(this, listfiledetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listfiledetail).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(listfiledetail, [{\n    key: \"action\",\n    value: function action(id) {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this2.Downloadfile(id);\n        },\n        outline: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Download\"));\n    }\n  }, {\n    key: \"Downloadfile\",\n    value: function () {\n      var _Downloadfile = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var data, idfile, name, res, blob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = this.props.data.filter(function (res) {\n                  return res.ID_FILE === id;\n                })[0];\n                idfile = this.props.data[rowIndex].ID_FILE;\n                name = this.props.data[rowIndex].ORIGINAL_NAME;\n                _context.next = 5;\n                return fetch(app.proxy + 'downloadfile/' + idfile, {\n                  method: 'get',\n                  headers: app.head2\n                });\n\n              case 5:\n                res = _context.sent;\n                _context.next = 8;\n                return res.blob();\n\n              case 8:\n                blob = _context.sent;\n                download(blob, name);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function Downloadfile(_x) {\n        return _Downloadfile.apply(this, arguments);\n      }\n\n      return Downloadfile;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        sizePerPage: 10,\n        hideSizePerPage: true,\n        prePage: 'Back',\n        nextPage: 'Next'\n      };\n      return React.createElement(Baselistmmodal, {\n        modal: this.props.modal,\n        mode: this.props.mode,\n        title: 'List Detail File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.props.data,\n        bordered: false,\n        striped: true,\n        pagination: true,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"DTUPLOAD\",\n        width: \"16%\",\n        isKey: true,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Tanggal Upload\"), React.createElement(TableHeaderColumn, {\n        dataField: \"FILE_DESCRIPTION\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ORIGINAL_NAME\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Original File Name\"), React.createElement(TableHeaderColumn, {\n        dataField: \"USER\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"User Upload\"), React.createElement(TableHeaderColumn, {\n        dataField: \"STATUS\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"User Upload\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ID_FILE\",\n        dataFormat: this.action,\n        width: \"16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Action\")))))));\n    }\n  }]);\n\n  return listfiledetail;\n}(React.Component);\n\nexport default listfiledetail;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\list_file_detail.jsx"],"names":["React","Baselistmmodal","BootstrapTable","TableHeaderColumn","Button","download","app","listfiledetail","props","state","id","Downloadfile","data","filter","res","ID_FILE","idfile","rowIndex","name","ORIGINAL_NAME","fetch","proxy","method","headers","head2","blob","options","sizePerPage","hideSizePerPage","prePage","nextPage","modal","mode","action","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Baselistmmodal from 'layouts/list_modal.jsx';\r\nimport { BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport {Button} from 'reactstrap';\r\nimport download from 'downloadjs';\r\nimport app from 'app';\r\n\r\n\r\nclass listfiledetail extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    action(id){\r\n        return(\r\n            <>\r\n                <Button type=\"button\" size=\"sm\" onClick={() => this.Downloadfile(id)} outline color=\"success\">Download</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    async Downloadfile(id){\r\n        let data = this.props.data.filter(res => res.ID_FILE === id)[0];\r\n        \r\n        let idfile = this.props.data[rowIndex].ID_FILE;\r\n\r\n       let name = this.props.data[rowIndex].ORIGINAL_NAME;\r\n\r\n       let res = await fetch(app.proxy+'downloadfile/'+idfile ,{\r\n           method: 'get',\r\n           headers: app.head2\r\n       });\r\n\r\n       \r\n       let blob = await res.blob();\r\n    \r\n       download(blob , name);\r\n       \r\n    }\r\n\r\n    render(){\r\n\r\n        const options = {\r\n            sizePerPage: 10,\r\n            hideSizePerPage: true,\r\n            prePage: 'Back',\r\n            nextPage: 'Next',\r\n          };\r\n        return(\r\n            <Baselistmmodal modal= {this.props.modal} mode ={this.props.mode} title ={'List Detail File'}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"content\">\r\n                            <BootstrapTable\r\n                                data={this.props.data}\r\n                                bordered={false}\r\n                                striped\r\n                                pagination={true}\r\n                                options={options}>\r\n                                <TableHeaderColumn\r\n                                    dataField='DTUPLOAD'\r\n                                    width='16%'\r\n                                    isKey = {true}\r\n                                    dataSort>\r\n                                    Tanggal Upload\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn\r\n                                    dataField='FILE_DESCRIPTION'\r\n                                    width='16%'\r\n                                    dataSort>\r\n                                    Description\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn\r\n                                    dataField='ORIGINAL_NAME'\r\n                                    width='16%'\r\n                                    dataSort>\r\n                                    Original File Name\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn\r\n                                    dataField='USER'\r\n                                    width='16%'\r\n                                    dataSort>\r\n                                    User Upload\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn\r\n                                    dataField='STATUS'\r\n                                    width='16%'\r\n                                    dataSort>\r\n                                    User Upload\r\n                                </TableHeaderColumn>\r\n                                <TableHeaderColumn\r\n                                    dataField='ID_FILE'\r\n                                    dataFormat={this.action}\r\n                                    width='16'>\r\n                                    Action\r\n                                </TableHeaderColumn>\r\n                            </BootstrapTable>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </Baselistmmodal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default listfiledetail;"]},"metadata":{},"sourceType":"module"}