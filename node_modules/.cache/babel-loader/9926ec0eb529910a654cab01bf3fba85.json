{"ast":null,"code":"import _toConsumableArray from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\form-file.jsx\";\nimport React from 'react';\nimport Baseformmodal from 'layouts/form-modal.jsx';\nimport { FormGroup, Input } from 'reactstrap';\nimport { StyledDropZone } from 'react-drop-zone';\nimport 'react-drop-zone/dist/styles.css';\n\nvar formUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(formUpload, _React$Component);\n\n  function formUpload() {\n    var _this;\n\n    _classCallCheck(this, formUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(formUpload).call(this));\n\n    _this.addFile = function (file, text) {\n      _this.setState({\n        files: [].concat(_toConsumableArray(_this.state.files), [file])\n      });\n    };\n\n    _this.Save = function () {\n      var formData = new FormData();\n      formData.append('file', _this.state.files[0]);\n      fetch('http://192.168.40.88:4000/uploadfile', {\n        method: 'post',\n        body: formData\n      });\n      /*\r\n      fetch('http://192.168.40.88:4000/uploadfile',{\r\n        method: 'post',\r\n        headers: { 'Content-Type':'application/json'},\r\n        body: JSON.stringify({\r\n          name: 'HALOO'\r\n        })\r\n      })\r\n      */\n    };\n\n    _this.state = {\n      files: [],\n      kategori: []\n    };\n    return _this;\n  }\n\n  _createClass(formUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://192.168.40.88:4000/uploadsckategori', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          kategori: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Baseformmodal, {\n        title: 'FORM UPLOAD',\n        captionbtn: 'Upload File',\n        action: this.Save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"description\",\n        placeholder: \"Description\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        id: \"kategori\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Pilih Kategori\"), this.state.kategori.map(function (kategori) {\n        return React.createElement(\"option\", {\n          key: kategori.VCIDREPO,\n          value: kategori.VCIDREPO,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, kategori.VCDESCRIPTION);\n      }))), React.createElement(StyledDropZone, {\n        onDrop: this.addFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.files.map(function (file) {\n        return React.createElement(\"li\", {\n          key: file.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-file\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), \" \", file.name);\n      }))));\n    }\n  }]);\n\n  return formUpload;\n}(React.Component);\n\nexport default formUpload;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\form-file.jsx"],"names":["React","Baseformmodal","FormGroup","Input","StyledDropZone","formUpload","addFile","file","text","setState","files","state","Save","formData","FormData","append","fetch","method","body","kategori","headers","then","res","json","data","map","VCIDREPO","VCDESCRIPTION","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Baseformmodal from 'layouts/form-modal.jsx';\r\nimport { FormGroup , Input } from 'reactstrap';\r\nimport { StyledDropZone } from 'react-drop-zone';\r\nimport 'react-drop-zone/dist/styles.css';\r\n\r\n\r\nclass formUpload extends React.Component{\r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n        files: [],\r\n        kategori: []\r\n      }\r\n\r\n\r\n    }\r\n   \r\n\r\n      componentDidMount(){\r\n        fetch('http://192.168.40.88:4000/uploadsckategori',{\r\n          method:'get',\r\n          headers: { 'Content-Type':'application/json'}\r\n        })\r\n        .then( res  => res.json())\r\n        .then(data =>{\r\n          this.setState({\r\n            kategori: data\r\n          })\r\n        })\r\n      }\r\n    \r\n      addFile = (file, text) => {\r\n        this.setState({ files: [...this.state.files, file] })\r\n      }\r\n\r\n      Save = ()=>{\r\n            let formData = new FormData();\r\n\r\n              formData.append('file', this.state.files[0])\r\n        \r\n\r\n            fetch('http://192.168.40.88:4000/uploadfile',{\r\n              method: 'post',\r\n              body: formData\r\n            })\r\n            /*\r\n            fetch('http://192.168.40.88:4000/uploadfile',{\r\n              method: 'post',\r\n              headers: { 'Content-Type':'application/json'},\r\n              body: JSON.stringify({\r\n                name: 'HALOO'\r\n              })\r\n            })\r\n         */   \r\n        }\r\n\r\n\r\n    render(){\r\n        return(\r\n           <div>\r\n              <Baseformmodal title={'FORM UPLOAD'} captionbtn={'Upload File'} action={this.Save}>\r\n                <FormGroup>\r\n                  <Input id=\"description\" placeholder=\"Description\" type=\"text\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input type=\"select\" id=\"kategori\">\r\n                  <option value=''>Pilih Kategori</option>   \r\n                    {\r\n                      this.state.kategori.map(kategori=>\r\n                        <option key = {kategori.VCIDREPO} value={kategori.VCIDREPO}>{kategori.VCDESCRIPTION}</option>   \r\n                      )\r\n                    }\r\n                  </Input>\r\n               </FormGroup>\r\n                <StyledDropZone onDrop={this.addFile} /><br/>\r\n                <ul>\r\n                  {\r\n                    this.state.files.map(file =>\r\n                      <li key={file.name} >\r\n                        <i className='fa fa-file' /> {file.name}\r\n                      </li>\r\n                    )\r\n                  }\r\n              </ul>\r\n              </Baseformmodal>\r\n           </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default formUpload;"]},"metadata":{},"sourceType":"module"}