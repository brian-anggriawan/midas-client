{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\format-file\\\\list-format-file.jsx\";\nimport React from 'react';\nimport Pageadmin from 'layouts/page-admin';\nimport { Row, Col, Card, CardTitle, CardText, Button, Input } from 'reactstrap';\nimport Scroll from 'simplebar-react';\nimport app from 'app.js';\n\nvar Formatfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Formatfile, _React$Component);\n\n  function Formatfile() {\n    var _this;\n\n    _classCallCheck(this, Formatfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Formatfile).call(this));\n\n    _this.Clickupload = function (id) {\n      document.getElementById('file').click();\n\n      _this.setState({\n        idrepo: id\n      });\n    };\n\n    _this.upload = function (idrepo) {\n      var files = document.getElementById('file').files;\n      var reader = new FileReader();\n      reader.readAsDataURL(files[0]);\n\n      reader.onload = function () {\n        var formData = new FormData();\n        formData.append('name', files[0].name);\n        formData.append('files', files[0]);\n        formData.append('blob', reader.result);\n        formData.append('idrepo', _this.state.idrepo);\n        formData.append('iduser', app.dataUser[0].IDLOGIN);\n        app.apiPostFormdata('formatfile', formData).then(function (res) {\n          if (res) {\n            app.msgok('Berhasil Di Upload', '/admin/format-file');\n          }\n        });\n      };\n    };\n\n    _this.state = {\n      laporan: [],\n      idrepo: ''\n    };\n    return _this;\n  }\n\n  _createClass(Formatfile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var id = JSON.parse(localStorage.getItem('user'))[0].IDLOGIN;\n      app.apiGet1('formatfile', id).then(function (res) {\n        _this2.setState({\n          laporan: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Pageadmin, {\n        head: 'Format File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.laporan.map(function (repo) {\n        return React.createElement(Col, {\n          sm: \"4\",\n          key: repo.IDACC_REPO,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"card-pricing bg-gradient-primary border-0 text-center text-white mb-4\",\n          body: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, repo.REPOSITORY), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, repo.JENIS_REPO), React.createElement(Input, {\n          type: \"file\",\n          id: \"file\",\n          hidden: true,\n          onChange: _this3.upload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"file\",\n          size: \"sm\",\n          className: \"btn-success\",\n          onClick: function onClick() {\n            return _this3.Clickupload(repo.ID_REPO);\n          },\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Upload\")), React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"button\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Download\")))));\n      })));\n    }\n  }]);\n\n  return Formatfile;\n}(React.Component);\n\nexport default Formatfile;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\format-file\\list-format-file.jsx"],"names":["React","Pageadmin","Row","Col","Card","CardTitle","CardText","Button","Input","Scroll","app","Formatfile","Clickupload","id","document","getElementById","click","setState","idrepo","upload","files","reader","FileReader","readAsDataURL","onload","formData","FormData","append","name","result","state","dataUser","IDLOGIN","apiPostFormdata","then","res","msgok","laporan","JSON","parse","localStorage","getItem","apiGet1","map","repo","IDACC_REPO","REPOSITORY","JENIS_REPO","ID_REPO","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Pageadmin from 'layouts/page-admin';\r\nimport { Row , Col , Card , CardTitle , CardText , Button ,Input}  from 'reactstrap'; \r\nimport Scroll from 'simplebar-react';\r\nimport app from 'app.js';\r\n\r\n\r\nclass Formatfile extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            laporan: [],\r\n            idrepo:''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        let id = JSON.parse(localStorage.getItem('user'))[0].IDLOGIN;    \r\n        app.apiGet1('formatfile' , id )\r\n           .then(res =>{\r\n               this.setState({\r\n                   laporan: res\r\n               })\r\n           })\r\n    }\r\n\r\n    Clickupload = (id)=>{\r\n        document.getElementById('file').click();\r\n        this.setState({\r\n            idrepo: id\r\n        })\r\n    }\r\n\r\n    upload = (idrepo) =>{\r\n        let files = document.getElementById('file').files;\r\n\r\n        let reader = new FileReader();\r\n            reader.readAsDataURL(files[0]);\r\n            reader.onload = ()=>{\r\n\r\n              let formData = new FormData();\r\n\r\n              formData.append('name' , files[0].name);\r\n              formData.append('files' , files[0]);\r\n              formData.append('blob' , reader.result);\r\n              formData.append('idrepo' , this.state.idrepo);\r\n              formData.append('iduser' ,app.dataUser[0].IDLOGIN);\r\n          \r\n              app.apiPostFormdata('formatfile' , formData)\r\n                 .then(res =>{\r\n                     if (res) {\r\n                         app.msgok('Berhasil Di Upload' , '/admin/format-file')\r\n                     }\r\n                 }) \r\n            } \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Pageadmin head={'Format File'}>\r\n                <Row >\r\n                    {\r\n                        this.state.laporan.map(repo =>\r\n                            <Col sm='4' key={repo.IDACC_REPO}>\r\n                                <Card className=\"card-pricing bg-gradient-primary border-0 text-center text-white mb-4\" body  >\r\n                                    <CardTitle >{repo.REPOSITORY}</CardTitle>\r\n                                    <CardText>{repo.JENIS_REPO}</CardText>\r\n                                    <Input type='file' id='file' hidden onChange={this.upload}/> \r\n                                    <Row>\r\n                                        <Col sm='6'>\r\n                                            <Button type='file' size='sm' className=\"btn-success\" onClick={()=> this.Clickupload(repo.ID_REPO)} style={{width:'100%'}}>Upload</Button>\r\n                                        </Col>\r\n                                        <Col sm='6'>\r\n                                            <Button type='button' size='sm' style={{ width: '100%'}}>Download</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>    \r\n                            </Col>\r\n                        )         \r\n                    }\r\n                </Row>\r\n            </Pageadmin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formatfile;"]},"metadata":{},"sourceType":"module"}