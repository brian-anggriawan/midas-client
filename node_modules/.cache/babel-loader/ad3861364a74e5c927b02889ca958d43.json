{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\list-file.jsx\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Pageadmin from 'layouts/page-admin';\nimport Formfile from './form-file';\nimport Listfiledetail from './list_file_detail';\nimport { Button, Row, Col, Card, CardText, Input } from 'reactstrap';\nimport app from 'app';\n\nvar listFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listFile, _React$Component);\n\n  function listFile() {\n    var _this;\n\n    _classCallCheck(this, listFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listFile).call(this));\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.mode2 = function () {\n      _this.setState({\n        modal2: !_this.state.modal2\n      });\n    };\n\n    _this.Showlist = function (kategori) {\n      app.apiGet1('uploadfile', kategori).then(function (res) {\n        _this.setState({\n          groupfile: res\n        });\n      });\n    };\n\n    _this.action = function (cell, row, enumObject, rowIndex) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: function onClick() {\n          return _this.onClickForm(rowIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"info\",\n        onClick: function onClick() {\n          return _this.onClickProductSelected(cell, row, rowIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"History File\"));\n    };\n\n    _this.state = {\n      repo: [],\n      groupfile: [],\n      filedetail: [],\n      modal: false,\n      modal2: false,\n      accperiod: [],\n      dataform: []\n    };\n    return _this;\n  }\n\n  _createClass(listFile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      app.apiGet('accperiod').then(function (res) {\n        _this2.setState({\n          accperiod: res\n        });\n      });\n      app.apiGet('periodtoday').then(function (res) {\n        var id = res[0].idperiod;\n        document.getElementById('period').value = id;\n      });\n      var idperiod = document.getElementById('period').value;\n      console.log(idperiod);\n      /*\r\n      app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN , idperiod)\r\n         .then(res =>{\r\n            this.setState({\r\n              repo: res\r\n            })\r\n         }) */\n    }\n  }, {\n    key: \"onClickProductSelected\",\n    value: function onClickProductSelected(cell, row, rowIndex) {\n      var _this3 = this;\n\n      var idtemplate = this.state.groupfile[rowIndex].ID_TEMPLATE,\n          idperiod = document.getElementById('period').value;\n      console.log(idtemplate, idperiod);\n      app.apiGet2('uploadfiledetail', idtemplate, idperiod).then(function (res) {\n        _this3.setState({\n          filedetail: res\n        });\n      });\n      this.setState({\n        modal: true\n      });\n      this.mode();\n    }\n  }, {\n    key: \"onClickForm\",\n    value: function onClickForm(rowindex) {\n      var idselect = document.getElementById('period');\n      var txselect = idselect.options[idselect.selectedIndex].text;\n      var data = [{\n        idperiod: document.getElementById('period').value,\n        idtemplate: this.state.groupfile[rowindex].ID_TEMPLATE,\n        directory: this.state.groupfile[rowindex].DIRECTORY,\n        period: txselect,\n        nodoc: this.state.groupfile[rowindex].NODOC,\n        repo: this.state.groupfile[rowindex].REPO\n      }];\n      this.setState({\n        dataform: data\n      });\n      this.mode2();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Pageadmin, {\n        head: 'List File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Listfiledetail, {\n        modal: this.state.modal,\n        mode: this.mode,\n        data: this.state.filedetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Formfile, {\n        modal: this.state.modal2,\n        mode: this.mode2,\n        data: this.state.dataform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"select\",\n        id: \"period\",\n        style: {\n          marginBottom: '10px',\n          width: '23%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.accperiod.map(function (data) {\n        return React.createElement(\"option\", {\n          key: data.VCIDACCPERIOD,\n          value: data.VCIDACCPERIOD,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, data.VCDESCRIPTION);\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.repo.map(function (repo) {\n        return React.createElement(Card, {\n          body: true,\n          key: repo.ID_REPO,\n          style: {\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(CardText, {\n          style: {\n            fontSize: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, repo.REPOSITORY), React.createElement(Button, {\n          color: \"primary\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this4.Showlist(repo.ID_REPO);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Show File\"));\n      })), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.groupfile,\n        bordered: false,\n        striped: true,\n        pagination: true,\n        options: app.optionTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"TEMPLATE\",\n        width: \"16%\",\n        isKey: true,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Periode\"), React.createElement(TableHeaderColumn, {\n        dataField: \"button\",\n        dataFormat: this.action.bind(this),\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Action\")))));\n    }\n  }]);\n\n  return listFile;\n}(React.Component);\n\nexport default listFile;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\list-file.jsx"],"names":["React","BootstrapTable","TableHeaderColumn","Pageadmin","Formfile","Listfiledetail","Button","Row","Col","Card","CardText","Input","app","listFile","mode","setState","modal","state","mode2","modal2","Showlist","kategori","apiGet1","then","res","groupfile","action","cell","row","enumObject","rowIndex","onClickForm","onClickProductSelected","repo","filedetail","accperiod","dataform","apiGet","id","idperiod","document","getElementById","value","console","log","idtemplate","ID_TEMPLATE","apiGet2","rowindex","idselect","txselect","options","selectedIndex","text","data","directory","DIRECTORY","period","nodoc","NODOC","REPO","marginBottom","width","map","VCIDACCPERIOD","VCDESCRIPTION","ID_REPO","fontSize","REPOSITORY","optionTable","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAiD,uBAAjD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,MAAT,EAAkBC,GAAlB,EAAwBC,GAAxB,EAA8BC,IAA9B,EAAqCC,QAArC,EAAgDC,KAAhD,QAA6D,YAA7D;AACA,OAAOC,GAAP,MAAgB,KAAhB;;IAEMC,Q;;;;;AACF,sBAAa;AAAA;;AAAA;;AACT;;AADS,UAeXC,IAfW,GAeJ,YAAK;AACR,YAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADT,OAAd;AAGH,KAnBU;;AAAA,UAqBXE,KArBW,GAqBH,YAAK;AACX,YAAKH,QAAL,CAAc;AACZI,QAAAA,MAAM,EAAE,CAAC,MAAKF,KAAL,CAAWE;AADR,OAAd;AAGD,KAzBU;;AAAA,UAuDXC,QAvDW,GAuDA,UAACC,QAAD,EAAa;AAEtBT,MAAAA,GAAG,CAACU,OAAJ,CAAY,YAAZ,EAAyBD,QAAzB,EACIE,IADJ,CACS,UAAAC,GAAG,EAAG;AACX,cAAKT,QAAL,CAAc;AACZU,UAAAA,SAAS,EAAED;AADC,SAAd;AAGA,OALJ;AAMD,KA/DU;;AAAA,UAyGXE,MAzGW,GAyGF,UAACC,IAAD,EAAOC,GAAP,EAAYC,UAAZ,EAAwBC,QAAxB,EAAmC;AAC1C,aACE,0CACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAKC,WAAL,CAAiBD,QAAjB,CAAL;AAAA,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAA6C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKE,sBAAL,CAA4BL,IAA5B,EAAkCC,GAAlC,EAAuCE,QAAvC,CAAN;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,CADF;AAOD,KAjHU;;AAGT,UAAKb,KAAL,GAAa;AACXgB,MAAAA,IAAI,EAAE,EADK;AAEXR,MAAAA,SAAS,EAAE,EAFA;AAGXS,MAAAA,UAAU,EAAC,EAHA;AAIXlB,MAAAA,KAAK,EAAE,KAJI;AAKXG,MAAAA,MAAM,EAAE,KALG;AAMXgB,MAAAA,SAAS,EAAE,EANA;AAOXC,MAAAA,QAAQ,EAAE;AAPC,KAAb;AAHS;AAYV;;;;wCAgBkB;AAAA;;AAEjBxB,MAAAA,GAAG,CAACyB,MAAJ,CAAW,WAAX,EACId,IADJ,CACS,UAAAC,GAAG,EAAG;AACV,QAAA,MAAI,CAACT,QAAL,CAAc;AACZoB,UAAAA,SAAS,EAAEX;AADC,SAAd;AAGD,OALJ;AAOAZ,MAAAA,GAAG,CAACyB,MAAJ,CAAW,aAAX,EACId,IADJ,CACS,UAAAC,GAAG,EAAG;AACX,YAAIc,EAAE,GAAGd,GAAG,CAAC,CAAD,CAAH,CAAOe,QAAhB;AACAC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,GAA0CJ,EAA1C;AACA,OAJJ;AAMA,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAjD;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA;;;;;;;AAOD;;;2CAYsBZ,I,EAAMC,G,EAAKE,Q,EAAS;AAAA;;AACzC,UAAIe,UAAU,GAAG,KAAK5B,KAAL,CAAWQ,SAAX,CAAqBK,QAArB,EAA+BgB,WAAhD;AAAA,UACIP,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KADjD;AAGIC,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ,EAAyBN,QAAzB;AAEA3B,MAAAA,GAAG,CAACmC,OAAJ,CAAY,kBAAZ,EAAiCF,UAAjC,EAA8CN,QAA9C,EACIhB,IADJ,CACS,UAAAC,GAAG,EAAG;AACX,QAAA,MAAI,CAACT,QAAL,CAAc;AACZmB,UAAAA,UAAU,EAAEV;AADA,SAAd;AAGA,OALJ;AAOA,WAAKT,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AADK,OAAd;AAIA,WAAKF,IAAL;AACJ;;;gCAEWkC,Q,EAAS;AAEnB,UAAIC,QAAQ,GAAIT,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAhB;AACA,UAAIS,QAAQ,GAAED,QAAQ,CAACE,OAAT,CAAiBF,QAAQ,CAACG,aAA1B,EAAyCC,IAAvD;AAEA,UAAIC,IAAI,GAAG,CAAC;AACVf,QAAAA,QAAQ,EAAEC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KADlC;AAEVG,QAAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWQ,SAAX,CAAqBuB,QAArB,EAA+BF,WAFjC;AAGVS,QAAAA,SAAS,EAAE,KAAKtC,KAAL,CAAWQ,SAAX,CAAqBuB,QAArB,EAA+BQ,SAHhC;AAIVC,QAAAA,MAAM,EAAGP,QAJC;AAKVQ,QAAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWQ,SAAX,CAAqBuB,QAArB,EAA+BW,KAL5B;AAMV1B,QAAAA,IAAI,EAAG,KAAKhB,KAAL,CAAWQ,SAAX,CAAqBuB,QAArB,EAA+BY;AAN5B,OAAD,CAAX;AAQD,WAAK7C,QAAL,CAAc;AACZqB,QAAAA,QAAQ,EAACkB;AADG,OAAd;AAGA,WAAKpC,KAAL;AAEA;;;6BAYO;AAAA;;AAEP,aACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWD,KAAnC;AAA0C,QAAA,IAAI,EAAG,KAAKF,IAAtD;AAA4D,QAAA,IAAI,EAAG,KAAKG,KAAL,CAAWiB,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,MAA5B;AAAoC,QAAA,IAAI,EAAE,KAAKD,KAA/C;AAAsD,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWmB,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAE;AAACyB,UAAAA,YAAY,EAAE,MAAf;AAAwBC,UAAAA,KAAK,EAAC;AAA9B,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,KAAK7C,KAAL,CAAWkB,SAAX,CAAqB4B,GAArB,CAAyB,UAAAT,IAAI;AAAA,eAC5B;AAAQ,UAAA,GAAG,EAAEA,IAAI,CAACU,aAAlB;AAAiC,UAAA,KAAK,EAAGV,IAAI,CAACU,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8DV,IAAI,CAACW,aAAnE,CAD4B;AAAA,OAA7B,CAFN,CAHA,EAUA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKhD,KAAL,CAAWgB,IAAX,CAAgB8B,GAAhB,CAAoB,UAAA9B,IAAI;AAAA,eACvB,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,GAAG,EAAEA,IAAI,CAACiC,OAArB;AAA8B,UAAA,KAAK,EAAE;AAAEL,YAAAA,YAAY,EAAE;AAAhB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAACM,YAAAA,QAAQ,EAAC;AAAV,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqClC,IAAI,CAACmC,UAA1C,CADD,EAEC,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,IAAI,EAAC,IAA7B;AAAkC,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAI,CAAChD,QAAL,CAAca,IAAI,CAACiC,OAAnB,CAAL;AAAA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFD,CADuB;AAAA,OAAxB,CAFF,CADJ,EAWI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,cAAD;AACE,QAAA,IAAI,EAAE,KAAKjD,KAAL,CAAWQ,SADnB;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,OAAO,MAHT;AAIE,QAAA,UAAU,EAAE,IAJd;AAKE,QAAA,OAAO,EAAEb,GAAG,CAACyD,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,iBAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,KAAK,EAAI,IAHX;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,EAaI,oBAAC,iBAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,UAAU,EAAE,KAAK3C,MAAL,CAAY4C,IAAZ,CAAiB,IAAjB,CAFd;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,CADR,CAXJ,CAVA,CADF;AAgDD;;;;EAtKgBtE,KAAK,CAACuE,S;;AAyK7B,eAAe1D,QAAf","sourcesContent":["import React from 'react';\r\nimport { BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport Pageadmin from 'layouts/page-admin';\r\nimport Formfile from './form-file';\r\nimport Listfiledetail from './list_file_detail';\r\nimport { Button , Row , Col , Card , CardText , Input } from 'reactstrap';\r\nimport app from 'app';\r\n\r\nclass listFile extends React.Component{\r\n    constructor(){\r\n        super()\r\n    \r\n        this.state = {\r\n          repo: [],\r\n          groupfile: [],\r\n          filedetail:[],\r\n          modal: false,\r\n          modal2: false,\r\n          accperiod: [],\r\n          dataform: []\r\n        }\r\n      }\r\n\r\n\r\n      mode = () =>{\r\n          this.setState({\r\n              modal: !this.state.modal\r\n          })\r\n      }\r\n\r\n      mode2 = () =>{\r\n        this.setState({\r\n          modal2: !this.state.modal2\r\n      })\r\n      }\r\n    \r\n    \r\n      componentDidMount(){\r\n\r\n        app.apiGet('accperiod')\r\n           .then(res =>{\r\n             this.setState({\r\n               accperiod: res\r\n             })\r\n           })\r\n        \r\n        app.apiGet('periodtoday')\r\n           .then(res =>{\r\n            let id = res[0].idperiod;\r\n            document.getElementById('period').value = id;\r\n           })\r\n        \r\n        let idperiod = document.getElementById('period').value;\r\n\r\n        console.log(idperiod)\r\n        /*\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN , idperiod)\r\n           .then(res =>{\r\n              this.setState({\r\n                repo: res\r\n              })\r\n           }) */\r\n      }\r\n\r\n      Showlist = (kategori) =>{\r\n\r\n        app.apiGet1('uploadfile',kategori)\r\n           .then(res =>{\r\n            this.setState({\r\n              groupfile: res\r\n            })\r\n           })\r\n      }\r\n\r\n      onClickProductSelected(cell, row, rowIndex){\r\n        let idtemplate = this.state.groupfile[rowIndex].ID_TEMPLATE,\r\n            idperiod = document.getElementById('period').value;\r\n\r\n            console.log(idtemplate , idperiod)\r\n\r\n            app.apiGet2('uploadfiledetail' , idtemplate , idperiod)\r\n               .then(res =>{\r\n                this.setState({\r\n                  filedetail: res\r\n                })\r\n               })\r\n\r\n            this.setState({\r\n              modal: true\r\n            })  \r\n            \r\n            this.mode();\r\n       }\r\n\r\n       onClickForm(rowindex){\r\n\r\n         let idselect  = document.getElementById('period');\r\n         let txselect= idselect.options[idselect.selectedIndex].text;\r\n\r\n         let data = [{\r\n           idperiod: document.getElementById('period').value,\r\n           idtemplate: this.state.groupfile[rowindex].ID_TEMPLATE,\r\n           directory: this.state.groupfile[rowindex].DIRECTORY,\r\n           period : txselect,\r\n           nodoc: this.state.groupfile[rowindex].NODOC,\r\n           repo : this.state.groupfile[rowindex].REPO\r\n         }]\r\n        this.setState({\r\n          dataform:data\r\n        })\r\n        this.mode2();\r\n\r\n       }\r\n\r\n      action = (cell, row, enumObject, rowIndex)=>{\r\n        return(\r\n          <>\r\n          <Button type=\"button\" size=\"sm\" color=\"success\" onClick={()=> this.onClickForm(rowIndex)}>Upload</Button>\r\n          <Button type=\"button\" size=\"sm\" color=\"info\" onClick={() => this.onClickProductSelected(cell, row, rowIndex)}>History File</Button>\r\n          </>\r\n          \r\n        )\r\n      }\r\n    \r\n      render() {\r\n\r\n        return (\r\n          <Pageadmin head={'List File'}>\r\n          <Listfiledetail modal= {this.state.modal} mode ={this.mode} data ={this.state.filedetail} />\r\n          <Formfile modal={this.state.modal2} mode={this.mode2} data={this.state.dataform} />\r\n          <Input type=\"select\" id=\"period\" style={{marginBottom: '10px' , width:'23%'}}>\r\n              {\r\n                this.state.accperiod.map(data =>\r\n                 <option key={data.VCIDACCPERIOD} value ={data.VCIDACCPERIOD}>{data.VCDESCRIPTION}</option> \r\n                )\r\n              }\r\n          </Input>\r\n          <Row>\r\n              <Col sm=\"3\"> \r\n              {\r\n                this.state.repo.map(repo =>\r\n                 <Card body key={repo.ID_REPO} style={{ marginBottom: '10px'}}>\r\n                  <CardText style={{fontSize:'15px'}}>{repo.REPOSITORY}</CardText>\r\n                  <Button color=\"primary\" size='sm' onClick={()=> this.Showlist(repo.ID_REPO)}>Show File</Button>\r\n                 </Card> \r\n                )\r\n              }\r\n              </Col>\r\n              <Col sm=\"9\">\r\n                      <BootstrapTable\r\n                        data={this.state.groupfile}\r\n                        bordered={false}\r\n                        striped\r\n                        pagination={true}\r\n                        options={app.optionTable}>\r\n                          <TableHeaderColumn\r\n                            dataField='TEMPLATE'\r\n                            width='16%'\r\n                            isKey = {true}\r\n                            dataSort>\r\n                            Periode\r\n                          </TableHeaderColumn>  \r\n                          <TableHeaderColumn\r\n                            dataField=\"button\"\r\n                            dataFormat={this.action.bind(this)}\r\n                            width='16%'\r\n                            dataSort>\r\n                            Action\r\n                          </TableHeaderColumn>\r\n                      </BootstrapTable>\r\n              </Col>\r\n            </Row>\r\n          </Pageadmin>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default listFile;"]},"metadata":{},"sourceType":"module"}