{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-access-repo\\\\form_access_repo.jsx\";\nimport React from 'react';\nimport Baselistmmodal from 'layouts/list_modal';\nimport app from 'app';\nimport { Button, Form, Input } from 'reactstrap';\nimport Scroll from 'simplebar-react';\nimport Table from 'layouts/tabel';\nimport Serilaze from 'form-serialize';\n\nvar formaccessrepo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(formaccessrepo, _React$Component);\n\n  function formaccessrepo() {\n    var _this;\n\n    _classCallCheck(this, formaccessrepo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(formaccessrepo).call(this));\n\n    _this.action = function (idrepo) {\n      return React.createElement(Button, {\n        color: \"primary\",\n        type: \"Button\",\n        onClick: function onClick() {\n          return _this.Save(idrepo);\n        },\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \" Pilih Repository\");\n    };\n\n    _this.select = function (e) {\n      _this.state.dataSelect.push({\n        idrepo: e.ID_REPO,\n        iduser: _this.props.user\n      });\n    };\n\n    _this.selectall = function (e) {\n      if (e) {\n        _this.props.repo.map(function (x) {\n          return _this.state.dataSelect.push({\n            idrepo: x.ID_REPO,\n            iduser: _this.props.user\n          });\n        });\n      }\n    };\n\n    _this.proses = function (idrepo) {\n      var form = document.getElementById('form');\n      var data = Serilaze(form, {\n        hash: true\n      });\n      console.log(data.cek);\n      /*\r\n      let data = this.state.dataSelect;\r\n      let count = this.state.dataSelect.length;\r\n      \r\n      for(let i  = 0 ; i < count; i++){\r\n          app.apiPostJson('accessrepo' ,{\r\n              idrepo: data[i].idrepo,\r\n              iduser: data[i].iduser\r\n          })\r\n      }\r\n      this.setState({\r\n          dataSelect:[]\r\n      })\r\n        this.props.test();\r\n      this.props.mode();*/\n    };\n\n    _this.cek = function (idrepo) {\n      return React.createElement(\"div\", {\n        className: \"custom-control custom-control-alternative custom-checkbox mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"custom-control-input\",\n        id: idrepo,\n        type: \"checkbox\",\n        name: \"cek\",\n        value: idrepo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: idrepo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Tambah\"));\n    };\n\n    _this.state = {\n      dataSelect: []\n    };\n    return _this;\n  }\n\n  _createClass(formaccessrepo, [{\n    key: \"Save\",\n    value: function Save(idrepo) {\n      var _this2 = this;\n\n      var user = this.props.user;\n      app.apiPostJson('accessrepo', {\n        idrepo: idrepo,\n        iduser: user\n      }).then(function (res) {\n        if (res) {\n          _this2.props.mode();\n\n          _this2.props.test();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Baselistmmodal, {\n        modal: this.props.modal,\n        mode: this.props.mode,\n        title: 'Tambah Access Repository',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        color: \"success\",\n        onClick: this.proses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" Simpan \"), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form, {\n        id: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Table, {\n        data: this.props.repo,\n        keyField: 'ID_REPO',\n        columns: [{\n          dataField: 'REPOSITORY',\n          text: 'Repository'\n        }, {\n          dataField: 'KETERANGAN',\n          text: 'Keterangan'\n        }, {\n          dataField: 'JENIS_REPO',\n          text: 'Jenis Repo'\n        }, {\n          dataField: 'ID_REPO',\n          text: 'Action',\n          formatter: this.cek\n        }],\n        width: {\n          width: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return formaccessrepo;\n}(React.Component);\n\nexport default formaccessrepo;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-access-repo\\form_access_repo.jsx"],"names":["React","Baselistmmodal","app","Button","Form","Input","Scroll","Table","Serilaze","formaccessrepo","action","idrepo","Save","select","e","state","dataSelect","push","ID_REPO","iduser","props","user","selectall","repo","map","x","proses","form","document","getElementById","data","hash","console","log","cek","apiPostJson","then","res","mode","test","modal","dataField","text","formatter","width","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAAQC,MAAR,EAAiBC,IAAjB,EAAwBC,KAAxB,QAAoC,YAApC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,c;;;;;AACF,4BAAa;AAAA;;AAAA;;AACT;;AADS,UAObC,MAPa,GAON,UAACC,MAAD,EAAU;AACb,aAAO,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAKC,IAAL,CAAUD,MAAV,CAAL;AAAA,SAA/C;AAAuE,QAAA,IAAI,EAAC,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH,KATY;;AAAA,UA0BbE,MA1Ba,GA0BJ,UAACC,CAAD,EAAM;AACX,YAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2B;AACvBN,QAAAA,MAAM,EAAEG,CAAC,CAACI,OADa;AAEvBC,QAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWC;AAFI,OAA3B;AAIH,KA/BY;;AAAA,UAiCbC,SAjCa,GAiCD,UAACR,CAAD,EAAK;AACb,UAAIA,CAAJ,EAAO;AACH,cAAKM,KAAL,CAAWG,IAAX,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC;AAAA,iBACjB,MAAKV,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2B;AACvBN,YAAAA,MAAM,EAAEc,CAAC,CAACP,OADa;AAEvBC,YAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWC;AAFI,WAA3B,CADiB;AAAA,SAArB;AAMH;AACJ,KA1CY;;AAAA,UA8CbK,MA9Ca,GA8CJ,UAACf,MAAD,EAAW;AAChB,UAAIgB,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AAEA,UAAIC,IAAI,GAAGtB,QAAQ,CAACmB,IAAD,EAAQ;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAR,CAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAjB;AACA;;;;;;;;;;;;;;;AAkBH,KAtEY;;AAAA,UAwEbA,GAxEa,GAwEP,UAACvB,MAAD,EAAW;AACb,aACI;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,EAAE,EAAEA,MAFN;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,IAAI,EAAC,KAJP;AAKE,QAAA,KAAK,EAAEA,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAQA;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAwC,QAAA,OAAO,EAAEA,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARA,CADJ;AAcH,KAvFY;;AAET,UAAKI,KAAL,GAAY;AACRC,MAAAA,UAAU,EAAG;AADL,KAAZ;AAFS;AAKZ;;;;yBAMIL,M,EAAO;AAAA;;AACR,UAAIU,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AAEAnB,MAAAA,GAAG,CAACiC,WAAJ,CAAgB,YAAhB,EAA6B;AACzBxB,QAAAA,MAAM,EAAEA,MADiB;AAEzBQ,QAAAA,MAAM,EAAEE;AAFiB,OAA7B,EAICe,IAJD,CAIM,UAAAC,GAAG,EAAG;AACR,YAAIA,GAAJ,EAAS;AACL,UAAA,MAAI,CAACjB,KAAL,CAAWkB,IAAX;;AACA,UAAA,MAAI,CAAClB,KAAL,CAAWmB,IAAX;AACH;AACJ,OATD;AAUH;;;6BAiEO;AACJ,aACI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWoB,KAAlC;AAAyC,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWkB,IAA1D;AAAgE,QAAA,KAAK,EAAE,0BAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAsC,QAAA,OAAO,EAAE,KAAKZ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWG,IADrB;AAEI,QAAA,QAAQ,EAAE,SAFd;AAGI,QAAA,OAAO,EAAG,CACN;AACIkB,UAAAA,SAAS,EAAE,YADf;AAEIC,UAAAA,IAAI,EAAC;AAFT,SADM,EAKN;AACID,UAAAA,SAAS,EAAE,YADf;AAEIC,UAAAA,IAAI,EAAE;AAFV,SALM,EASN;AACID,UAAAA,SAAS,EAAE,YADf;AAEIC,UAAAA,IAAI,EAAE;AAFV,SATM,EAaN;AACID,UAAAA,SAAS,EAAE,SADf;AAEIC,UAAAA,IAAI,EAAE,QAFV;AAGIC,UAAAA,SAAS,EAAE,KAAKT;AAHpB,SAbM,CAHd;AAsBI,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAC;AAAP,SAtBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,CAFJ,CADJ;AAiCH;;;;EA5HwB5C,KAAK,CAAC6C,S;;AA+HnC,eAAepC,cAAf","sourcesContent":["import React from 'react';\r\nimport Baselistmmodal from 'layouts/list_modal';\r\nimport app from 'app';\r\nimport {Button , Form , Input} from 'reactstrap';\r\nimport Scroll from 'simplebar-react';\r\nimport Table from 'layouts/tabel';\r\nimport Serilaze from 'form-serialize';\r\n\r\nclass formaccessrepo extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            dataSelect : []\r\n        }\r\n    }\r\n\r\n    action=(idrepo)=>{\r\n        return <Button color=\"primary\" type=\"Button\" onClick={()=> this.Save(idrepo)} size=\"sm\"> Pilih Repository</Button>\r\n    }\r\n\r\n    Save(idrepo){\r\n        let user = this.props.user\r\n\r\n        app.apiPostJson('accessrepo',{\r\n            idrepo: idrepo,\r\n            iduser: user\r\n        })\r\n        .then(res =>{\r\n            if (res) {\r\n                this.props.mode();\r\n                this.props.test();\r\n            }\r\n        })\r\n    }\r\n\r\n    select = (e) =>{\r\n        this.state.dataSelect.push({\r\n            idrepo: e.ID_REPO,\r\n            iduser: this.props.user\r\n        })\r\n    }\r\n\r\n    selectall = (e)=>{\r\n        if (e) {\r\n            this.props.repo.map(x =>\r\n                this.state.dataSelect.push({\r\n                    idrepo: x.ID_REPO,\r\n                    iduser: this.props.user\r\n                })    \r\n            )\r\n        }\r\n    }\r\n\r\n    clear\r\n\r\n    proses = (idrepo) =>{\r\n        let form = document.getElementById('form');\r\n\r\n        let data = Serilaze(form , { hash: true });\r\n\r\n        console.log(data.cek)\r\n        /*\r\n        let data = this.state.dataSelect;\r\n        let count = this.state.dataSelect.length;\r\n        \r\n        for(let i  = 0 ; i < count; i++){\r\n            app.apiPostJson('accessrepo' ,{\r\n                idrepo: data[i].idrepo,\r\n                iduser: data[i].iduser\r\n            })\r\n        }\r\n        this.setState({\r\n            dataSelect:[]\r\n        })\r\n\r\n        this.props.test();\r\n        this.props.mode();*/\r\n            \r\n           \r\n    }\r\n\r\n    cek = (idrepo) =>{\r\n        return (\r\n            <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n            <Input\r\n              className=\"custom-control-input\"\r\n              id={idrepo}\r\n              type=\"checkbox\"\r\n              name='cek'\r\n              value={idrepo}\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor={idrepo}>\r\n              Tambah\r\n            </label>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Baselistmmodal modal={this.props.modal} mode={this.props.mode} title={'Tambah Access Repository'}>\r\n            <Button type='button' color='success' onClick={this.proses}> Simpan </Button>\r\n                <Scroll>\r\n                    <Form id='form'>\r\n                    <Table\r\n                        data={this.props.repo}\r\n                        keyField={'ID_REPO'}\r\n                        columns ={[\r\n                            {\r\n                                dataField: 'REPOSITORY',\r\n                                text:'Repository'\r\n                            },\r\n                            {\r\n                                dataField: 'KETERANGAN',\r\n                                text: 'Keterangan'\r\n                            },\r\n                            {\r\n                                dataField: 'JENIS_REPO',\r\n                                text: 'Jenis Repo'\r\n                            },\r\n                            {\r\n                                dataField: 'ID_REPO',\r\n                                text: 'Action',\r\n                                formatter: this.cek\r\n                            }\r\n                        ]}\r\n                        width={{width:'300px'}}   \r\n                    />\r\n                    </Form>\r\n                </Scroll>\r\n            </Baselistmmodal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default formaccessrepo;"]},"metadata":{},"sourceType":"module"}