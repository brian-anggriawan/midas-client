{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport AuthService from 'AuthService';\nexport default function withAuth(View) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(Auth, _Component);\n\n      function Auth() {\n        var _this;\n\n        _classCallCheck(this, Auth);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Auth).call(this));\n        _this.state = {\n          user: null\n        };\n        return _this;\n      }\n\n      _createClass(Auth, [{\n        key: \"componentWillMount\",\n        value: function componentWillMount() {\n          if (!AuthService.loggedin()) {\n            this.props.history.replace('/login');\n          } else {\n            try {\n              var profile = AuthService.getProfile();\n              this.setState({\n                user: profile\n              });\n            } catch (err) {\n              AuthService.logout();\n              this.props.history.replace('/login');\n            }\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.user) {\n            return 'Haloo';\n          } else {\n            return null;\n          }\n        }\n      }]);\n\n      return Auth;\n    }(Component)\n  );\n}","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\withAuth.js"],"names":["React","Component","AuthService","withAuth","View","state","user","loggedin","props","history","replace","profile","getProfile","setState","err","logout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAEnC;AAAA;AAAA;AAAA;;AACI,sBAAa;AAAA;;AAAA;;AACT;AACA,cAAKC,KAAL,GAAa;AACTC,UAAAA,IAAI,EAAE;AADG,SAAb;AAFS;AAKZ;;AANL;AAAA;AAAA,6CAQwB;AAChB,cAAI,CAACJ,WAAW,CAACK,QAAZ,EAAL,EAA6B;AACzB,iBAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH,WAFD,MAEK;AACD,gBAAG;AACC,kBAAIC,OAAO,GAAGT,WAAW,CAACU,UAAZ,EAAd;AACA,mBAAKC,QAAL,CAAc;AACVP,gBAAAA,IAAI,EAAEK;AADI,eAAd;AAGH,aALD,CAMA,OAAMG,GAAN,EAAU;AACNZ,cAAAA,WAAW,CAACa,MAAZ;AACA,mBAAKP,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AAEH;AACJ;AACJ;AAxBL;AAAA;AAAA,iCA0BY;AACJ,cAAI,KAAKL,KAAL,CAAWC,IAAf,EAAqB;AACjB,mBAAO,OAAP;AACH,WAFD,MAEK;AACD,mBAAO,IAAP;AACH;AACJ;AAhCL;;AAAA;AAAA,MAA0BL,SAA1B;AAAA;AAkCH","sourcesContent":["import React ,  { Component } from 'react';\r\nimport AuthService from 'AuthService';\r\n\r\nexport default function withAuth(View) {\r\n    \r\n    return class Auth extends Component{\r\n        constructor(){\r\n            super()\r\n            this.state = {\r\n                user: null\r\n            }\r\n        }\r\n\r\n        componentWillMount(){\r\n            if (!AuthService.loggedin()) {\r\n                this.props.history.replace('/login');\r\n            }else{\r\n                try{\r\n                    let profile = AuthService.getProfile();\r\n                    this.setState({\r\n                        user: profile\r\n                    })\r\n                }\r\n                catch(err){\r\n                    AuthService.logout();\r\n                    this.props.history.replace('/login');\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        render(){\r\n            if (this.state.user) {\r\n                return 'Haloo'\r\n            }else{\r\n                return null\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}