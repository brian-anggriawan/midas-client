{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\format-file\\\\list-format-file.jsx\";\nimport React from 'react';\nimport Pageadmin from 'layouts/page-admin';\nimport { Row, Col, Card, CardTitle, CardText, Button, Input } from 'reactstrap';\nimport Scroll from 'simplebar-react';\nimport Detail from './list-detail-format-file';\nimport app from 'app';\n\nvar Formatfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Formatfile, _React$Component);\n\n  function Formatfile() {\n    var _this;\n\n    _classCallCheck(this, Formatfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Formatfile).call(this));\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.Listdetail =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return app.apiGet1('formatfile/detail', id);\n\n              case 2:\n                data = _context.sent;\n\n                _this.setState({\n                  detail: data\n                });\n\n                _this.mode();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.Clickupload = function (id) {\n      document.getElementById('file').click();\n\n      _this.setState({\n        idrepo: id\n      });\n    };\n\n    _this.upload = function () {\n      var files = document.getElementById('file').files;\n      var reader = new FileReader();\n      reader.readAsDataURL(files[0]);\n\n      reader.onload = function () {\n        var formData = new FormData();\n        formData.append('name', files[0].name);\n        formData.append('files', files[0]);\n        formData.append('blob', reader.result);\n        formData.append('idrepo', _this.state.idrepo);\n        formData.append('iduser', app.dataUser[0].IDLOGIN);\n        app.apiUpdate('formatfile', {\n          idrepo: _this.state.idrepo\n        }).then(function (res) {\n          if (res) {\n            app.apiPostFormdata('formatfile', formData).then(function (res) {\n              if (res) {\n                app.msgok('Berhasil Di Upload', '/admin/format-file');\n              }\n            });\n          }\n        });\n      };\n    };\n\n    _this.Filter = function (e) {\n      _this.setState({\n        filterLaporan: e.target.value\n      });\n    };\n\n    _this.state = {\n      laporan: [],\n      idrepo: '',\n      modal: false,\n      detail: [],\n      filterLaporan: ''\n    };\n    return _this;\n  }\n\n  _createClass(Formatfile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var id = JSON.parse(localStorage.getItem('user'))[0].IDLOGIN;\n      app.apiGet1('formatfile', id).then(function (res) {\n        _this2.setState({\n          laporan: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          laporan = _this$state.laporan,\n          filterLaporan = _this$state.filterLaporan;\n      var data = laporan.filter(function (x) {});\n      return React.createElement(Pageadmin, {\n        head: 'Format File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Detail, {\n        data: this.state.detail,\n        mode: this.mode,\n        modal: this.state.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Cari Laporan\",\n        onChange: this.Filter,\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        style: {\n          height: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.laporan.map(function (repo) {\n        return React.createElement(Col, {\n          sm: \"4\",\n          key: repo.IDACC_REPO,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"card-pricing bg-gradient-primary border-0 text-center text-white mb-4\",\n          body: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, repo.REPOSITORY), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, repo.JENIS_REPO), React.createElement(Input, {\n          type: \"file\",\n          id: \"file\",\n          hidden: true,\n          onChange: _this3.upload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"file\",\n          size: \"sm\",\n          className: \"btn-success\",\n          onClick: function onClick() {\n            return _this3.Clickupload(repo.ID_REPO);\n          },\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Upload\")), React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, repo.JUMLAH_FORMAT === 0 ? React.createElement(Button, {\n          type: \"file\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Belum Upload\") : React.createElement(Button, {\n          type: \"file\",\n          onClick: function onClick() {\n            return _this3.Listdetail(repo.ID_REPO);\n          },\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Download\")))));\n      }))));\n    }\n  }]);\n\n  return Formatfile;\n}(React.Component);\n\nexport default Formatfile;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\format-file\\list-format-file.jsx"],"names":["React","Pageadmin","Row","Col","Card","CardTitle","CardText","Button","Input","Scroll","Detail","app","Formatfile","mode","setState","modal","state","Listdetail","id","apiGet1","data","detail","Clickupload","document","getElementById","click","idrepo","upload","files","reader","FileReader","readAsDataURL","onload","formData","FormData","append","name","result","dataUser","IDLOGIN","apiUpdate","then","res","apiPostFormdata","msgok","Filter","e","filterLaporan","target","value","laporan","JSON","parse","localStorage","getItem","filter","x","height","map","repo","IDACC_REPO","REPOSITORY","JENIS_REPO","ID_REPO","width","JUMLAH_FORMAT","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Pageadmin from 'layouts/page-admin';\r\nimport { Row , Col , Card , CardTitle , CardText , Button ,Input}  from 'reactstrap'; \r\nimport Scroll from 'simplebar-react';\r\nimport Detail from './list-detail-format-file';\r\nimport app from 'app';\r\n\r\n\r\nclass Formatfile extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            laporan: [],\r\n            idrepo:'',\r\n            modal: false,\r\n            detail: [],\r\n            filterLaporan:''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        let id = JSON.parse(localStorage.getItem('user'))[0].IDLOGIN;    \r\n        app.apiGet1('formatfile' , id )\r\n           .then(res =>{\r\n               this.setState({\r\n                   laporan: res\r\n               })\r\n           })\r\n    }\r\n\r\n    mode =()=>{\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    Listdetail =  async (id) =>{\r\n        let data = await app.apiGet1('formatfile/detail' , id);\r\n        this.setState({\r\n            detail: data\r\n        })\r\n\r\n        this.mode();\r\n    }\r\n\r\n    Clickupload = (id)=>{\r\n        document.getElementById('file').click();\r\n        this.setState({\r\n            idrepo: id\r\n        })\r\n    }\r\n\r\n    upload = () =>{\r\n        let files = document.getElementById('file').files;\r\n\r\n        let reader = new FileReader();\r\n            reader.readAsDataURL(files[0]);\r\n            reader.onload = ()=>{\r\n\r\n              let formData = new FormData();\r\n\r\n              formData.append('name' , files[0].name);\r\n              formData.append('files' , files[0]);\r\n              formData.append('blob' , reader.result);\r\n              formData.append('idrepo' , this.state.idrepo);\r\n              formData.append('iduser' ,app.dataUser[0].IDLOGIN);\r\n\r\n              app.apiUpdate('formatfile' , { idrepo: this.state.idrepo})\r\n                 .then((res)=>{\r\n                    if (res) {\r\n                        app.apiPostFormdata('formatfile' , formData)\r\n                            .then(res =>{\r\n                                if (res) {\r\n                                    app.msgok('Berhasil Di Upload' , '/admin/format-file')\r\n                                }\r\n                            })  \r\n                     }\r\n                 })\r\n            } \r\n    }\r\n\r\n    Filter = (e) =>{\r\n        this.setState({\r\n            filterLaporan: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        let { laporan , filterLaporan } = this.state;\r\n\r\n        let data = laporan.filter(x =>{\r\n            \r\n        })\r\n        return(\r\n            <Pageadmin head={'Format File'}>\r\n            <Detail data={this.state.detail} mode={this.mode} modal={this.state.modal}/>\r\n            <Input type='text' placeholder='Cari Laporan' onChange={this.Filter}  className='mb-2'/>\r\n            <Scroll style={{height: '700px'}}>\r\n                <Row >  \r\n                    {\r\n                        this.state.laporan.map(repo =>\r\n                            <Col sm='4' key={repo.IDACC_REPO}>\r\n                                <Card className=\"card-pricing bg-gradient-primary border-0 text-center text-white mb-4\" body  >\r\n                                    <CardTitle >{repo.REPOSITORY}</CardTitle>\r\n                                    <CardText>{repo.JENIS_REPO}</CardText>\r\n                                    <Input type='file' id='file' hidden onChange={this.upload}/> \r\n                                    <Row>\r\n                                        <Col sm='6'>\r\n                                            <Button type='file' size='sm' className=\"btn-success\" onClick={()=> this.Clickupload(repo.ID_REPO)} style={{width:'100%'}}>Upload</Button>\r\n                                        </Col>\r\n                                        <Col sm='6'>\r\n                                          {\r\n                                              repo.JUMLAH_FORMAT === 0 ? <Button type='file' size='sm' style={{width:'100%'}} disabled>Belum Upload</Button>\r\n                                              :  <Button type='file' onClick={()=> this.Listdetail(repo.ID_REPO)}  size='sm'style={{width:'100%'}}>Download</Button>\r\n                                          }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>    \r\n                            </Col>\r\n                        )         \r\n                    }\r\n                </Row>\r\n            </Scroll>\r\n            </Pageadmin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formatfile;"]},"metadata":{},"sourceType":"module"}