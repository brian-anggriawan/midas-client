{"ast":null,"code":"import _objectSpread from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport sw from 'sweetalert2';\nimport Decode from 'jwt-decode';\n\nvar redux = require('redux');\n\nvar encode = function encode(file) {\n  var reader = new FileReader();\n\n  reader.onloadend = function () {\n    return reader.result;\n  };\n\n  return reader.readAsDataURL(file);\n};\n/* API */\n\n\nvar proxy = 'http://192.168.40.88:4000/api/';\nvar proxylogin = 'http://192.168.40.88:4000/login';\n/*let header = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n}*/\n\nvar token = 'Bearer ' + localStorage.getItem('token');\nvar head1 = {\n  'Content-Type': 'application/json',\n  'Authorization': token\n};\nvar head2 = {\n  'Authorization': token\n};\n\nvar apiGet = function apiGet(url) {\n  return fetch(proxy + url, {\n    method: 'get',\n    headers: head1\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiGet1 = function apiGet1(url, params1) {\n  return fetch(proxy + url + '/' + params1, {\n    method: 'get',\n    headers: head1\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiGet2 = function apiGet2(url, params1, params2) {\n  return fetch(proxy + url + '/' + params1 + '/' + params2, {\n    method: 'get',\n    headers: head1\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiPostFormdata = function apiPostFormdata(url, data) {\n  return fetch(proxy + url, {\n    method: 'post',\n    headers: head2,\n    body: data\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiPostJson = function apiPostJson(url, data) {\n  return fetch(proxy + url, {\n    method: 'post',\n    headers: head1,\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n\nvar apiLogin = function apiLogin(data) {\n  return fetch(proxylogin, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};\n/* API */\n\n/* SWET ALERT */\n\n\nvar msgerror = function msgerror(msg) {\n  sw.fire({\n    type: 'error',\n    title: 'Oops...',\n    text: msg\n  });\n};\n\nvar msgok = function msgok(msg, url) {\n  sw.fire({\n    type: \"success\",\n    title: \"Berhasil\",\n    text: msg\n  }).then(function () {\n    window.location.href = url;\n  });\n};\n/* SWET ALERT */\n\n/* REDUX */\n\n\nvar createStore = redux.createStore;\nvar reduxState = {\n  user: []\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : reduxState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_USER':\n      return _objectSpread({}, state, {\n        user: action.data\n      });\n\n    case 'LOGOUT':\n      return _objectSpread({}, state, {\n        user: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(rootReducer);\n/* REDUX */\n\n/* Auth */\n\nvar login = function login(user, pass) {\n  var data = {\n    name: user,\n    pass: pass\n  };\n  return apiLogin(data).then(function (res) {\n    if (res.sucess) {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('user', res.data);\n      msgok('Berhasil Login', '/');\n    } else {\n      msgerror('Username Dan Password Salah');\n    }\n  });\n};\n\nvar loggedin = function loggedin() {\n  var token = localStorage.getItem('token');\n  return !!token && !isTokenExpired(token);\n};\n\nvar isTokenExpired = function isTokenExpired(token) {\n  try {\n    var decode = Decode(token);\n\n    if (decode.exp < Date.now() / 1000) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n\nvar logout = function logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  msgok('Berhasil Logout', '/login');\n};\n/* Auth */\n\n\nexport default {\n  encode: encode,\n  proxy: proxy,\n  apiGet: apiGet,\n  apiGet1: apiGet1,\n  apiGet2: apiGet2,\n  apiPostJson: apiPostJson,\n  apiPostFormdata: apiPostFormdata,\n  msgerror: msgerror,\n  msgok: msgok,\n  login: login,\n  loggedin: loggedin,\n  logout: logout,\n  head1: head1,\n  store: store,\n  head2: head2\n};","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\app.js"],"names":["sw","Decode","redux","require","encode","file","reader","FileReader","onloadend","result","readAsDataURL","proxy","proxylogin","token","localStorage","getItem","head1","head2","apiGet","url","fetch","method","headers","then","res","json","data","apiGet1","params1","apiGet2","params2","apiPostFormdata","body","apiPostJson","JSON","stringify","apiLogin","msgerror","msg","fire","type","title","text","msgok","window","location","href","createStore","reduxState","user","rootReducer","state","action","store","login","pass","name","sucess","setItem","loggedin","isTokenExpired","decode","exp","Date","now","err","logout","removeItem"],"mappings":"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","sourcesContent":["import sw from 'sweetalert2';\r\nimport Decode from 'jwt-decode';\r\nconst redux  =  require('redux');\r\n\r\n\r\nlet encode = (file)=>{\r\n\r\nvar reader = new FileReader();\r\nreader.onloadend = ()=>{\r\n    return reader.result;\r\n}\r\n\r\nreturn reader.readAsDataURL(file)\r\n\r\n    \r\n}\r\n\r\n/* API */\r\n\r\n    let proxy = 'http://192.168.40.88:4000/api/';\r\n    let proxylogin = 'http://192.168.40.88:4000/login';\r\n    /*let header = {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }*/\r\n\r\n    let token = 'Bearer ' + localStorage.getItem('token');\r\n    let head1 = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n    };\r\n\r\n    let head2 = {\r\n        'Authorization': token\r\n    }\r\n\r\n    let apiGet = (url)=>{\r\n        return fetch(proxy+url , {\r\n            method: 'get',\r\n            headers: head1\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data\r\n        })     \r\n    }\r\n\r\n    let apiGet1 = (url , params1)=>{\r\n        return fetch(proxy+url+'/'+params1 , {\r\n            method: 'get',\r\n            headers: head1\r\n\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data\r\n        })\r\n    }\r\n\r\n    let apiGet2 = (url , params1 , params2)=>{\r\n        return fetch(proxy+url+'/'+params1+'/'+params2 , {\r\n            method: 'get',\r\n            headers: head1\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data\r\n        })\r\n    }\r\n\r\n\r\n    let apiPostFormdata = (url , data)=>{\r\n        return fetch(proxy+url,{\r\n            method: 'post',\r\n            headers: head2,\r\n            body: data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data;\r\n        })\r\n    }\r\n\r\n\r\n    let apiPostJson = (url , data)=>{\r\n        return fetch(proxy+url,{\r\n            method: 'post',\r\n            headers: head1,\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data;\r\n        })\r\n    }\r\n\r\n    let apiLogin = (data)=>{\r\n        return fetch(proxylogin,{\r\n            method: 'post',\r\n            headers: { 'Content-Type':'application/json'},\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            return data;\r\n        })\r\n    }\r\n/* API */\r\n\r\n/* SWET ALERT */\r\n    let msgerror = (msg) =>{\r\n        sw.fire({\r\n        type: 'error',\r\n        title: 'Oops...',\r\n        text: msg\r\n        })\r\n    }\r\n\r\n    let msgok =(msg , url)=>{\r\n        sw.fire({\r\n            type: \"success\",\r\n            title: \"Berhasil\",\r\n            text: msg  \r\n        }).then(()=>{\r\n            window.location.href = url\r\n        })\r\n    }\r\n/* SWET ALERT */\r\n\r\n/* REDUX */\r\n\r\nlet createStore = redux.createStore;\r\nlet reduxState = {\r\n    user: []\r\n}\r\n\r\nlet rootReducer = (state = reduxState , action)=>{\r\n    switch(action.type){\r\n        case 'ADD_USER':\r\n            return{\r\n                ...state,\r\n                user: action.data\r\n            }\r\n        case 'LOGOUT':\r\n            return{\r\n                ...state,\r\n                user: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nlet store = createStore(rootReducer);\r\n\r\n\r\n\r\n\r\n/* REDUX */\r\n\r\n/* Auth */\r\n\r\n    let login = (user , pass)=>{\r\n        let data = {\r\n            name: user,\r\n            pass: pass\r\n        }\r\n        return apiLogin(data)\r\n                .then(res =>{\r\n                    if (res.sucess) {\r\n                        localStorage.setItem('token',res.token)\r\n                        localStorage.setItem('user', res.data)\r\n                        msgok('Berhasil Login','/')\r\n                    }else{\r\n                        msgerror('Username Dan Password Salah')\r\n                    }\r\n                })\r\n    }\r\n\r\n    let loggedin = ()=>{\r\n        let token = localStorage.getItem('token');\r\n        return !!token && !isTokenExpired(token)\r\n    \r\n\r\n    }\r\n\r\n    let isTokenExpired = (token)=>{\r\n        try{\r\n            let decode = Decode(token);\r\n\r\n            if (decode.exp < Date.now() / 1000){\r\n                return true\r\n            }else{\r\n                return false\r\n            }\r\n        }\r\n\r\n        catch(err){\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    let logout = ()=>{\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        msgok('Berhasil Logout','/login');\r\n        \r\n      \r\n    }\r\n\r\n\r\n/* Auth */\r\n\r\n\r\nexport default { encode , \r\n                 proxy , \r\n                 apiGet , \r\n                 apiGet1 , \r\n                 apiGet2 ,\r\n                 apiPostJson ,\r\n                 apiPostFormdata , \r\n                 msgerror , \r\n                 msgok ,\r\n                 login , \r\n                 loggedin ,\r\n                 logout,\r\n                 head1,\r\n                 store,\r\n                 head2}"]},"metadata":{},"sourceType":"module"}