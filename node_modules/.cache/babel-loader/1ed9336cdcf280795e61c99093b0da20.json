{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\laporan-analisa\\\\list_laporan_detail.jsx\";\nimport React from 'react';\nimport Baselistmmodal from 'layouts/list_modal';\nimport { Button } from 'reactstrap';\nimport download from 'downloadjs';\nimport Loading from 'layouts/loading-modal';\nimport Scroll from 'simplebar-react';\nimport Tabel from 'layouts/tabel';\nimport app from 'app';\n\nvar listlaporandetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listlaporandetail, _React$Component);\n\n  function listlaporandetail(props) {\n    var _this;\n\n    _classCallCheck(this, listlaporandetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listlaporandetail).call(this, props));\n\n    _this.action = function (id) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this.Downloadfile(id);\n        },\n        outline: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Download\"));\n    };\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.state = {\n      modal: false\n    };\n    return _this;\n  }\n\n  _createClass(listlaporandetail, [{\n    key: \"Downloadfile\",\n    value: function () {\n      var _Downloadfile = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var data, idfile, name, res, blob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = this.props.data.filter(function (res) {\n                  return res.ID_FILE === id;\n                })[0];\n                idfile = data.ID_FILE;\n                name = data.ORIGINAL_NAME;\n                this.mode();\n                _context.next = 6;\n                return fetch(app.proxy + 'downloadfile/' + idfile, {\n                  method: 'get',\n                  headers: app.head2\n                });\n\n              case 6:\n                res = _context.sent;\n\n                if (!res) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 10;\n                return res.blob();\n\n              case 10:\n                blob = _context.sent;\n                download(blob, name);\n                this.mode();\n                app.apiGet1('deletefile', idfile);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function Downloadfile(_x) {\n        return _Downloadfile.apply(this, arguments);\n      }\n\n      return Downloadfile;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Baselistmmodal, {\n        modal: this.props.modal,\n        mode: this.props.mode,\n        title: 'List Detail',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        modal: this.state.modal,\n        text: 'Proses Download',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.flag === 1 ? React.createElement(Tabel, {\n        data: this.props.data,\n        keyField: 'ID_FILE',\n        columns: [{\n          dataField: 'TEMPLATE',\n          text: 'Periode'\n        }, {\n          dataField: 'LAST_UPLOAD',\n          text: 'Last Upload'\n        }, {\n          dataField: 'JUMLAH_REVISI',\n          text: 'Jumlah Revisi'\n        }, {\n          dataField: 'ID_FILE',\n          text: 'Action',\n          formatter: this.action\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : this.props.flag === 2 ? React.createElement(Tabel, {\n        keyField: 'TEMPLATE',\n        data: this.props.data,\n        columns: [{\n          dataField: 'REPO',\n          text: 'Laporan'\n        }, {\n          dataField: 'TEMPLATE',\n          text: 'Periode'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : this.props === 3 ? React.createElement(Tabel, {\n        keyField: 'USERNAME',\n        data: this.props.data,\n        columns: [{\n          dataField: 'USERNAME',\n          text: 'Nama User'\n        }, {\n          dataField: 'SBU',\n          text: 'SBU'\n        }, {\n          dataField: 'DIVISION',\n          text: 'DIVISION'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }) : ''))))));\n    }\n  }]);\n\n  return listlaporandetail;\n}(React.Component);\n\nexport default listlaporandetail;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\laporan-analisa\\list_laporan_detail.jsx"],"names":["React","Baselistmmodal","Button","download","Loading","Scroll","Tabel","app","listlaporandetail","props","action","id","Downloadfile","mode","setState","modal","state","data","filter","res","ID_FILE","idfile","name","ORIGINAL_NAME","fetch","proxy","method","headers","head2","blob","apiGet1","flag","dataField","text","formatter","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Baselistmmodal from 'layouts/list_modal';\r\nimport {Button } from 'reactstrap';\r\nimport download from 'downloadjs';\r\nimport Loading from 'layouts/loading-modal';\r\nimport Scroll from 'simplebar-react';\r\nimport Tabel from 'layouts/tabel'\r\nimport app from 'app';\r\n\r\n\r\nclass listlaporandetail extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    action =(id)=>{\r\n        return(\r\n            <>\r\n                <Button type=\"button\" size=\"sm\" onClick={() => this.Downloadfile(id)} outline color=\"success\">Download</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    mode =()=>{\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    async Downloadfile(id){\r\n       let data = this.props.data.filter(res => res.ID_FILE === id)[0];\r\n       let idfile = data.ID_FILE;\r\n       let name = data.ORIGINAL_NAME;\r\n       \r\n       this.mode();\r\n\r\n       let res = await fetch(app.proxy+'downloadfile/'+idfile ,{\r\n           method: 'get',\r\n           headers: app.head2\r\n       });\r\n\r\n       if (res) {\r\n        let blob = await res.blob();\r\n    \r\n        download(blob , name);\r\n        this.mode();\r\n        app.apiGet1('deletefile',idfile)  \r\n\r\n       }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Baselistmmodal modal= {this.props.modal} mode ={this.props.mode} title ={'List Detail'}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"content table-responsive\">\r\n                            <Loading modal={this.state.modal} text={'Proses Download'}/>\r\n                            <Scroll>\r\n                                {\r\n                                    this.props.flag === 1 ?\r\n                                        <Tabel \r\n                                            data={this.props.data}\r\n                                            keyField={'ID_FILE'}\r\n                                            columns={[\r\n                                                {\r\n                                                    dataField:'TEMPLATE',\r\n                                                    text: 'Periode'\r\n                                                },\r\n                                                {\r\n                                                    dataField: 'LAST_UPLOAD',\r\n                                                    text:'Last Upload'\r\n                                                },\r\n                                                {\r\n                                                    dataField:'JUMLAH_REVISI',\r\n                                                    text: 'Jumlah Revisi'\r\n                                                },\r\n                                                {\r\n                                                    dataField:'ID_FILE',\r\n                                                    text:'Action',\r\n                                                    formatter: this.action\r\n                                                }\r\n                                            ]}\r\n                                        \r\n                                        />\r\n                                    : this.props.flag === 2 ?\r\n                                    <Tabel \r\n                                            keyField={'TEMPLATE'}\r\n                                            data={this.props.data}\r\n                                            columns={[\r\n                                                {\r\n                                                    dataField: 'REPO',\r\n                                                    text: 'Laporan'\r\n                                                },\r\n                                                {\r\n                                                    dataField: 'TEMPLATE',\r\n                                                    text: 'Periode'\r\n                                                }\r\n                                            ]}\r\n                                    \r\n                                    />\r\n\r\n                                    : this.props === 3 ?\r\n                                    <Tabel \r\n                                            keyField={'USERNAME'}\r\n                                            data={this.props.data}\r\n                                            columns={[\r\n                                                {\r\n                                                    dataField: 'USERNAME',\r\n                                                    text: 'Nama User'\r\n                                                },\r\n                                                {\r\n                                                    dataField: 'SBU',\r\n                                                    text: 'SBU'\r\n                                                },\r\n                                                {\r\n                                                    dataField: 'DIVISION',\r\n                                                    text: 'DIVISION'\r\n                                                }\r\n                                            ]}\r\n                                    />\r\n                                    :''\r\n                                }\r\n                                \r\n                            </Scroll>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </Baselistmmodal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default listlaporandetail;"]},"metadata":{},"sourceType":"module"}