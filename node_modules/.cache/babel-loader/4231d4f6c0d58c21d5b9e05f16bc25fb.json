{"ast":null,"code":"import _toConsumableArray from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\chats\\\\list-chats.jsx\";\nimport React, { Component } from 'react';\nimport Page from 'layouts/page-admin';\nimport { Row, Col, Form, Input, Navbar, Button, ButtonGroup } from 'reactstrap';\nimport app from 'app';\nimport Scroll from 'simplebar-react';\nimport socket from 'socket.io-client';\nimport date from 'moment';\nimport 'react-chat-elements/dist/main.css';\nimport { ChatItem, MessageBox } from 'react-chat-elements';\nimport \"react-notification-alert/dist/animate.css\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Modal from './list-contact';\nimport Serialize from 'form-serialize';\nvar io = socket('http://192.168.40.100:4000');\nvar idUser = app.dataUser[0].IDLOGIN;\n\nvar ListChats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListChats, _Component);\n\n  function ListChats(props) {\n    var _this;\n\n    _classCallCheck(this, ListChats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListChats).call(this, props));\n    _this._isMounted = false;\n    _this.state = {\n      users: [],\n      filter: '',\n      chats: [],\n      active: false,\n      name: '',\n      idname: '',\n      msg: '',\n      istyping: false,\n      typingName: '',\n      typingDest: '',\n      modal: false,\n      userChat: [],\n      deleteMode: false\n    };\n    _this.getFilter = _this.getFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setName = _this.setName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setMsg = _this.setMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.SendMsg = _this.SendMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.mode = _this.mode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addUser = _this.addUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteMode = _this.deleteMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteChats = _this.deleteChats.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.EmojiClick = _this.EmojiClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListChats, [{\n    key: \"deleteMode\",\n    value: function deleteMode() {\n      this.setState({\n        deleteMode: !this.state.deleteMode\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      app.apiGet1('chats/users', idUser).then(function (res) {\n        _this2.setState({\n          users: res\n        });\n      });\n      app.apiGet1('chats/userchat', idUser).then(function (res) {\n        _this2.setState({\n          userChat: res\n        });\n      });\n    }\n  }, {\n    key: \"getFilter\",\n    value: function getFilter(e) {\n      this.setState({\n        filter: e.target.value\n      });\n    }\n  }, {\n    key: \"mode\",\n    value: function mode() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(idlogin, name, idfrom, read) {\n      var _this3 = this;\n\n      this.setState({\n        name: name,\n        idname: idlogin,\n        active: true,\n        msg: ''\n      });\n\n      if (read > 0) {\n        app.apiUpdate('chats/updateread', {\n          fromid: idUser,\n          toid: idlogin\n        }).then(function () {\n          app.apiGet1('chats/userchat', idUser).then(function (res) {\n            _this3.setState({\n              userChat: res\n            });\n          });\n        });\n      }\n\n      app.apiGet2('chats/chats', idUser, idlogin).then(function (res) {\n        _this3.setState({\n          chats: res\n        });\n\n        var scroll = document.getElementById('sc');\n        scroll.scrollTop = scroll.scrollHeight;\n      });\n    }\n  }, {\n    key: \"setMsg\",\n    value: function setMsg(e) {\n      this.setState({\n        msg: e.target.value\n      });\n      io.emit('istyping', {\n        fromname: app.dataUser[0].USERNAME,\n        toname: this.state.name\n      });\n    }\n  }, {\n    key: \"SendMsg\",\n    value: function SendMsg(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      var _this$state = this.state,\n          msg = _this$state.msg,\n          name = _this$state.name,\n          idname = _this$state.idname;\n\n      if (msg !== '') {\n        app.apiGet('getip').then(function (res) {\n          var data = {\n            FROM_ID: idUser,\n            TO_ID: idname,\n            FROM: app.dataUser[0].USERNAME,\n            TO: name,\n            MSG: app.Enkripsi(msg),\n            DATE: new Date(),\n            ID_USER: idUser,\n            IP: res\n          };\n          io.emit('chat', data);\n\n          _this4.setState({\n            msg: ''\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      this._isMounted = true;\n\n      if (this._isMounted) {}\n\n      io.on('chat', function (msg) {\n        if (msg.TO_ID === _this5.state.idname && msg.FROM_ID === idUser || msg.FROM_ID === _this5.state.idname && msg.TO_ID === idUser) {\n          var data = [].concat(_toConsumableArray(_this5.state.chats), [msg]);\n\n          _this5.setState({\n            chats: data\n          });\n\n          var scroll = document.getElementById('sc');\n          scroll.scrollTop = scroll.scrollHeight;\n\n          if (msg.FROM_ID !== idUser) {\n            app.apiUpdate('chats/updateread', {\n              fromid: msg.TO_ID,\n              toid: msg.FROM_ID\n            });\n          }\n        }\n\n        if (msg.TO_ID === idUser && msg.FROM_ID !== _this5.state.idname) {\n          var options = {\n            place: 'br',\n            message: React.createElement(\"div\", {\n              className: \"alert-text\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: function onClick() {\n                return _this5.setName(msg.FROM_ID, msg.FROM, '', 1);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 177\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"alert-title\",\n              \"data-notify\": \"title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            }, \"Pesan Masuk Dari \".concat(msg.FROM)), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              \"data-notify\": \"message\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            }, app.Deskripsi(msg.MSG))),\n            type: \"primary\",\n            autoDismiss: 721\n          };\n\n          _this5.refs.notificationAlert.notificationAlert(options);\n        }\n\n        setTimeout(function () {\n          app.apiGet1('chats/userchat', idUser).then(function (res) {\n            _this5.setState({\n              userChat: res\n            });\n          });\n        }, 1000);\n      });\n      io.on('istyping', function (name) {\n        _this5.setState({\n          istyping: true,\n          typingName: name.fromname,\n          typingDest: name.toname\n        });\n\n        setTimeout(function () {\n          _this5.setState({\n            istyping: false\n          });\n        }, 500);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"bottom\",\n    value: function bottom() {\n      var scroll = document.getElementById('sc');\n      scroll.scrollTop = scroll.scrollHeight;\n    }\n  }, {\n    key: \"addUser\",\n    value: function addUser(to, toid, todivision) {\n      var _this6 = this;\n\n      var data = {\n        TO: to,\n        TO_ID: toid,\n        TO_DIVISION: todivision\n      };\n      app.apiGet2('chats/chats', idUser, toid).then(function (res) {\n        var userChat = _this6.state.userChat;\n        var cek = userChat.filter(function (x) {\n          return x.TO_ID.toLocaleLowerCase().includes(toid.toLocaleLowerCase());\n        });\n\n        if (cek.length > 0) {\n          _this6.setState({\n            active: true,\n            name: to,\n            idname: toid,\n            chats: res\n          });\n\n          var scroll = document.getElementById('sc');\n          scroll.scrollTop = scroll.scrollHeight;\n        } else {\n          var copy = [].concat(_toConsumableArray(_this6.state.userChat), [data]);\n\n          _this6.setState({\n            userChat: copy,\n            active: true,\n            name: to,\n            idname: toid,\n            chats: []\n          });\n        }\n\n        _this6.mode();\n      });\n    }\n  }, {\n    key: \"deleteChats\",\n    value: function deleteChats() {\n      var _this7 = this;\n\n      var form = document.getElementById('userlist');\n      var data = Serialize(form, {\n        hash: true\n      });\n      var count = Object.keys(data).length;\n\n      if (count === 0) {\n        return app.msgerror('Pilih Dulu');\n      }\n\n      var cek = typeof data.cek;\n      var hasil = data.cek;\n\n      if (cek === 'string') {\n        app.apiDelete('chats/deleteuserchat', {\n          id: hasil\n        });\n      } else {\n        var _count = hasil.length;\n\n        for (var i = 0; i < _count; i++) {\n          app.apiDelete('chats/deleteuserchat', {\n            id: hasil[i]\n          });\n        }\n      }\n\n      setTimeout(function () {\n        app.apiGet1('chats/userchat', idUser).then(function (res) {\n          _this7.setState({\n            userChat: res,\n            active: false,\n            chats: [],\n            deleteMode: false\n          });\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"EmojiClick\",\n    value: function EmojiClick(code, emoji) {\n      var msg = this.state.msg;\n      var button = document.getElementById('emoticon');\n      button.click();\n      this.setState({\n        msg: \"\".concat(msg)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          filter = _this$state2.filter,\n          chats = _this$state2.chats,\n          active = _this$state2.active,\n          name = _this$state2.name,\n          msg = _this$state2.msg,\n          istyping = _this$state2.istyping,\n          typingName = _this$state2.typingName,\n          typingDest = _this$state2.typingDest,\n          modal = _this$state2.modal,\n          userChat = _this$state2.userChat,\n          deleteMode = _this$state2.deleteMode;\n      var dataUsers = userChat.filter(function (x) {\n        return x.TO.toLowerCase().includes(filter.toLocaleLowerCase());\n      });\n      return React.createElement(Page, {\n        head: 'Chats MTG',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modal: modal,\n        mode: this.mode,\n        title: 'Contact',\n        users: users,\n        post: this.addUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rna-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(NotificationAlert, {\n        ref: \"notificationAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, deleteMode ? React.createElement(Row, {\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        type: \"button\",\n        style: {\n          width: '100%'\n        },\n        onClick: this.deleteChats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        type: \"button\",\n        style: {\n          width: '100%'\n        },\n        onClick: this.deleteMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Cancel\"))) : React.createElement(Row, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        onChange: this.getFilter,\n        placeholder: 'Cari User',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        onClick: this.mode,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"ni ni-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"danger\",\n        onClick: this.deleteMode,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"ni ni-fat-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })))))), React.createElement(Scroll, {\n        style: {\n          height: '450px',\n          border: '2px solid lightblue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Form, {\n        id: \"userlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, dataUsers.map(function (x, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, React.createElement(ChatItem, {\n          avatar: require('assets/img/theme/man.png'),\n          alt: 'Reactjs',\n          title: x.TO,\n          subtitle: app.Deskripsi(x.LAST_CHAT),\n          statusColor: '#49E20E',\n          date: new Date(),\n          onClick: function onClick() {\n            return _this8.setName(x.TO_ID, x.TO, x.fromid, x.READ);\n          },\n          unread: x.READ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }), deleteMode ? React.createElement(\"div\", {\n          className: \"custom-control custom-control-alternative custom-checkbox mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(Input, {\n          className: \"custom-control-input\",\n          id: x.ID_HD,\n          type: \"checkbox\",\n          name: \"cek\",\n          value: x.ID_HD,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"custom-control-label\",\n          htmlFor: x.ID_HD,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, x.TO)) : '');\n      })))), React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"   \", active ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"navbar-vertical bg-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, istyping && typingName === name && typingDest === app.dataUser[0].USERNAME ? \"\".concat(name, \" is Typing.....\") : name)), \" \") : '', React.createElement(\"div\", {\n        style: {\n          height: '392px',\n          overflowY: 'scroll',\n          overflowX: 'hidden',\n          border: '2px solid lightblue'\n        },\n        id: \"sc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, active ? chats.map(function (x, i) {\n        return x.ID_USER === idUser ? React.createElement(Row, {\n          className: \"d-flex flex-row-reverse mb-1\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"d-flex flex-row-reverse\",\n          style: {\n            fontSize: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }, date(x.DATE).format('LLL')), React.createElement(MessageBox, {\n          position: 'right',\n          text: app.Deskripsi(x.MSG),\n          date: new Date(x.DATE),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }))) : React.createElement(Row, {\n          className: \"d-flex flex-row mb-1\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"d-flex flex-row\",\n          style: {\n            fontSize: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, date(x.DATE).format('LLL')), React.createElement(MessageBox, {\n          position: 'left',\n          text: app.Deskripsi(x.MSG),\n          date: new Date(x.DATE),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        })));\n      }) : React.createElement(\"h1\", {\n        className: \"text-center mt-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Chat MTG\")), active ? React.createElement(Form, {\n        onSubmit: this.SendMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"message\",\n        placeholder: \"Send a message\",\n        onChange: this.setMsg,\n        value: msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      })) : ''))));\n    }\n  }]);\n\n  return ListChats;\n}(Component);\n\nexport { ListChats as default };","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\chats\\list-chats.jsx"],"names":["React","Component","Page","Row","Col","Form","Input","Navbar","Button","ButtonGroup","app","Scroll","socket","date","ChatItem","MessageBox","NotificationAlert","Modal","Serialize","io","idUser","dataUser","IDLOGIN","ListChats","props","_isMounted","state","users","filter","chats","active","name","idname","msg","istyping","typingName","typingDest","modal","userChat","deleteMode","getFilter","bind","setName","setMsg","SendMsg","mode","addUser","deleteChats","EmojiClick","setState","apiGet1","then","res","e","target","value","idlogin","idfrom","read","apiUpdate","fromid","toid","apiGet2","scroll","document","getElementById","scrollTop","scrollHeight","emit","fromname","USERNAME","toname","preventDefault","apiGet","data","FROM_ID","TO_ID","FROM","TO","MSG","Enkripsi","DATE","Date","ID_USER","IP","on","options","place","message","cursor","Deskripsi","type","autoDismiss","refs","notificationAlert","setTimeout","to","todivision","TO_DIVISION","cek","x","toLocaleLowerCase","includes","length","copy","form","hash","count","Object","keys","msgerror","hasil","apiDelete","id","i","code","emoji","button","click","dataUsers","toLowerCase","width","height","border","map","require","LAST_CHAT","READ","ID_HD","overflowY","overflowX","fontSize","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Page from 'layouts/page-admin';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    Navbar,\r\n    Button,\r\n    ButtonGroup\r\n} from 'reactstrap';\r\nimport app from 'app';\r\nimport Scroll from 'simplebar-react';\r\nimport socket from 'socket.io-client';\r\nimport date from 'moment';\r\nimport 'react-chat-elements/dist/main.css';\r\nimport { ChatItem , MessageBox } from 'react-chat-elements';\r\nimport \"react-notification-alert/dist/animate.css\";\r\nimport NotificationAlert from \"react-notification-alert\";\r\nimport Modal from './list-contact';\r\nimport Serialize from 'form-serialize';\r\n\r\nconst io  = socket('http://192.168.40.100:4000');\r\nconst idUser = app.dataUser[0].IDLOGIN;\r\n\r\nexport default class ListChats extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            users: [],\r\n            filter: '',\r\n            chats : [],\r\n            active:false,\r\n            name:'',\r\n            idname:'',\r\n            msg: '',\r\n            istyping: false,\r\n            typingName:'',\r\n            typingDest:'',\r\n            modal: false,\r\n            userChat:[],\r\n            deleteMode: false\r\n        }\r\n        this.getFilter = this.getFilter.bind(this);\r\n        this.setName = this.setName.bind(this);\r\n        this.setMsg = this.setMsg.bind(this);\r\n        this.SendMsg = this.SendMsg.bind(this);\r\n        this.mode = this.mode.bind(this);\r\n        this.addUser = this.addUser.bind(this);\r\n        this.deleteMode = this.deleteMode.bind(this);\r\n        this.deleteChats = this.deleteChats.bind(this);\r\n        this.EmojiClick = this.EmojiClick.bind(this)\r\n    }\r\n\r\n\r\n    deleteMode(){\r\n        this.setState({ deleteMode: !this.state.deleteMode})\r\n    }\r\n\r\n    \r\n    componentWillMount(){\r\n        this._isMounted = true;\r\n\r\n        app.apiGet1('chats/users' , idUser)\r\n            .then(res =>{\r\n                this.setState({ users: res})\r\n            });\r\n\r\n        app.apiGet1('chats/userchat' , idUser)\r\n            .then(res =>{\r\n                this.setState({ userChat: res})\r\n        })\r\n    }\r\n\r\n    getFilter( e ){\r\n        this.setState({ filter: e.target.value })\r\n    }\r\n\r\n    mode(){\r\n        this.setState({ modal: !this.state.modal})\r\n    }\r\n\r\n    setName(idlogin , name , idfrom , read){\r\n        this.setState({ \r\n            name : name,\r\n            idname: idlogin,\r\n            active: true,\r\n            msg:''\r\n        })\r\n\r\n        if (read > 0) {\r\n            app.apiUpdate('chats/updateread' ,{\r\n                fromid: idUser,\r\n                toid: idlogin\r\n            }).then(()=>{\r\n                app.apiGet1('chats/userchat' , idUser)\r\n                    .then(res =>{\r\n                        this.setState({ userChat: res})\r\n                })\r\n            });   \r\n        }\r\n\r\n        app.apiGet2('chats/chats' , idUser , idlogin )\r\n            .then(res =>{\r\n                this.setState({ chats: res});\r\n\r\n                let scroll = document.getElementById('sc');\r\n                scroll.scrollTop = scroll.scrollHeight; \r\n        })\r\n           \r\n    }\r\n\r\n    setMsg(e){\r\n        this.setState({ msg: e.target.value });\r\n        io.emit('istyping' ,{\r\n            fromname: app.dataUser[0].USERNAME,\r\n            toname: this.state.name\r\n        });\r\n    }\r\n\r\n\r\n    SendMsg(e){\r\n\r\n        e.preventDefault();\r\n        let { msg  ,name , idname} = this.state;\r\n\r\n        if (msg !== '') {\r\n            app.apiGet('getip')\r\n                .then(res =>{\r\n                    let data = { \r\n                        FROM_ID: idUser,\r\n                        TO_ID: idname,\r\n                        FROM: app.dataUser[0].USERNAME,\r\n                        TO: name,\r\n                        MSG: app.Enkripsi(msg),\r\n                        DATE: new Date(),\r\n                        ID_USER: idUser,\r\n                        IP: res\r\n                    }\r\n\r\n                    io.emit('chat' , data );\r\n                    this.setState({ msg: ''})\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n\r\n        if (this._isMounted) {\r\n            \r\n        }\r\n\r\n        io.on('chat' , (msg)=>{\r\n            if ((msg.TO_ID === this.state.idname && msg.FROM_ID === idUser) || (msg.FROM_ID === this.state.idname && msg.TO_ID === idUser) ) {\r\n                let data = [ ...this.state.chats , msg];\r\n                this.setState({ chats : data });\r\n\r\n            \r\n                    let scroll = document.getElementById('sc');\r\n                    scroll.scrollTop = scroll.scrollHeight;   \r\n\r\n                if (msg.FROM_ID !== idUser) {\r\n                    app.apiUpdate('chats/updateread' ,{\r\n                        fromid: msg.TO_ID,\r\n                        toid: msg.FROM_ID \r\n                    });\r\n                }\r\n            }\r\n\r\n            if ((msg.TO_ID === idUser && msg.FROM_ID !== this.state.idname ) ) {\r\n                let options = {\r\n                    place: 'br',\r\n                    message: (\r\n                      <div className=\"alert-text\" style={{ cursor: 'pointer'}} onClick={()=> this.setName(msg.FROM_ID ,msg.FROM , '' , 1)}>\r\n                        <span className=\"alert-title\" data-notify=\"title\">\r\n                          {`Pesan Masuk Dari ${msg.FROM}`}\r\n                        </span><br/>\r\n                        <span data-notify=\"message\">\r\n                          {app.Deskripsi(msg.MSG)}\r\n                        </span>\r\n                      </div>\r\n                    ),\r\n                    type: \"primary\",\r\n                    autoDismiss: 721\r\n                  };\r\n                  this.refs.notificationAlert.notificationAlert(options);  \r\n            }\r\n\r\n            setTimeout(()=>{\r\n                app.apiGet1('chats/userchat' , idUser)\r\n                .then(res =>{\r\n                    this.setState({ userChat: res})\r\n\r\n                });\r\n                \r\n            }, 1000);\r\n\r\n    \r\n        })\r\n\r\n\r\n\r\n        io.on('istyping' ,(name)=>{\r\n            this.setState({ istyping: true , typingName: name.fromname , typingDest: name.toname});\r\n\r\n            setTimeout(()=>{ this.setState({ istyping: false}) }, 500);\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n      }\r\n\r\n    bottom(){\r\n        let scroll = document.getElementById('sc');\r\n        scroll.scrollTop = scroll.scrollHeight; \r\n    }\r\n\r\n    addUser(to , toid , todivision){\r\n        let data = {\r\n            TO: to,\r\n            TO_ID: toid,\r\n            TO_DIVISION: todivision\r\n        }\r\n\r\n        app.apiGet2('chats/chats' , idUser , toid )\r\n        .then(res =>{\r\n            let { userChat } = this.state;\r\n\r\n            let cek = userChat.filter(x =>{\r\n                return x.TO_ID.toLocaleLowerCase().includes(toid.toLocaleLowerCase());\r\n            });\r\n\r\n            if (cek.length > 0) {\r\n                this.setState({  active: true , name: to , idname: toid, chats:res });\r\n              let scroll = document.getElementById('sc');\r\n              scroll.scrollTop = scroll.scrollHeight; \r\n            }else{\r\n                let copy = [...this.state.userChat , data];\r\n                this.setState({ userChat: copy , active: true , name: to , idname: toid, chats:[] });\r\n            }\r\n            this.mode();\r\n        })\r\n    }\r\n\r\n    deleteChats(){\r\n        let form = document.getElementById('userlist');\r\n\r\n        let data = Serialize( form , { hash: true});\r\n        let count = Object.keys(data).length;\r\n\r\n        if (count === 0) {\r\n            return app.msgerror('Pilih Dulu')\r\n        }\r\n\r\n        let cek = typeof(data.cek);\r\n        let hasil = data.cek;\r\n\r\n        if (cek === 'string') {\r\n          app.apiDelete('chats/deleteuserchat',{\r\n              id: hasil\r\n          }); \r\n        }else{\r\n            let count = hasil.length;\r\n\r\n            for( let i = 0; i < count ; i++){\r\n                app.apiDelete('chats/deleteuserchat',{\r\n                    id: hasil[i]\r\n                });  \r\n            }\r\n        }\r\n \r\n        setTimeout(()=>{\r\n            app.apiGet1('chats/userchat' , idUser)\r\n                .then(res =>{\r\n                    this.setState({ userChat: res , active: false , chats:[] , deleteMode: false})\r\n\r\n                });\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    EmojiClick( code , emoji){\r\n        let { msg } = this.state\r\n        let button = document.getElementById('emoticon');\r\n        button.click();\r\n\r\n        this.setState({ msg: `${msg}` });\r\n\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        let { users , filter , chats , active , name , msg , istyping ,typingName , typingDest , modal , userChat , deleteMode} = this.state;\r\n\r\n        let dataUsers = userChat.filter( x =>{\r\n            return x.TO.toLowerCase().includes(filter.toLocaleLowerCase())\r\n        });\r\n\r\n\r\n        return (\r\n            <Page head={'Chats MTG'}>\r\n                <Modal modal={modal} mode={this.mode} title={'Contact'} users={users} post={this.addUser} />\r\n                <div className=\"rna-wrapper\">\r\n                 <NotificationAlert ref=\"notificationAlert\" />\r\n                </div>\r\n                <Row>\r\n                    <Col md='3'>\r\n                        {\r\n                            deleteMode ? \r\n                            <Row className='mb-2'>\r\n                                <Col md='6'>\r\n                                    <Button color='danger' size='sm' type='button' style={{ width:'100%'}} onClick={this.deleteChats}>Delete</Button>\r\n                                </Col>\r\n                                <Col md='6'>\r\n                                    <Button color='primary' size='sm' type='button' style={{width:'100%'}} onClick={this.deleteMode}>Cancel</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            <Row className='mb-1'>\r\n                                <Col md='6'>\r\n                                    <Input type='text' onChange={this.getFilter} placeholder={'Cari User'} />\r\n                                </Col>\r\n                                <Col md='6'>\r\n                                    <ButtonGroup>\r\n                                        <Button className=\"btn-icon btn-2\" color=\"primary\" onClick={this.mode} type=\"button\">\r\n                                            <span className=\"btn-inner--icon\">\r\n                                                <i className=\"ni ni-single-02\" />\r\n                                            </span>\r\n                                        </Button>\r\n                                        <Button className=\"btn-icon btn-2\" color=\"danger\" onClick={this.deleteMode} type=\"button\">\r\n                                            <span className=\"btn-inner--icon\">\r\n                                                <i className=\"ni ni-fat-delete\" />\r\n                                            </span>\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        }\r\n                        <Scroll style={{ height: '450px' , border: '2px solid lightblue' }}>\r\n                            <Form id='userlist'>\r\n                            {   \r\n                                dataUsers.map((x , i) => (\r\n                                    <div key={i}>\r\n                                        <ChatItem\r\n                                            avatar={require('assets/img/theme/man.png')}\r\n                                            alt={'Reactjs'}\r\n                                            title={x.TO}\r\n                                            subtitle={app.Deskripsi(x.LAST_CHAT)}\r\n                                            statusColor={'#49E20E'}\r\n                                            date={new Date()}\r\n                                            onClick={()=> this.setName(x.TO_ID , x.TO , x.fromid , x.READ)}\r\n                                            unread={x.READ} />  \r\n                                        {\r\n                                            deleteMode ? \r\n                                            <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                                            <Input                 \r\n                                                className=\"custom-control-input\"\r\n                                                id={x.ID_HD}\r\n                                                type=\"checkbox\"\r\n                                                name='cek'\r\n                                                value={x.ID_HD}\r\n                                                />\r\n                                            <label className=\"custom-control-label\" htmlFor={x.ID_HD}>\r\n                                            {x.TO}\r\n                                            </label>\r\n                                         </div> :''\r\n                                        }\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </Form>\r\n                        </Scroll>\r\n                    </Col>\r\n                    <Col md='9'>\r\n                      \r\n                                <div>   {\r\n                                            active ? <div>\r\n                                            <Navbar className=\"navbar-vertical bg-primary \">\r\n                                                <h3 className='text-secondary'>\r\n                                                {\r\n                                                    istyping && typingName === name && typingDest === app.dataUser[0].USERNAME ? `${name} is Typing.....` : name\r\n                                                }\r\n                                                </h3>\r\n                                            </Navbar> </div> : ''\r\n                                        }\r\n                                            <div  style={{ height: '392px' , overflowY:'scroll' , overflowX:'hidden' , border: '2px solid lightblue'}} id='sc'  >\r\n                                            {\r\n                                                active ? \r\n                                                chats.map((x , i) =>(\r\n                                                    x.ID_USER === idUser ?\r\n\r\n                                                    \r\n                                                    <Row className=\"d-flex flex-row-reverse mb-1\" key={i}>\r\n                                                        <Col md='6'> \r\n                                                            <label className='d-flex flex-row-reverse' style={{ fontSize:'11px'}}>{date(x.DATE).format('LLL')}</label>\r\n                                                            <MessageBox\r\n                                                                position={'right'}\r\n                                                                text={app.Deskripsi(x.MSG)}\r\n                                                                date={new Date(x.DATE)}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    :\r\n                                                    <Row className=\"d-flex flex-row mb-1\" key={i}>\r\n                                                        <Col md='6'> \r\n                                                            <label className='d-flex flex-row' style={{ fontSize:'11px'}}>{date(x.DATE).format('LLL')}</label>\r\n                                                            <MessageBox\r\n                                                                position={'left'}\r\n                                                                text={app.Deskripsi(x.MSG)}   \r\n                                                                date={new Date(x.DATE)}                                                             \r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                )) : <h1 className='text-center mt-6'>Chat MTG</h1>\r\n                                            }\r\n                                            </div>\r\n                                            {\r\n                                                active ? \r\n                                                        <Form onSubmit={this.SendMsg}>\r\n                                                            <Input type='text' id='message' placeholder='Send a message' onChange={this.setMsg} value={msg}/>\r\n                                                        </Form>\r\n                                                  :''\r\n                                            }\r\n                                \r\n                                    </div> \r\n                          \r\n                    </Col>\r\n                </Row>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}