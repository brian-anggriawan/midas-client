{"ast":null,"code":"import _toConsumableArray from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\chats\\\\list-chats.jsx\";\nimport React, { Component } from 'react';\nimport Page from 'layouts/page-admin';\nimport { Row, Col, Form, Input, Navbar, Button } from 'reactstrap';\nimport app from 'app';\nimport Scroll from 'simplebar-react';\nimport socket from 'socket.io-client';\nimport date from 'moment';\nimport 'react-chat-elements/dist/main.css';\nimport { ChatItem, MessageBox } from 'react-chat-elements';\nimport \"react-notification-alert/dist/animate.css\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Modal from './list-contact';\nvar io = socket('http://192.168.40.100:4000');\nvar idUser = app.dataUser[0].IDLOGIN;\n\nvar ListChats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListChats, _Component);\n\n  function ListChats() {\n    var _this;\n\n    _classCallCheck(this, ListChats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListChats).call(this));\n    _this.state = {\n      users: [],\n      filter: '',\n      chats: [],\n      active: false,\n      name: '',\n      idname: '',\n      msg: '',\n      istyping: false,\n      typingName: '',\n      typingDest: '',\n      modal: false,\n      userChat: []\n    };\n    _this.getFilter = _this.getFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setName = _this.setName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setMsg = _this.setMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.SendMsg = _this.SendMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.mode = _this.mode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addUser = _this.addUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListChats, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      app.apiGet1('chats/users', idUser).then(function (res) {\n        _this2.setState({\n          users: res\n        });\n      });\n      app.apiGet1('chats/userchat', idUser).then(function (res) {\n        _this2.setState({\n          userChat: res\n        });\n      });\n    }\n  }, {\n    key: \"getFilter\",\n    value: function getFilter(e) {\n      this.setState({\n        filter: e.target.value\n      });\n    }\n  }, {\n    key: \"mode\",\n    value: function mode() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(idlogin, name) {\n      var _this3 = this;\n\n      this.setState({\n        name: name,\n        idname: idlogin,\n        active: true,\n        msg: ''\n      });\n      app.apiGet2('chats/chats', idUser, idlogin).then(function (res) {\n        _this3.setState({\n          chats: res\n        });\n      });\n    }\n  }, {\n    key: \"setMsg\",\n    value: function setMsg(e) {\n      this.setState({\n        msg: e.target.value\n      });\n      io.emit('istyping', {\n        fromname: app.dataUser[0].USERNAME,\n        toname: this.state.name\n      });\n    }\n  }, {\n    key: \"SendMsg\",\n    value: function SendMsg(e) {\n      e.preventDefault();\n      var _this$state = this.state,\n          msg = _this$state.msg,\n          name = _this$state.name,\n          idname = _this$state.idname;\n      var data = {\n        FROM_ID: idUser,\n        TO_ID: idname,\n        FROM: app.dataUser[0].USERNAME,\n        TO: name,\n        MSG: msg,\n        DATE: date().format('LLL'),\n        ID_USER: idUser\n      };\n      io.emit('chat', data);\n      this.setState({\n        msg: ''\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      io.on('chat', function (msg) {\n        if (msg.TO_ID === _this4.state.idname && msg.FROM_ID === idUser || msg.FROM_ID === _this4.state.idname && msg.TO_ID === idUser) {\n          var data = [].concat(_toConsumableArray(_this4.state.chats), [msg]);\n\n          _this4.setState({\n            chats: data\n          });\n\n          var scroll = document.getElementById('sc');\n          scroll.scrollTop = scroll.scrollHeight;\n        }\n\n        if (msg.TO_ID === idUser && msg.FROM_ID !== _this4.state.idname) {\n          var options = {\n            place: 'br',\n            message: React.createElement(\"div\", {\n              className: \"alert-text\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"alert-title\",\n              \"data-notify\": \"title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, \"Pesan Masuk Dari \".concat(msg.FROM)), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              \"data-notify\": \"message\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, msg.MSG)),\n            type: \"default\",\n            autoDismiss: 7\n          };\n\n          _this4.refs.notificationAlert.notificationAlert(options);\n        }\n      });\n      io.on('istyping', function (name) {\n        _this4.setState({\n          istyping: true,\n          typingName: name.fromname,\n          typingDest: name.toname\n        });\n\n        setTimeout(function () {\n          _this4.setState({\n            istyping: false\n          });\n        }, 500);\n      });\n    }\n  }, {\n    key: \"bottom\",\n    value: function bottom() {\n      var scroll = document.getElementById('sc');\n      scroll.scrollTop = scroll.scrollHeight;\n    }\n  }, {\n    key: \"addUser\",\n    value: function addUser(to, toid, todivision) {\n      var data = {\n        TO: to,\n        TO_ID: toid,\n        TO_DIVISION: todivision\n      };\n      var copy = [].concat(_toConsumableArray(this.state.userChat), [data]);\n      this.setState({\n        userChat: copy,\n        active: true,\n        name: to\n      });\n      this.mode();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          filter = _this$state2.filter,\n          chats = _this$state2.chats,\n          active = _this$state2.active,\n          name = _this$state2.name,\n          msg = _this$state2.msg,\n          istyping = _this$state2.istyping,\n          typingName = _this$state2.typingName,\n          typingDest = _this$state2.typingDest,\n          modal = _this$state2.modal,\n          userChat = _this$state2.userChat;\n      var dataUsers = userChat.filter(function (x) {\n        return x.TO.toLowerCase().includes(filter.toLocaleLowerCase());\n      });\n      return React.createElement(Page, {\n        head: 'Chats MTG',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modal: modal,\n        mode: this.mode,\n        title: 'Contact',\n        users: users,\n        post: this.addUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rna-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(NotificationAlert, {\n        ref: \"notificationAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        className: \"mb-2\",\n        onChange: this.getFilter,\n        placeholder: 'Cari User',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: \"13\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-2\",\n        color: \"primary\",\n        onClick: this.mode,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btn-inner--icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"ni ni-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))))), React.createElement(Scroll, {\n        style: {\n          height: '450px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, dataUsers.map(function (x, i) {\n        return React.createElement(ChatItem, {\n          avatar: require('assets/img/theme/man.png'),\n          alt: 'Reactjs',\n          title: x.TO,\n          subtitle: x.TO_DIVISION,\n          statusColor: '#49E20E',\n          date: new Date(),\n          key: i,\n          onClick: function onClick() {\n            return _this5.setName(x.TO_ID, x.TO);\n          },\n          unread: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        });\n      }))), React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, active ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"navbar-vertical bg-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, istyping && typingName === name && typingDest === app.dataUser[0].USERNAME ? \"\".concat(name, \" is Typing.....\") : name)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: '325px',\n          overflowY: 'scroll',\n          overflowX: 'hidden'\n        },\n        id: \"sc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, chats.map(function (x, i) {\n        return x.ID_USER === idUser ? React.createElement(Row, {\n          className: \"d-flex flex-row-reverse mb-1\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"d-flex flex-row-reverse\",\n          style: {\n            fontSize: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, date(x.DATE).format('LLL')), React.createElement(MessageBox, {\n          position: 'right',\n          text: x.MSG,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }))) : React.createElement(Row, {\n          className: \"d-flex flex-row mb-1\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"d-flex flex-row\",\n          style: {\n            fontSize: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, date(x.DATE).format('LLL')), React.createElement(MessageBox, {\n          position: 'left',\n          text: x.MSG,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        })));\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.SendMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        onChange: this.setMsg,\n        value: msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        onClick: this.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Bottom\")))) : React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" Chat MTG\"))));\n    }\n  }]);\n\n  return ListChats;\n}(Component);\n\nexport { ListChats as default };","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\chats\\list-chats.jsx"],"names":["React","Component","Page","Row","Col","Form","Input","Navbar","Button","app","Scroll","socket","date","ChatItem","MessageBox","NotificationAlert","Modal","io","idUser","dataUser","IDLOGIN","ListChats","state","users","filter","chats","active","name","idname","msg","istyping","typingName","typingDest","modal","userChat","getFilter","bind","setName","setMsg","SendMsg","mode","addUser","apiGet1","then","res","setState","e","target","value","idlogin","apiGet2","emit","fromname","USERNAME","toname","preventDefault","data","FROM_ID","TO_ID","FROM","TO","MSG","DATE","format","ID_USER","on","scroll","document","getElementById","scrollTop","scrollHeight","options","place","message","type","autoDismiss","refs","notificationAlert","setTimeout","to","toid","todivision","TO_DIVISION","copy","dataUsers","x","toLowerCase","includes","toLocaleLowerCase","height","map","i","require","Date","overflowY","overflowX","fontSize","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Page from 'layouts/page-admin';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    Navbar,\r\n    Button\r\n \r\n} from 'reactstrap';\r\nimport app from 'app';\r\nimport Scroll from 'simplebar-react';\r\nimport socket from 'socket.io-client';\r\nimport date from 'moment';\r\nimport 'react-chat-elements/dist/main.css';\r\nimport { ChatItem , MessageBox } from 'react-chat-elements';\r\nimport \"react-notification-alert/dist/animate.css\";\r\nimport NotificationAlert from \"react-notification-alert\";\r\nimport Modal from './list-contact';\r\n\r\n\r\nconst io  = socket('http://192.168.40.100:4000');\r\nconst idUser = app.dataUser[0].IDLOGIN;\r\n\r\nexport default class ListChats extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            users: [],\r\n            filter: '',\r\n            chats : [],\r\n            active:false,\r\n            name:'',\r\n            idname:'',\r\n            msg: '',\r\n            istyping: false,\r\n            typingName:'',\r\n            typingDest:'',\r\n            modal: false,\r\n            userChat:[]\r\n        }\r\n        this.getFilter = this.getFilter.bind(this);\r\n        this.setName = this.setName.bind(this);\r\n        this.setMsg = this.setMsg.bind(this);\r\n        this.SendMsg = this.SendMsg.bind(this);\r\n        this.mode = this.mode.bind(this);\r\n        this.addUser = this.addUser.bind(this);\r\n    }\r\n\r\n    \r\n\r\n\r\n    componentWillMount(){\r\n        app.apiGet1('chats/users' , idUser)\r\n            .then(res =>{\r\n                this.setState({ users: res})\r\n            });\r\n\r\n        app.apiGet1('chats/userchat' , idUser)\r\n            .then(res =>{\r\n                this.setState({ userChat: res})\r\n        })\r\n    }\r\n\r\n    getFilter( e ){\r\n        this.setState({ filter: e.target.value })\r\n    }\r\n\r\n    mode(){\r\n        this.setState({ modal: !this.state.modal})\r\n    }\r\n\r\n    setName(idlogin , name){\r\n        this.setState({ \r\n            name : name,\r\n            idname: idlogin,\r\n            active: true,\r\n            msg:''\r\n        })\r\n\r\n        app.apiGet2('chats/chats' , idUser , idlogin )\r\n            .then(res =>{\r\n                this.setState({ chats: res})\r\n            })\r\n    }\r\n\r\n    setMsg(e){\r\n        this.setState({ msg: e.target.value });\r\n        io.emit('istyping' ,{\r\n            fromname: app.dataUser[0].USERNAME,\r\n            toname: this.state.name\r\n        });\r\n    }\r\n\r\n\r\n    SendMsg(e){\r\n\r\n        e.preventDefault();\r\n        let { msg  ,name , idname} = this.state;\r\n        let data = { \r\n            FROM_ID: idUser,\r\n            TO_ID: idname,\r\n            FROM: app.dataUser[0].USERNAME,\r\n            TO: name,\r\n            MSG: msg,\r\n            DATE: date().format('LLL'),\r\n            ID_USER: idUser\r\n         }\r\n        io.emit('chat' , data );\r\n        this.setState({ msg: ''})\r\n    }\r\n\r\n    componentDidMount(){\r\n        io.on('chat' , (msg)=>{\r\n            if ((msg.TO_ID === this.state.idname && msg.FROM_ID === idUser) || (msg.FROM_ID === this.state.idname && msg.TO_ID === idUser) ) {\r\n                let data = [ ...this.state.chats , msg];\r\n                this.setState({ chats : data })\r\n\r\n                let scroll = document.getElementById('sc');\r\n                scroll.scrollTop = scroll.scrollHeight;   \r\n            }\r\n\r\n            if ((msg.TO_ID === idUser && msg.FROM_ID !== this.state.idname) ) {\r\n                let options = {\r\n                    place: 'br',\r\n                    message: (\r\n                      <div className=\"alert-text\">\r\n                        <span className=\"alert-title\" data-notify=\"title\">\r\n                          {`Pesan Masuk Dari ${msg.FROM}`}\r\n                        </span><br/>\r\n                        <span data-notify=\"message\">\r\n                          {msg.MSG}\r\n                        </span>\r\n                      </div>\r\n                    ),\r\n                    type: \"default\",\r\n                    autoDismiss: 7\r\n                  };\r\n                  this.refs.notificationAlert.notificationAlert(options);  \r\n            }\r\n        })\r\n\r\n\r\n        io.on('istyping' ,(name)=>{\r\n            this.setState({ istyping: true , typingName: name.fromname , typingDest: name.toname});\r\n\r\n            setTimeout(()=>{ this.setState({ istyping: false}) }, 500);\r\n        })\r\n    }\r\n\r\n    bottom(){\r\n        let scroll = document.getElementById('sc');\r\n        scroll.scrollTop = scroll.scrollHeight; \r\n    }\r\n\r\n    addUser(to , toid , todivision){\r\n        let data = {\r\n            TO: to,\r\n            TO_ID: toid,\r\n            TO_DIVISION: todivision\r\n        }\r\n\r\n        let copy = [...this.state.userChat , data];\r\n        this.setState({ userChat: copy , active: true , name: to});\r\n\r\n        this.mode();\r\n    }\r\n\r\n\r\n    render() {\r\n        let { users , filter , chats , active , name , msg , istyping ,typingName , typingDest , modal , userChat} = this.state;\r\n\r\n        let dataUsers = userChat.filter( x =>{\r\n            return x.TO.toLowerCase().includes(filter.toLocaleLowerCase())\r\n        });\r\n\r\n        return (\r\n            <Page head={'Chats MTG'}>\r\n                <Modal modal={modal} mode={this.mode} title={'Contact'} users={users} post={this.addUser} />\r\n                <div className=\"rna-wrapper\">\r\n                 <NotificationAlert ref=\"notificationAlert\" />\r\n                </div>\r\n                <Row>\r\n                    <Col md='3'>\r\n                        <Row>\r\n                            <Col md='9'>\r\n                                <Input type='text' className='mb-2' onChange={this.getFilter} placeholder={'Cari User'} />\r\n                            </Col>\r\n                            <Col md='13'>\r\n                                <Button className=\"btn-icon btn-2\" color=\"primary\" onClick={this.mode} type=\"button\">\r\n                                    <span className=\"btn-inner--icon\">\r\n                                        <i className=\"ni ni-single-02\" />\r\n                                    </span>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Scroll style={{ height: '450px' }}>\r\n                            {   \r\n                                dataUsers.map((x , i) => (\r\n                                        <ChatItem\r\n                                            avatar={require('assets/img/theme/man.png')}\r\n                                            alt={'Reactjs'}\r\n                                            title={x.TO}\r\n                                            subtitle={x.TO_DIVISION}\r\n                                            statusColor={'#49E20E'}\r\n                                            date={new Date()}\r\n                                            key={i}\r\n                                            onClick={()=> this.setName(x.TO_ID , x.TO)}\r\n                                            unread={0} />  \r\n                                ))\r\n                            }\r\n                        </Scroll>\r\n                    </Col>\r\n                    <Col md='9'>\r\n                        {\r\n                            active ? \r\n                                <div>\r\n                                        <Navbar className=\"navbar-vertical bg-primary \">\r\n                                            <h3 className='text-secondary'>\r\n                                            {\r\n                                                istyping && typingName === name && typingDest === app.dataUser[0].USERNAME ? `${name} is Typing.....` : name\r\n                                            }\r\n                                            </h3>\r\n                                        </Navbar>\r\n                                        <hr />\r\n                                            <div  style={{ height: '325px' , overflowY:'scroll' , overflowX:'hidden'  }} id='sc'  >\r\n                                            {\r\n                                                chats.map((x , i) =>(\r\n                                                    x.ID_USER === idUser ?\r\n                                                    <Row className=\"d-flex flex-row-reverse mb-1\" key={i}>\r\n                                                        <Col md='6'> \r\n                                                            <label className='d-flex flex-row-reverse' style={{ fontSize:'11px'}}>{date(x.DATE).format('LLL')}</label>\r\n                                                            <MessageBox\r\n                                                                position={'right'}\r\n                                                                text={x.MSG}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    :\r\n                                                    <Row className=\"d-flex flex-row mb-1\" key={i}>\r\n                                                        <Col md='6'> \r\n                                                            <label className='d-flex flex-row' style={{ fontSize:'11px'}}>{date(x.DATE).format('LLL')}</label>\r\n                                                            <MessageBox\r\n                                                                position={'left'}\r\n                                                                text={x.MSG}                                                                \r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                ))\r\n                                            }\r\n                                            </div>\r\n                                        <Row>\r\n                                            <Col md='10'>\r\n                                                <Form onSubmit={this.SendMsg}>\r\n                                                    <Input type='text' onChange={this.setMsg} value={msg}/>\r\n                                                </Form>\r\n                                            </Col>\r\n                                            <Col md='2'>\r\n                                                <Button color='info' onClick={this.bottom}>Bottom</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div> : <h1 className='text-center'> Chat MTG</h1>\r\n                        }\r\n                          \r\n                    </Col>\r\n                </Row>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}