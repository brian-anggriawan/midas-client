{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _shallowEqualFuzzy = require('shallow-equal-fuzzy');\n\nvar _shallowEqualFuzzy2 = _interopRequireDefault(_shallowEqualFuzzy);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nrequire('select2');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar namespace = 'react-select2-wrapper';\n\nvar Select2 = function (_Component) {\n  _inherits(Select2, _Component);\n\n  function Select2(props) {\n    _classCallCheck(this, Select2);\n\n    var _this = _possibleConstructorReturn(this, (Select2.__proto__ || Object.getPrototypeOf(Select2)).call(this, props));\n\n    _this.el = null;\n    _this.forceUpdateValue = false;\n    _this.initialRender = true;\n    return _this;\n  }\n\n  _createClass(Select2, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initSelect2(this.props);\n      this.updateValue();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.initialRender = false;\n      this.updSelect2(nextProps);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.updateValue();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroySelect2();\n    }\n  }, {\n    key: 'initSelect2',\n    value: function initSelect2(props) {\n      var options = props.options;\n      this.el = (0, _jquery2.default)(_reactDom2.default.findDOMNode(this)); // fix for updating selected value when data is changing\n\n      if (this.forceUpdateValue) {\n        this.updateSelect2Value(null);\n      }\n\n      this.el.select2(this.prepareOptions(options));\n      this.attachEventHandlers(props);\n    }\n  }, {\n    key: 'updSelect2',\n    value: function updSelect2(props) {\n      var prevProps = this.props;\n\n      if (!(0, _shallowEqualFuzzy2.default)(prevProps.data, props.data)) {\n        this.forceUpdateValue = true;\n        this.destroySelect2(false);\n        this.initSelect2(props);\n        return;\n      }\n\n      var options = props.options;\n\n      if (!(0, _shallowEqualFuzzy2.default)(prevProps.options, options)) {\n        this.el.select2(this.prepareOptions(options));\n      }\n\n      var handlerChanged = function handlerChanged(e) {\n        return prevProps[e[1]] !== props[e[1]];\n      };\n\n      if (props.events.some(handlerChanged)) {\n        this.detachEventHandlers();\n        this.attachEventHandlers(props);\n      }\n    }\n  }, {\n    key: 'updateSelect2Value',\n    value: function updateSelect2Value(value) {\n      this.el.off('change.' + namespace).val(value).trigger('change');\n      var onChange = this.props.onChange;\n\n      if (onChange) {\n        this.el.on('change.' + namespace, onChange);\n      }\n    }\n  }, {\n    key: 'updateValue',\n    value: function updateValue() {\n      var _props = this.props,\n          value = _props.value,\n          defaultValue = _props.defaultValue,\n          multiple = _props.multiple;\n      var newValue = this.prepareValue(value, defaultValue);\n      var currentValue = multiple ? this.el.val() || [] : this.el.val();\n\n      if (!this.fuzzyValuesEqual(currentValue, newValue) || this.forceUpdateValue) {\n        this.updateSelect2Value(newValue);\n\n        if (!this.initialRender) {\n          this.el.trigger('change');\n        }\n\n        this.forceUpdateValue = false;\n      }\n    }\n  }, {\n    key: 'fuzzyValuesEqual',\n    value: function fuzzyValuesEqual(currentValue, newValue) {\n      return currentValue === null && newValue === '' || (0, _shallowEqualFuzzy2.default)(currentValue, newValue);\n    }\n  }, {\n    key: 'destroySelect2',\n    value: function destroySelect2() {\n      var withCallbacks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (withCallbacks) {\n        this.detachEventHandlers();\n      }\n\n      this.el.select2('destroy');\n      this.el = null;\n    }\n  }, {\n    key: 'attachEventHandlers',\n    value: function attachEventHandlers(props) {\n      var _this2 = this;\n\n      props.events.forEach(function (event) {\n        if (typeof props[event[1]] !== 'undefined') {\n          _this2.el.on(event[0], props[event[1]]);\n        }\n      });\n    }\n  }, {\n    key: 'detachEventHandlers',\n    value: function detachEventHandlers() {\n      var _this3 = this;\n\n      this.props.events.forEach(function (event) {\n        if (typeof _this3.props[event[1]] !== 'undefined') {\n          _this3.el.off(event[0]);\n        }\n      });\n    }\n  }, {\n    key: 'prepareValue',\n    value: function prepareValue(value, defaultValue) {\n      var issetValue = typeof value !== 'undefined' && value !== null;\n      var issetDefaultValue = typeof defaultValue !== 'undefined';\n\n      if (!issetValue && issetDefaultValue) {\n        return defaultValue;\n      }\n\n      return value;\n    }\n  }, {\n    key: 'prepareOptions',\n    value: function prepareOptions(options) {\n      var opt = options;\n\n      if (typeof opt.dropdownParent === 'string') {\n        opt.dropdownParent = (0, _jquery2.default)(opt.dropdownParent);\n      }\n\n      return opt;\n    }\n  }, {\n    key: 'isObject',\n    value: function isObject(value) {\n      var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n      return type === 'function' || value && type === 'object' || false;\n    }\n  }, {\n    key: 'makeOption',\n    value: function makeOption(item) {\n      if (this.isObject(item)) {\n        var id = item.id,\n            text = item.text,\n            itemParams = _objectWithoutProperties(item, ['id', 'text']);\n\n        return _react2.default.createElement('option', _extends({\n          key: 'option-' + id,\n          value: id\n        }, itemParams), text);\n      }\n\n      return _react2.default.createElement('option', {\n        key: 'option-' + item,\n        value: item\n      }, item);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          value = _props2.value,\n          props = _objectWithoutProperties(_props2, ['data', 'value']);\n\n      delete props.options;\n      delete props.events;\n      delete props.onOpen;\n      delete props.onClose;\n      delete props.onSelect;\n      delete props.onChange;\n      delete props.onUnselect;\n      return _react2.default.createElement('select', props, data.map(function (item, k) {\n        if (_this4.isObject(item) && _this4.isObject(item.children)) {\n          var children = item.children,\n              text = item.text,\n              itemParams = _objectWithoutProperties(item, ['children', 'text']);\n\n          return _react2.default.createElement('optgroup', _extends({\n            key: 'optgroup-' + k,\n            label: text\n          }, itemParams), children.map(function (child) {\n            return _this4.makeOption(child);\n          }));\n        }\n\n        return _this4.makeOption(item);\n      }));\n    }\n  }]);\n\n  return Select2;\n}(_react.Component);\n\nSelect2.propTypes = {\n  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.string]),\n  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.string]),\n  data: _propTypes2.default.array,\n  events: _propTypes2.default.array,\n  options: _propTypes2.default.object,\n  multiple: _propTypes2.default.bool,\n  onOpen: _propTypes2.default.func,\n  onClose: _propTypes2.default.func,\n  onSelect: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  onUnselect: _propTypes2.default.func\n};\nSelect2.defaultProps = {\n  data: [],\n  events: [['change.' + namespace, 'onChange'], ['select2:open.' + namespace, 'onOpen'], ['select2:close.' + namespace, 'onClose'], ['select2:select.' + namespace, 'onSelect'], ['select2:unselect.' + namespace, 'onUnselect']],\n  options: {},\n  multiple: false\n};\nexports.default = Select2;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}