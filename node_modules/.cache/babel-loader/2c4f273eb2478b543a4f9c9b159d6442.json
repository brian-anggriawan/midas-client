{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\list-file.jsx\";\nimport React from 'react';\nimport Pageadmin from 'layouts/page-admin';\nimport Formfile from './form-file';\nimport Listfiledetail from './list_file_detail';\nimport { Button, Row, Col, Card, CardText, Input, Badge } from 'reactstrap';\nimport Scroll from 'simplebar-react';\nimport download from 'downloadjs';\nimport Loading from 'layouts/loading-modal';\nimport Tabel from 'layouts/tabel';\nimport app from 'app';\n\nvar listFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listFile, _React$Component);\n\n  function listFile() {\n    var _this;\n\n    _classCallCheck(this, listFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listFile).call(this));\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.mode2 = function () {\n      _this.setState({\n        modal2: !_this.state.modal2\n      });\n    };\n\n    _this.loading = function () {\n      _this.setState({\n        loading: !_this.state.loading\n      });\n    };\n\n    _this.Showlist = function (repo) {\n      app.apiGet2('uploadfile', repo, _this.state.idperiod).then(function (res) {\n        var data = [];\n        res.map(function (x) {\n          return data.push({\n            COUNT: x.COUNT,\n            DIRECTORY: x.DIRECTORY,\n            ID_TEMPLATE: x.ID_TEMPLATE,\n            LAST_UPLOAD: null,\n            NODOC: \"LP-CB-00029\",\n            REPO: \"[BB MBS-2] Laporan Kontrol Log Sengon MBS \",\n            TEMPLATE: \"HEK 9\"\n          });\n        });\n\n        _this.setState({\n          groupfile: data\n        });\n      });\n    };\n\n    _this.action = function (index) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: function onClick() {\n          return _this.onClickForm(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"info\",\n        onClick: function onClick() {\n          return _this.onClickProductSelected(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"History\"));\n    };\n\n    _this.status = function (count) {\n      if (count > 0) {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"Sudah Upload\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Belum Upload\");\n      }\n    };\n\n    _this.selectPeriod = function (e) {\n      _this.setState({\n        idperiod: e.target.value\n      });\n\n      app.apiGet2('uploadfile/repo', app.dataUser[0].IDLOGIN, e.target.value).then(function (res) {\n        _this.setState({\n          repo: res\n        });\n\n        _this.setState({\n          groupfile: []\n        });\n      });\n    };\n\n    _this.Downloadfile =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var data, idformat, name, res, blob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return app.apiGet1('formatfile/index', id);\n\n              case 2:\n                data = _context.sent;\n                idformat = data[0].ID_FORMAT;\n                name = data[0].ORIGINAL_NAME;\n\n                _this.loading();\n\n                _context.next = 8;\n                return fetch(app.proxy + 'formatfile/download/' + idformat, {\n                  method: 'get',\n                  headers: app.head2\n                });\n\n              case 8:\n                res = _context.sent;\n\n                if (!res) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 12;\n                return res.blob();\n\n              case 12:\n                blob = _context.sent;\n                download(blob, name);\n\n                _this.loading();\n\n                app.apiGet1('formatfile/delete', idformat);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.SearchReport = function (e) {\n      _this.setState({\n        filtercard: e.target.value\n      });\n    };\n\n    _this.state = {\n      repo: [],\n      groupfile: [],\n      filedetail: [],\n      modal: false,\n      modal2: false,\n      loading: false,\n      accperiod: [],\n      dataform: [],\n      idperiod: app.dataUser[0].ID_PERIOD,\n      filtercard: ''\n    };\n    return _this;\n  }\n\n  _createClass(listFile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      app.apiGet('accperiod').then(function (res) {\n        _this2.setState({\n          accperiod: res\n        });\n      });\n      app.apiGet2('uploadfile/repo', app.dataUser[0].IDLOGIN, app.dataUser[0].ID_PERIOD).then(function (res) {\n        _this2.setState({\n          repo: res\n        });\n      });\n    }\n  }, {\n    key: \"onClickProductSelected\",\n    value: function onClickProductSelected(index) {\n      var _this3 = this;\n\n      app.apiGet2('uploadfiledetail', index, this.state.idperiod).then(function (res) {\n        _this3.setState({\n          filedetail: res\n        });\n      });\n      this.setState({\n        modal: true\n      });\n      this.mode();\n    }\n  }, {\n    key: \"onClickForm\",\n    value: function onClickForm(rowindex) {\n      var groupfile = this.state.groupfile.filter(function (res) {\n        return res.ID_TEMPLATE === rowindex;\n      })[0];\n      var idselect = document.getElementById('period');\n      var txselect = idselect.options[idselect.selectedIndex].text;\n      var data = [{\n        idperiod: this.state.idperiod,\n        idtemplate: groupfile.ID_TEMPLATE,\n        directory: groupfile.DIRECTORY,\n        period: txselect,\n        nodoc: groupfile.NODOC,\n        repo: groupfile.REPO\n      }];\n      this.setState({\n        dataform: data\n      });\n      this.mode2();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          filtercard = _this$state.filtercard,\n          repo = _this$state.repo;\n      var filterRepo = repo.filter(function (x) {\n        return x.REPOSITORY.toLowerCase().includes(filtercard.toLowerCase());\n      });\n      return React.createElement(Pageadmin, {\n        head: 'List File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        modal: this.state.loading,\n        text: 'Proses Download',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Listfiledetail, {\n        modal: this.state.modal,\n        mode: this.mode,\n        data: this.state.filedetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Formfile, {\n        modal: this.state.modal2,\n        mode: this.mode2,\n        data: this.state.dataform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"select\",\n        id: \"period\",\n        className: \"mb-2 w-25\",\n        onChange: this.selectPeriod,\n        value: this.state.idperiod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.accperiod.map(function (data) {\n        return React.createElement(\"option\", {\n          key: data.VCIDACCPERIOD,\n          value: data.VCIDACCPERIOD,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, data.VCDESCRIPTION);\n      })), React.createElement(Input, {\n        type: \"text\",\n        className: \"mb-2 w-25\",\n        onChange: this.SearchReport,\n        placeholder: \"Cari Laporan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Scroll, {\n        style: {\n          height: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, filterRepo.map(function (repo) {\n        return React.createElement(Card, {\n          id: \"cardfile\",\n          body: true,\n          key: repo.ID_REPO,\n          style: {\n            marginBottom: '10px',\n            border: '5px solid lightblue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(CardText, {\n          style: {\n            fontSize: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, repo.REPOSITORY), React.createElement(CardText, {\n          style: {\n            fontSize: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, repo.JENIS_REPO), React.createElement(CardText, {\n          className: \"text-center\",\n          style: {\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, repo.COUNT), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          onClick: function onClick() {\n            return _this4.Showlist(repo.ID_REPO);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Show File\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }), repo.JUMLAH_FORMAT === 0 ? React.createElement(Button, {\n          color: \"default\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Belum Ada Format\") : React.createElement(Button, {\n          color: \"default\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          onClick: function onClick() {\n            return _this4.Downloadfile(repo.ID_REPO);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Download Format\")));\n      }))), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Tabel, {\n        keyField: 'TEMPLATE',\n        data: this.state.groupfile,\n        columns: [{\n          dataField: 'TEMPLATE',\n          text: 'Periode'\n        }, {\n          dataField: 'LAST_UPLOAD',\n          text: 'Last Upload'\n        }, {\n          dataField: 'COUNT',\n          text: 'Jumlah File'\n        }, {\n          dataField: 'COUNT',\n          text: 'Status',\n          formatter: this.status\n        }, {\n          dataField: 'ID_TEMPLATE',\n          text: 'Action',\n          formatter: this.action\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return listFile;\n}(React.Component);\n\nexport default listFile;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\list-file.jsx"],"names":["React","Pageadmin","Formfile","Listfiledetail","Button","Row","Col","Card","CardText","Input","Badge","Scroll","download","Loading","Tabel","app","listFile","mode","setState","modal","state","mode2","modal2","loading","Showlist","repo","apiGet2","idperiod","then","res","data","map","x","push","COUNT","DIRECTORY","ID_TEMPLATE","LAST_UPLOAD","NODOC","REPO","TEMPLATE","groupfile","action","index","onClickForm","onClickProductSelected","status","count","selectPeriod","e","target","value","dataUser","IDLOGIN","Downloadfile","id","apiGet1","idformat","ID_FORMAT","name","ORIGINAL_NAME","fetch","proxy","method","headers","head2","blob","SearchReport","filtercard","filedetail","accperiod","dataform","ID_PERIOD","apiGet","rowindex","filter","idselect","document","getElementById","txselect","options","selectedIndex","text","idtemplate","directory","period","nodoc","filterRepo","REPOSITORY","toLowerCase","includes","VCIDACCPERIOD","VCDESCRIPTION","height","ID_REPO","marginBottom","border","fontSize","JENIS_REPO","fontWeight","width","JUMLAH_FORMAT","dataField","formatter","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,MAAT,EAAkBC,GAAlB,EAAwBC,GAAxB,EAA8BC,IAA9B,EAAqCC,QAArC,EAAgDC,KAAhD,EAAwDC,KAAxD,QAAqE,YAArE;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;IAGMC,Q;;;;;AACF,sBAAa;AAAA;;AAAA;;AACT;;AADS,UAkBXC,IAlBW,GAkBJ,YAAK;AACR,YAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADT,OAAd;AAGH,KAtBU;;AAAA,UAwBXE,KAxBW,GAwBH,YAAK;AACX,YAAKH,QAAL,CAAc;AACZI,QAAAA,MAAM,EAAE,CAAC,MAAKF,KAAL,CAAWE;AADR,OAAd;AAGD,KA5BU;;AAAA,UA8BXC,OA9BW,GA8BD,YAAK;AACb,YAAKL,QAAL,CAAc;AACZK,QAAAA,OAAO,EAAE,CAAC,MAAKH,KAAL,CAAWG;AADT,OAAd;AAGD,KAlCU;;AAAA,UAuDXC,QAvDW,GAuDA,UAACC,IAAD,EAAS;AAElBV,MAAAA,GAAG,CAACW,OAAJ,CAAY,YAAZ,EAAyBD,IAAzB,EAAgC,MAAKL,KAAL,CAAWO,QAA3C,EACIC,IADJ,CACS,UAAAC,GAAG,EAAG;AACV,YAAIC,IAAI,GAAG,EAAX;AAEAD,QAAAA,GAAG,CAACE,GAAJ,CAAQ,UAAAC,CAAC;AAAA,iBACNF,IAAI,CAACG,IAAL,CAAU;AACRC,YAAAA,KAAK,EAAEF,CAAC,CAACE,KADD;AAERC,YAAAA,SAAS,EAAEH,CAAC,CAACG,SAFL;AAGRC,YAAAA,WAAW,EAAEJ,CAAC,CAACI,WAHP;AAIRC,YAAAA,WAAW,EAAE,IAJL;AAKRC,YAAAA,KAAK,EAAE,aALC;AAMRC,YAAAA,IAAI,EAAE,4CANE;AAORC,YAAAA,QAAQ,EAAE;AAPF,WAAV,CADM;AAAA,SAAT;;AAWD,cAAKtB,QAAL,CAAc;AACZuB,UAAAA,SAAS,EAAEX;AADC,SAAd;AAGA,OAlBJ;AAmBD,KA5EU;;AAAA,UAkHXY,MAlHW,GAkHF,UAACC,KAAD,EAAS;AAChB,aACE,0CACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAKC,WAAL,CAAiBD,KAAjB,CAAL;AAAA,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,MAAtC;AAA6C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKE,sBAAL,CAA4BF,KAA5B,CAAN;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADF;AAOD,KA1HU;;AAAA,UA2HXG,MA3HW,GA2HF,UAACC,KAAD,EAAS;AAEhB,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,OAFD,MAEK;AACH,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;AACF,KAlIU;;AAAA,UAoIXC,YApIW,GAoIG,UAACC,CAAD,EAAK;AAEjB,YAAK/B,QAAL,CAAc;AACZS,QAAAA,QAAQ,EAAEsB,CAAC,CAACC,MAAF,CAASC;AADP,OAAd;;AAIApC,MAAAA,GAAG,CAACW,OAAJ,CAAY,iBAAZ,EAA8BX,GAAG,CAACqC,QAAJ,CAAa,CAAb,EAAgBC,OAA9C,EAAuDJ,CAAC,CAACC,MAAF,CAASC,KAAhE,EACIvB,IADJ,CACS,UAAAC,GAAG,EAAG;AACP,cAAKX,QAAL,CAAc;AACZO,UAAAA,IAAI,EAAEI;AADM,SAAd;;AAGF,cAAKX,QAAL,CAAc;AACZuB,UAAAA,SAAS,EAAE;AADC,SAAd;AAGL,OARD;AASD,KAnJU;;AAAA,UAqJXa,YArJW;AAAA;AAAA;AAAA;AAAA;AAAA,+BAqJI,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEIxC,GAAG,CAACyC,OAAJ,CAAY,kBAAZ,EAAiCD,EAAjC,CAFJ;;AAAA;AAETzB,gBAAAA,IAFS;AAGT2B,gBAAAA,QAHS,GAGE3B,IAAI,CAAC,CAAD,CAAJ,CAAQ4B,SAHV;AAITC,gBAAAA,IAJS,GAIF7B,IAAI,CAAC,CAAD,CAAJ,CAAQ8B,aAJN;;AAOb,sBAAKrC,OAAL;;AAPa;AAAA,uBASGsC,KAAK,CAAC9C,GAAG,CAAC+C,KAAJ,GAAU,sBAAV,GAAiCL,QAAlC,EAA2C;AAC5DM,kBAAAA,MAAM,EAAE,KADoD;AAE5DC,kBAAAA,OAAO,EAAEjD,GAAG,CAACkD;AAF+C,iBAA3C,CATR;;AAAA;AASTpC,gBAAAA,GATS;;AAAA,qBAcTA,GAdS;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAeKA,GAAG,CAACqC,IAAJ,EAfL;;AAAA;AAeRA,gBAAAA,IAfQ;AAiBZtD,gBAAAA,QAAQ,CAACsD,IAAD,EAAQP,IAAR,CAAR;;AACA,sBAAKpC,OAAL;;AACAR,gBAAAA,GAAG,CAACyC,OAAJ,CAAY,mBAAZ,EAAgCC,QAAhC;;AAnBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArJJ;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA6KXU,YA7KW,GA6KI,UAAClB,CAAD,EAAK;AAClB,YAAK/B,QAAL,CAAc;AACZkD,QAAAA,UAAU,EAAEnB,CAAC,CAACC,MAAF,CAASC;AADT,OAAd;AAGD,KAjLU;;AAGT,UAAK/B,KAAL,GAAa;AACXK,MAAAA,IAAI,EAAE,EADK;AAEXgB,MAAAA,SAAS,EAAE,EAFA;AAGX4B,MAAAA,UAAU,EAAC,EAHA;AAIXlD,MAAAA,KAAK,EAAE,KAJI;AAKXG,MAAAA,MAAM,EAAE,KALG;AAMXC,MAAAA,OAAO,EAAE,KANE;AAOX+C,MAAAA,SAAS,EAAE,EAPA;AAQXC,MAAAA,QAAQ,EAAE,EARC;AASX5C,MAAAA,QAAQ,EAAEZ,GAAG,CAACqC,QAAJ,CAAa,CAAb,EAAgBoB,SATf;AAUXJ,MAAAA,UAAU,EAAC;AAVA,KAAb;AAHS;AAeV;;;;yCAsBmB;AAAA;;AAElBrD,MAAAA,GAAG,CAAC0D,MAAJ,CAAW,WAAX,EACI7C,IADJ,CACS,UAAAC,GAAG,EAAG;AACV,QAAA,MAAI,CAACX,QAAL,CAAc;AACZoD,UAAAA,SAAS,EAAEzC;AADC,SAAd;AAGD,OALJ;AAOAd,MAAAA,GAAG,CAACW,OAAJ,CAAY,iBAAZ,EAA8BX,GAAG,CAACqC,QAAJ,CAAa,CAAb,EAAgBC,OAA9C,EAAuDtC,GAAG,CAACqC,QAAJ,CAAa,CAAb,EAAgBoB,SAAvE,EACI5C,IADJ,CACS,UAAAC,GAAG,EAAG;AACP,QAAA,MAAI,CAACX,QAAL,CAAc;AACZO,UAAAA,IAAI,EAAEI;AADM,SAAd;AAGP,OALD;AAOD;;;2CAyBsBc,K,EAAM;AAAA;;AAEvB5B,MAAAA,GAAG,CAACW,OAAJ,CAAY,kBAAZ,EAAiCiB,KAAjC,EAAyC,KAAKvB,KAAL,CAAWO,QAApD,EACIC,IADJ,CACS,UAAAC,GAAG,EAAG;AACX,QAAA,MAAI,CAACX,QAAL,CAAc;AACZmD,UAAAA,UAAU,EAAExC;AADA,SAAd;AAGA,OALJ;AAQA,WAAKX,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AADK,OAAd;AAIA,WAAKF,IAAL;AACJ;;;gCAEWyD,Q,EAAS;AACnB,UAAIjC,SAAS,GAAG,KAAKrB,KAAL,CAAWqB,SAAX,CAAqBkC,MAArB,CAA4B,UAAA9C,GAAG;AAAA,eAAIA,GAAG,CAACO,WAAJ,KAAoBsC,QAAxB;AAAA,OAA/B,EAAiE,CAAjE,CAAhB;AACA,UAAIE,QAAQ,GAAIC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAhB;AACA,UAAIC,QAAQ,GAAEH,QAAQ,CAACI,OAAT,CAAiBJ,QAAQ,CAACK,aAA1B,EAAyCC,IAAvD;AAEA,UAAIpD,IAAI,GAAG,CAAC;AACVH,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QADX;AAEVwD,QAAAA,UAAU,EAAE1C,SAAS,CAACL,WAFZ;AAGVgD,QAAAA,SAAS,EAAE3C,SAAS,CAACN,SAHX;AAIVkD,QAAAA,MAAM,EAAGN,QAJC;AAKVO,QAAAA,KAAK,EAAE7C,SAAS,CAACH,KALP;AAMVb,QAAAA,IAAI,EAAGgB,SAAS,CAACF;AANP,OAAD,CAAX;AAQD,WAAKrB,QAAL,CAAc;AACZqD,QAAAA,QAAQ,EAACzC;AADG,OAAd;AAGA,WAAKT,KAAL;AACA;;;6BAmEO;AAAA;;AAAA,wBACqB,KAAKD,KAD1B;AAAA,UACDgD,UADC,eACDA,UADC;AAAA,UACY3C,IADZ,eACYA,IADZ;AAEP,UAAI8D,UAAU,GAAG9D,IAAI,CAACkD,MAAL,CAAa,UAAA3C,CAAC,EAAG;AACjC,eAAOA,CAAC,CAACwD,UAAF,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCtB,UAAU,CAACqB,WAAX,EAApC,CAAP;AACA,OAFgB,CAAjB;AAIA,aACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKrE,KAAL,CAAWG,OAA3B;AAAoC,QAAA,IAAI,EAAE,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAG,KAAKH,KAAL,CAAWD,KAAnC;AAA0C,QAAA,IAAI,EAAG,KAAKF,IAAtD;AAA4D,QAAA,IAAI,EAAG,KAAKG,KAAL,CAAWiD,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWE,MAA5B;AAAoC,QAAA,IAAI,EAAE,KAAKD,KAA/C;AAAsD,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWmD,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EAIA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,QAAxB;AAAiC,QAAA,SAAS,EAAC,WAA3C;AAAwD,QAAA,QAAQ,EAAE,KAAKvB,YAAvE;AAAqF,QAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWO,QAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEM,KAAKP,KAAL,CAAWkD,SAAX,CAAqBvC,GAArB,CAAyB,UAAAD,IAAI;AAAA,eAC5B;AAAQ,UAAA,GAAG,EAAEA,IAAI,CAAC6D,aAAlB;AAAiC,UAAA,KAAK,EAAG7D,IAAI,CAAC6D,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8D7D,IAAI,CAAC8D,aAAnE,CAD4B;AAAA,OAA7B,CAFN,CAJA,EAWA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAyC,QAAA,QAAQ,EAAE,KAAKzB,YAAxD;AAAsE,QAAA,WAAW,EAAC,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,EAYA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAE0B,UAAAA,MAAM,EAAE;AAAV,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEN,UAAU,CAACxD,GAAX,CAAe,UAAAN,IAAI;AAAA,eACnB,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAoB,UAAA,IAAI,MAAxB;AAAyB,UAAA,GAAG,EAAEA,IAAI,CAACqE,OAAnC;AAA4C,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE,MAAhB;AAAyBC,YAAAA,MAAM,EAAE;AAAjC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAC;AAAV,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCxE,IAAI,CAAC+D,UAA1C,CADF,EAEE,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAACS,YAAAA,QAAQ,EAAC;AAAV,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCxE,IAAI,CAACyE,UAA1C,CAFF,EAGE,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAC,aAApB;AAAkC,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgE1E,IAAI,CAACS,KAArE,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,IAAI,EAAC,IAA7B;AAAkC,UAAA,KAAK,EAAE;AAACkE,YAAAA,KAAK,EAAE;AAAR,WAAzC;AAA0D,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAI,CAAC5E,QAAL,CAAcC,IAAI,CAACqE,OAAnB,CAAL;AAAA,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EACwH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADxH,EAC6H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD7H,EAGGrE,IAAI,CAAC4E,aAAL,KAAuB,CAAvB,GAA2B,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,IAAI,EAAC,IAA7B;AAAkC,UAAA,KAAK,EAAE;AAACD,YAAAA,KAAK,EAAE;AAAR,WAAzC;AAA0D,UAAA,QAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA3B,GACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,IAAI,EAAC,IAA7B;AAAkC,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAE;AAAR,WAAzC;AAA0D,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAI,CAAC9C,YAAL,CAAkB7B,IAAI,CAACqE,OAAvB,CAAL;AAAA,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJL,CAJF,CADmB;AAAA,OAAnB,CAFF,CADA,CADN,EAsBI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,QAAQ,EAAE,UADZ;AAEE,QAAA,IAAI,EAAE,KAAK1E,KAAL,CAAWqB,SAFnB;AAGE,QAAA,OAAO,EAAE,CACP;AACE6D,UAAAA,SAAS,EAAC,UADZ;AAEEpB,UAAAA,IAAI,EAAE;AAFR,SADO,EAKP;AACEoB,UAAAA,SAAS,EAAC,aADZ;AAEEpB,UAAAA,IAAI,EAAE;AAFR,SALO,EASP;AACEoB,UAAAA,SAAS,EAAC,OADZ;AAEEpB,UAAAA,IAAI,EAAE;AAFR,SATO,EAaP;AACEoB,UAAAA,SAAS,EAAC,OADZ;AAEEpB,UAAAA,IAAI,EAAE,QAFR;AAGEqB,UAAAA,SAAS,EAAE,KAAKzD;AAHlB,SAbO,EAkBP;AACEwD,UAAAA,SAAS,EAAC,aADZ;AAEEpB,UAAAA,IAAI,EAAE,QAFR;AAGEqB,UAAAA,SAAS,EAAE,KAAK7D;AAHlB,SAlBO,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAtBJ,CAZA,CADF;AAuED;;;;EAjQgB1C,KAAK,CAACwG,S;;AAoQ7B,eAAexF,QAAf","sourcesContent":["import React from 'react';\r\nimport Pageadmin from 'layouts/page-admin';\r\nimport Formfile from './form-file';\r\nimport Listfiledetail from './list_file_detail';\r\nimport { Button , Row , Col , Card , CardText , Input , Badge } from 'reactstrap';\r\nimport Scroll from 'simplebar-react';\r\nimport download from 'downloadjs';\r\nimport Loading from 'layouts/loading-modal';\r\nimport Tabel from 'layouts/tabel';\r\nimport app from 'app';\r\n\r\n\r\nclass listFile extends React.Component{\r\n    constructor(){\r\n        super()\r\n    \r\n        this.state = {\r\n          repo: [],\r\n          groupfile: [],\r\n          filedetail:[],\r\n          modal: false,\r\n          modal2: false,\r\n          loading: false,\r\n          accperiod: [],\r\n          dataform: [],\r\n          idperiod: app.dataUser[0].ID_PERIOD,\r\n          filtercard:''\r\n        }\r\n      }\r\n\r\n\r\n      mode = () =>{\r\n          this.setState({\r\n              modal: !this.state.modal\r\n          })\r\n      }\r\n\r\n      mode2 = () =>{\r\n        this.setState({\r\n          modal2: !this.state.modal2\r\n      })\r\n      }\r\n\r\n      loading = () =>{\r\n        this.setState({\r\n          loading: !this.state.loading\r\n        })\r\n      }\r\n    \r\n    \r\n      componentWillMount(){\r\n\r\n        app.apiGet('accperiod')\r\n           .then(res =>{\r\n             this.setState({\r\n               accperiod: res\r\n             })\r\n           })\r\n\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN ,app.dataUser[0].ID_PERIOD)\r\n           .then(res =>{\r\n                this.setState({\r\n                  repo: res\r\n            })\r\n        }) \r\n\r\n      }\r\n\r\n      Showlist = (repo) =>{\r\n\r\n        app.apiGet2('uploadfile',repo , this.state.idperiod)\r\n           .then(res =>{\r\n             let data = [];\r\n\r\n             res.map(x =>\r\n                data.push({\r\n                  COUNT: x.COUNT,\r\n                  DIRECTORY: x.DIRECTORY,\r\n                  ID_TEMPLATE: x.ID_TEMPLATE,\r\n                  LAST_UPLOAD: null,\r\n                  NODOC: \"LP-CB-00029\",\r\n                  REPO: \"[BB MBS-2] Laporan Kontrol Log Sengon MBS \",\r\n                  TEMPLATE: \"HEK 9\",\r\n                })\r\n              )\r\n            this.setState({\r\n              groupfile: data\r\n            })\r\n           })\r\n      }\r\n\r\n      onClickProductSelected(index){\r\n\r\n            app.apiGet2('uploadfiledetail' , index , this.state.idperiod)\r\n               .then(res =>{\r\n                this.setState({\r\n                  filedetail: res\r\n                })\r\n               })\r\n\r\n\r\n            this.setState({\r\n              modal: true\r\n            })  \r\n            \r\n            this.mode();\r\n       }\r\n\r\n       onClickForm(rowindex){\r\n         let groupfile = this.state.groupfile.filter(res => res.ID_TEMPLATE === rowindex)[0];\r\n         let idselect  = document.getElementById('period');\r\n         let txselect= idselect.options[idselect.selectedIndex].text;\r\n\r\n         let data = [{\r\n           idperiod: this.state.idperiod,\r\n           idtemplate: groupfile.ID_TEMPLATE,\r\n           directory: groupfile.DIRECTORY,\r\n           period : txselect,\r\n           nodoc: groupfile.NODOC,\r\n           repo : groupfile.REPO\r\n         }]\r\n        this.setState({\r\n          dataform:data\r\n        })\r\n        this.mode2();\r\n       }\r\n\r\n      action = (index)=>{\r\n        return(\r\n          <>\r\n          <Button type=\"button\" size=\"sm\" color=\"success\" onClick={()=> this.onClickForm(index)}>Upload</Button>\r\n          <Button type=\"button\" size=\"sm\" color=\"info\" onClick={() => this.onClickProductSelected(index)}>History</Button>\r\n          </>\r\n          \r\n        )\r\n      }\r\n      status = (count)=>{\r\n    \r\n        if (count > 0) {\r\n          return <Badge color=\"success\">Sudah Upload</Badge>\r\n        }else{\r\n          return <Badge color=\"danger\">Belum Upload</Badge>\r\n        }\r\n      }\r\n\r\n      selectPeriod =(e)=>{\r\n\r\n        this.setState({\r\n          idperiod: e.target.value\r\n        })\r\n\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN ,e.target.value)\r\n           .then(res =>{\r\n                this.setState({\r\n                  repo: res\r\n            })\r\n              this.setState({\r\n                groupfile: []\r\n              })\r\n        }) \r\n      }\r\n\r\n      Downloadfile = async (id) =>{\r\n\r\n        let data = await app.apiGet1('formatfile/index' , id);\r\n        let idformat = data[0].ID_FORMAT;\r\n        let name = data[0].ORIGINAL_NAME;\r\n\r\n  \r\n        this.loading();\r\n \r\n        let res = await fetch(app.proxy+'formatfile/download/'+idformat,{\r\n            method: 'get',\r\n            headers: app.head2\r\n        });\r\n \r\n        if (res) {\r\n         let blob = await res.blob();\r\n     \r\n         download(blob , name);\r\n         this.loading();\r\n         app.apiGet1('formatfile/delete',idformat)  \r\n          \r\n        }\r\n      }\r\n\r\n      SearchReport = (e)=>{\r\n        this.setState({\r\n          filtercard: e.target.value\r\n        })\r\n      }\r\n    \r\n      render() {\r\n        let { filtercard , repo } = this.state;\r\n        let filterRepo = repo.filter( x =>{\r\n         return x.REPOSITORY.toLowerCase().includes(filtercard.toLowerCase())\r\n        })\r\n\r\n        return (\r\n          <Pageadmin head={'List File'}>\r\n          <Loading modal={this.state.loading} text={'Proses Download'}/>\r\n          <Listfiledetail modal= {this.state.modal} mode ={this.mode} data ={this.state.filedetail} />\r\n          <Formfile modal={this.state.modal2} mode={this.mode2} data={this.state.dataform} />\r\n          <Input type=\"select\" id=\"period\" className='mb-2 w-25'  onChange={this.selectPeriod} value={this.state.idperiod}>\r\n              {\r\n                this.state.accperiod.map(data =>\r\n                 <option key={data.VCIDACCPERIOD} value ={data.VCIDACCPERIOD}>{data.VCDESCRIPTION}</option> \r\n                )\r\n              }\r\n          </Input>\r\n          <Input type='text' className='mb-2 w-25' onChange={this.SearchReport} placeholder='Cari Laporan'/>\r\n          <Row>\r\n                <Col sm=\"3\"> \r\n                <Scroll style={{ height: '700px' }}>\r\n                {\r\n                  filterRepo.map(repo =>\r\n                  <Card id=\"cardfile\" body key={repo.ID_REPO} style={{ marginBottom: '10px' , border: '5px solid lightblue'}}> \r\n                    <CardText style={{fontSize:'15px'}}>{repo.REPOSITORY}</CardText>\r\n                    <CardText style={{fontSize:'15px'}}>{repo.JENIS_REPO}</CardText>\r\n                    <CardText className=\"text-center\" style={{fontWeight: 'bold'}}>{repo.COUNT}</CardText>\r\n                    <div>\r\n                     <Button color=\"primary\" size='sm' style={{width: '100%'}} onClick={()=> this.Showlist(repo.ID_REPO)}>Show File</Button><br/><br/>\r\n                     {\r\n                       repo.JUMLAH_FORMAT === 0 ? <Button color=\"default\" size='sm' style={{width: '100%'}} disabled >Belum Ada Format</Button>\r\n                       : <Button color=\"default\" size='sm' style={{width: '100%'}} onClick={()=> this.Downloadfile(repo.ID_REPO)} >Download Format</Button>\r\n                     }  \r\n                    </div>\r\n                  </Card> \r\n                  )\r\n                }\r\n                </Scroll>\r\n                </Col>\r\n              \r\n              <Col sm=\"9\">\r\n                <Scroll>\r\n                  <Tabel \r\n                    keyField={'TEMPLATE'}\r\n                    data={this.state.groupfile}\r\n                    columns={[\r\n                      {\r\n                        dataField:'TEMPLATE',\r\n                        text: 'Periode'\r\n                      },\r\n                      {\r\n                        dataField:'LAST_UPLOAD',\r\n                        text: 'Last Upload'\r\n                      },\r\n                      {\r\n                        dataField:'COUNT',\r\n                        text: 'Jumlah File'\r\n                      },\r\n                      {\r\n                        dataField:'COUNT',\r\n                        text: 'Status',\r\n                        formatter: this.status\r\n                      },\r\n                      {\r\n                        dataField:'ID_TEMPLATE',\r\n                        text: 'Action',\r\n                        formatter: this.action\r\n                      }\r\n                    ]}\r\n                  \r\n                  />\r\n                  </Scroll>\r\n              </Col>\r\n            </Row>\r\n          </Pageadmin>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default listFile;"]},"metadata":{},"sourceType":"module"}