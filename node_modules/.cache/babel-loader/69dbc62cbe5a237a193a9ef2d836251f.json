{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\list_file_detail.jsx\";\nimport React from 'react';\nimport Baselistmmodal from 'layouts/list_modal';\nimport Tabel from 'layouts/tabel';\nimport { Button, Badge } from 'reactstrap';\nimport download from 'downloadjs';\nimport Loading from 'layouts/loading-modal';\nimport Scroll from 'simplebar-react';\nimport app from 'app';\n\nvar listfiledetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listfiledetail, _React$Component);\n\n  function listfiledetail(props) {\n    var _this;\n\n    _classCallCheck(this, listfiledetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listfiledetail).call(this, props));\n\n    _this.action = function (id) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this.Downloadfile(id);\n        },\n        outline: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Download\"));\n    };\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.cekversion = function (id) {\n      if (id === 1) {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"File Terbaru\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"File Lama\");\n      }\n    };\n\n    _this.state = {\n      modal: false\n    };\n    return _this;\n  }\n\n  _createClass(listfiledetail, [{\n    key: \"Downloadfile\",\n    value: function () {\n      var _Downloadfile = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var data, idfile, name, res, blob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = this.props.data.filter(function (res) {\n                  return res.ID_FILE === id;\n                })[0];\n                idfile = data.ID_FILE;\n                name = data.ORIGINAL_NAME;\n                this.mode();\n                _context.next = 6;\n                return fetch(app.proxy + 'downloadfile/' + idfile, {\n                  method: 'get',\n                  headers: app.head2\n                });\n\n              case 6:\n                res = _context.sent;\n\n                if (!res) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 10;\n                return res.blob();\n\n              case 10:\n                blob = _context.sent;\n                download(blob, name);\n                this.mode();\n                app.apiGet1('deletefile', idfile);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function Downloadfile(_x) {\n        return _Downloadfile.apply(this, arguments);\n      }\n\n      return Downloadfile;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        sizePerPage: 10,\n        hideSizePerPage: true,\n        prePage: 'Back',\n        nextPage: 'Next'\n      };\n      return React.createElement(Baselistmmodal, {\n        modal: this.props.modal,\n        mode: this.props.mode,\n        title: 'List Detail File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        modal: this.state.modal,\n        text: 'Proses Download',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Tabel, {\n        keyField: 'ID_FILE',\n        data: this.props.data,\n        columns: [{\n          dataField: 'DTUPLOAD',\n          text: 'Tanggal Upload'\n        }, {\n          dataField: 'FILE_DESCRIPTION',\n          text: 'Description'\n        }, {\n          dataField: 'ORIGINAL_NAME',\n          text: 'File Name'\n        }, {\n          dataField: 'USER',\n          text: 'User Upload'\n        }, {\n          dataField: 'ACTIVE',\n          text: 'Status',\n          formatter: this.cekversion\n        }, {\n          dataField: 'ID_FILE',\n          text: 'Action',\n          formatter: this.action\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return listfiledetail;\n}(React.Component);\n\nexport default listfiledetail;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\list_file_detail.jsx"],"names":["React","Baselistmmodal","Tabel","Button","Badge","download","Loading","Scroll","app","listfiledetail","props","action","id","Downloadfile","mode","setState","modal","state","cekversion","data","filter","res","ID_FILE","idfile","name","ORIGINAL_NAME","fetch","proxy","method","headers","head2","blob","apiGet1","options","sizePerPage","hideSizePerPage","prePage","nextPage","dataField","text","formatter","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,MAAR,EAAiBC,KAAjB,QAA6B,YAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;IAGMC,c;;;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAMA,KAAN;;AADc,UAOlBC,MAPkB,GAOV,UAACC,EAAD,EAAM;AACV,aACI,0CACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKC,YAAL,CAAkBD,EAAlB,CAAN;AAAA,SAAzC;AAAsE,QAAA,OAAO,MAA7E;AAA8E,QAAA,KAAK,EAAC,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH,KAbiB;;AAAA,UAelBE,IAfkB,GAeZ,YAAI;AACN,YAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADT,OAAd;AAGH,KAnBiB;;AAAA,UA2ClBE,UA3CkB,GA2CN,UAACN,EAAD,EAAM;AACd,UAAIA,EAAE,KAAK,CAAX,EAAc;AACV,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,OAFD,MAEK;AACD,eAAO,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;AACJ,KAjDiB;;AAEd,UAAKK,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAFc;AAKjB;;;;;;;gDAgBkBJ,E;;;;;;AACZO,gBAAAA,I,GAAO,KAAKT,KAAL,CAAWS,IAAX,CAAgBC,MAAhB,CAAuB,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,OAAJ,KAAgBV,EAApB;AAAA,iBAA1B,EAAkD,CAAlD,C;AACPW,gBAAAA,M,GAASJ,IAAI,CAACG,O;AACdE,gBAAAA,I,GAAOL,IAAI,CAACM,a;AAEhB,qBAAKX,IAAL;;uBAEgBY,KAAK,CAAClB,GAAG,CAACmB,KAAJ,GAAU,eAAV,GAA0BJ,MAA3B,EAAmC;AACpDK,kBAAAA,MAAM,EAAE,KAD4C;AAEpDC,kBAAAA,OAAO,EAAErB,GAAG,CAACsB;AAFuC,iBAAnC,C;;;AAAjBT,gBAAAA,G;;qBAKAA,G;;;;;;uBACcA,GAAG,CAACU,IAAJ,E;;;AAAbA,gBAAAA,I;AAEJ1B,gBAAAA,QAAQ,CAAC0B,IAAD,EAAQP,IAAR,CAAR;AACA,qBAAKV,IAAL;AACAN,gBAAAA,GAAG,CAACwB,OAAJ,CAAY,YAAZ,EAAyBT,MAAzB;;;;;;;;;;;;;;;;;;6BAaI;AAEJ,UAAMU,OAAO,GAAG;AACZC,QAAAA,WAAW,EAAE,EADD;AAEZC,QAAAA,eAAe,EAAE,IAFL;AAGZC,QAAAA,OAAO,EAAE,MAHG;AAIZC,QAAAA,QAAQ,EAAE;AAJE,OAAhB;AAMA,aACI,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAG,KAAK3B,KAAL,CAAWM,KAAnC;AAA0C,QAAA,IAAI,EAAG,KAAKN,KAAL,CAAWI,IAA5D;AAAkE,QAAA,KAAK,EAAG,kBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEgB,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWD,KAA3B;AAAkC,QAAA,IAAI,EAAE,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFhB,EAGgB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,QAAQ,EAAE,SADd;AAEI,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWS,IAFrB;AAGI,QAAA,OAAO,EAAE,CACL;AACImB,UAAAA,SAAS,EAAC,UADd;AAEIC,UAAAA,IAAI,EAAC;AAFT,SADK,EAKL;AACID,UAAAA,SAAS,EAAC,kBADd;AAEIC,UAAAA,IAAI,EAAC;AAFT,SALK,EASL;AACID,UAAAA,SAAS,EAAC,eADd;AAEIC,UAAAA,IAAI,EAAC;AAFT,SATK,EAaL;AACID,UAAAA,SAAS,EAAC,MADd;AAEIC,UAAAA,IAAI,EAAC;AAFT,SAbK,EAiBL;AACID,UAAAA,SAAS,EAAC,QADd;AAEIC,UAAAA,IAAI,EAAC,QAFT;AAGIC,UAAAA,SAAS,EAAE,KAAKtB;AAHpB,SAjBK,EAsBL;AACIoB,UAAAA,SAAS,EAAC,SADd;AAEIC,UAAAA,IAAI,EAAC,QAFT;AAGIC,UAAAA,SAAS,EAAE,KAAK7B;AAHpB,SAtBK,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHhB,CADJ;AA0CH;;;;EAtGwBX,KAAK,CAACyC,S;;AA0GnC,eAAehC,cAAf","sourcesContent":["import React from 'react';\r\nimport Baselistmmodal from 'layouts/list_modal';\r\nimport Tabel from 'layouts/tabel';\r\nimport {Button , Badge} from 'reactstrap';\r\nimport download from 'downloadjs';\r\nimport Loading from 'layouts/loading-modal';\r\nimport Scroll from 'simplebar-react';\r\nimport app from 'app';\r\n\r\n\r\nclass listfiledetail extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    action =(id)=>{\r\n        return(\r\n            <>\r\n                <Button type=\"button\" size=\"sm\" onClick={() => this.Downloadfile(id)} outline color=\"success\">Download</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    mode =()=>{\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    async Downloadfile(id){\r\n       let data = this.props.data.filter(res => res.ID_FILE === id)[0];\r\n       let idfile = data.ID_FILE;\r\n       let name = data.ORIGINAL_NAME;\r\n       \r\n       this.mode();\r\n\r\n       let res = await fetch(app.proxy+'downloadfile/'+idfile ,{\r\n           method: 'get',\r\n           headers: app.head2\r\n       });\r\n\r\n       if (res) {\r\n        let blob = await res.blob();\r\n    \r\n        download(blob , name);\r\n        this.mode();\r\n        app.apiGet1('deletefile',idfile)  \r\n\r\n       }\r\n    }\r\n\r\n    cekversion =(id)=>{\r\n        if (id === 1) {\r\n            return <Badge color=\"success\">File Terbaru</Badge> \r\n        }else{\r\n            return <Badge color=\"danger\">File Lama</Badge> \r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const options = {\r\n            sizePerPage: 10,\r\n            hideSizePerPage: true,\r\n            prePage: 'Back',\r\n            nextPage: 'Next',\r\n          };\r\n        return(\r\n            <Baselistmmodal modal= {this.props.modal} mode ={this.props.mode} title ={'List Detail File'}>\r\n               \r\n                            <Loading modal={this.state.modal} text={'Proses Download'}/>\r\n                            <Scroll>\r\n                                <Tabel \r\n                                    keyField={'ID_FILE'}\r\n                                    data={this.props.data}\r\n                                    columns={[\r\n                                        {\r\n                                            dataField:'DTUPLOAD',\r\n                                            text:'Tanggal Upload'\r\n                                        },\r\n                                        {\r\n                                            dataField:'FILE_DESCRIPTION',\r\n                                            text:'Description'\r\n                                        },\r\n                                        {\r\n                                            dataField:'ORIGINAL_NAME',\r\n                                            text:'File Name'\r\n                                        },\r\n                                        {\r\n                                            dataField:'USER',\r\n                                            text:'User Upload'\r\n                                        },\r\n                                        {\r\n                                            dataField:'ACTIVE',\r\n                                            text:'Status',\r\n                                            formatter: this.cekversion\r\n                                        },\r\n                                        {\r\n                                            dataField:'ID_FILE',\r\n                                            text:'Action',\r\n                                            formatter: this.action\r\n                                        }\r\n                                    ]}\r\n                                \r\n                                />\r\n                            </Scroll>\r\n                            \r\n            </Baselistmmodal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default listfiledetail;"]},"metadata":{},"sourceType":"module"}