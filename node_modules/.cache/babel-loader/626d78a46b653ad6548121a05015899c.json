{"ast":null,"code":"import _toConsumableArray from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\chats\\\\list-chats.jsx\";\nimport React, { Component } from 'react';\nimport Page from 'layouts/page-admin';\nimport { Row, Col, Form, Input, Navbar, Button } from 'reactstrap';\nimport app from 'app';\nimport Scroll from 'simplebar-react';\nimport socket from 'socket.io-client';\nimport date from 'moment';\nimport 'react-chat-elements/dist/main.css';\nimport { ChatItem, MessageBox, MessageList } from 'react-chat-elements';\nimport \"react-notification-alert/dist/animate.css\";\nimport NotificationAlert from \"react-notification-alert\";\nvar io = socket('http://192.168.40.100:4000');\nvar idUser = app.dataUser[0].IDLOGIN;\n\nvar ListChats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListChats, _Component);\n\n  function ListChats() {\n    var _this;\n\n    _classCallCheck(this, ListChats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListChats).call(this));\n    _this.state = {\n      users: [],\n      filter: '',\n      chats: [],\n      active: false,\n      name: '',\n      idname: '',\n      msg: ''\n    };\n    _this.getFilter = _this.getFilter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setName = _this.setName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setMsg = _this.setMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.SendMsg = _this.SendMsg.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListChats, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      app.apiGet1('chats/users', idUser).then(function (res) {\n        _this2.setState({\n          users: res\n        });\n      });\n    }\n  }, {\n    key: \"getFilter\",\n    value: function getFilter(e) {\n      this.setState({\n        filter: e.target.value\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName(idlogin, name) {\n      var _this3 = this;\n\n      this.setState({\n        name: name,\n        idname: idlogin,\n        active: true\n      });\n      app.apiGet2('chats/chats', idUser, idlogin).then(function (res) {\n        _this3.setState({\n          chats: res\n        });\n      });\n    }\n  }, {\n    key: \"setMsg\",\n    value: function setMsg(e) {\n      this.setState({\n        msg: e.target.value\n      });\n    }\n  }, {\n    key: \"SendMsg\",\n    value: function SendMsg(e) {\n      e.preventDefault();\n      var _this$state = this.state,\n          msg = _this$state.msg,\n          name = _this$state.name,\n          idname = _this$state.idname;\n      var data = {\n        FROM_ID: idUser,\n        TO_ID: idname,\n        FROM: app.dataUser[0].USERNAME,\n        TO: name,\n        MSG: msg,\n        DATE: date().format('LLL'),\n        ID_USER: idUser\n      };\n      io.emit('chat', data);\n      this.setState({\n        msg: ''\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      io.on('chat', function (msg) {\n        if (msg.TO_ID === _this4.state.idname && msg.FROM_ID === idUser || msg.FROM_ID === _this4.state.idname && msg.TO_ID === idUser) {\n          var data = [].concat(_toConsumableArray(_this4.state.chats), [msg]);\n\n          _this4.setState({\n            chats: data\n          });\n\n          var scroll = document.getElementById('sc');\n          scroll.scrollTop = scroll.scrollHeight;\n        }\n\n        if (msg.TO_ID === idUser && msg.FROM_ID !== _this4.state.idname) {\n          var options = {\n            place: 'br',\n            message: React.createElement(\"div\", {\n              className: \"alert-text\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"alert-title\",\n              \"data-notify\": \"title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104\n              },\n              __self: this\n            }, \"Pesan Masuk Dari \".concat(msg.FROM)), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              \"data-notify\": \"message\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }, msg.MSG)),\n            type: \"default\",\n            autoDismiss: 7\n          };\n\n          _this4.refs.notificationAlert.notificationAlert(options);\n        }\n      });\n    }\n  }, {\n    key: \"bottom\",\n    value: function bottom() {\n      var scroll = document.getElementById('sc');\n      scroll.scrollTop = scroll.scrollHeight;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          filter = _this$state2.filter,\n          chats = _this$state2.chats,\n          active = _this$state2.active,\n          name = _this$state2.name,\n          msg = _this$state2.msg;\n      var dataUsers = users.filter(function (x) {\n        return x.USERNAME.toLowerCase().includes(filter.toLocaleLowerCase());\n      });\n      return React.createElement(Page, {\n        head: 'Chats MTG',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rna-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(NotificationAlert, {\n        ref: \"notificationAlert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        className: \"mb-2\",\n        onChange: this.getFilter,\n        placeholder: 'Cari User',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        style: {\n          height: '450px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, dataUsers.map(function (x, i) {\n        return React.createElement(ChatItem, {\n          avatar: require('assets/img/theme/man.png'),\n          alt: 'Reactjs',\n          title: x.USERNAME,\n          subtitle: 'haloo brian wahyu anggriawan',\n          statusColor: '#49E20E',\n          date: new Date(),\n          key: i,\n          onClick: function onClick() {\n            return _this5.setName(x.IDLOGIN, x.USERNAME);\n          },\n          unread: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        });\n      }))), React.createElement(Col, {\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, active ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"navbar-horizontal bg-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, name)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: '325px',\n          overflowY: 'scroll',\n          overflowX: 'hidden'\n        },\n        id: \"sc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, chats.map(function (x, i) {\n        return x.ID_USER === idUser ? React.createElement(Row, {\n          className: \"d-flex flex-row-reverse mb-1\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"d-flex flex-row-reverse\",\n          style: {\n            fontSize: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, date(x.DATE).format('LLL')), React.createElement(MessageBox, {\n          position: 'right',\n          text: x.MSG,\n          date: x.DATE,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }))) : React.createElement(Row, {\n          className: \"d-flex flex-row mb-1\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"d-flex flex-row\",\n          style: {\n            fontSize: '11px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, date(x.DATE).format('LLL')), React.createElement(MessageBox, {\n          position: 'left',\n          text: x.MSG,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        })));\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.SendMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        onChange: this.setMsg,\n        value: msg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        onClick: this.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Bottom\")))) : React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \" Chat MTG\"))));\n    }\n  }]);\n\n  return ListChats;\n}(Component);\n\nexport { ListChats as default };","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\chats\\list-chats.jsx"],"names":["React","Component","Page","Row","Col","Form","Input","Navbar","Button","app","Scroll","socket","date","ChatItem","MessageBox","MessageList","NotificationAlert","io","idUser","dataUser","IDLOGIN","ListChats","state","users","filter","chats","active","name","idname","msg","getFilter","bind","setName","setMsg","SendMsg","apiGet1","then","res","setState","e","target","value","idlogin","apiGet2","preventDefault","data","FROM_ID","TO_ID","FROM","USERNAME","TO","MSG","DATE","format","ID_USER","emit","on","scroll","document","getElementById","scrollTop","scrollHeight","options","place","message","type","autoDismiss","refs","notificationAlert","dataUsers","x","toLowerCase","includes","toLocaleLowerCase","height","map","i","require","Date","overflowY","overflowX","fontSize","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Page from 'layouts/page-admin';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    Navbar,\r\n    Button\r\n \r\n} from 'reactstrap';\r\nimport app from 'app';\r\nimport Scroll from 'simplebar-react';\r\nimport socket from 'socket.io-client';\r\nimport date from 'moment';\r\nimport 'react-chat-elements/dist/main.css';\r\nimport { ChatItem , MessageBox , MessageList  } from 'react-chat-elements';\r\nimport \"react-notification-alert/dist/animate.css\";\r\nimport NotificationAlert from \"react-notification-alert\";\r\nconst io  = socket('http://192.168.40.100:4000');\r\nconst idUser = app.dataUser[0].IDLOGIN;\r\n\r\nexport default class ListChats extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            users: [],\r\n            filter: '',\r\n            chats : [],\r\n            active:false,\r\n            name:'',\r\n            idname:'',\r\n            msg: ''\r\n        }\r\n        this.getFilter = this.getFilter.bind(this);\r\n        this.setName = this.setName.bind(this);\r\n        this.setMsg = this.setMsg.bind(this);\r\n        this.SendMsg = this.SendMsg.bind(this);\r\n    }\r\n\r\n    \r\n\r\n\r\n    componentWillMount(){\r\n        app.apiGet1('chats/users' , idUser)\r\n            .then(res =>{\r\n                this.setState({ users: res})\r\n            })\r\n    }\r\n\r\n    getFilter( e ){\r\n        this.setState({ filter: e.target.value })\r\n    }\r\n\r\n    setName(idlogin , name){\r\n        this.setState({ \r\n            name : name,\r\n            idname: idlogin,\r\n            active: true\r\n        })\r\n\r\n        app.apiGet2('chats/chats' , idUser , idlogin )\r\n            .then(res =>{\r\n                this.setState({ chats: res})\r\n            })\r\n    }\r\n\r\n    setMsg(e){\r\n        this.setState({ msg: e.target.value});\r\n    }\r\n\r\n    SendMsg(e){\r\n\r\n        e.preventDefault();\r\n        let { msg  ,name , idname} = this.state;\r\n        let data = { \r\n            FROM_ID: idUser,\r\n            TO_ID: idname,\r\n            FROM: app.dataUser[0].USERNAME,\r\n            TO: name,\r\n            MSG: msg,\r\n            DATE: date().format('LLL'),\r\n            ID_USER: idUser\r\n         }\r\n        io.emit('chat' , data );\r\n        this.setState({ msg: ''})\r\n    }\r\n\r\n    componentDidMount(){\r\n        io.on('chat' , (msg)=>{\r\n            if ((msg.TO_ID === this.state.idname && msg.FROM_ID === idUser) || (msg.FROM_ID === this.state.idname && msg.TO_ID === idUser) ) {\r\n                let data = [ ...this.state.chats , msg];\r\n                this.setState({ chats : data })\r\n\r\n                let scroll = document.getElementById('sc');\r\n                scroll.scrollTop = scroll.scrollHeight;   \r\n            }\r\n\r\n            if ((msg.TO_ID === idUser && msg.FROM_ID !== this.state.idname) ) {\r\n                let options = {\r\n                    place: 'br',\r\n                    message: (\r\n                      <div className=\"alert-text\">\r\n                        <span className=\"alert-title\" data-notify=\"title\">\r\n                          {`Pesan Masuk Dari ${msg.FROM}`}\r\n                        </span><br/>\r\n                        <span data-notify=\"message\">\r\n                          {msg.MSG}\r\n                        </span>\r\n                      </div>\r\n                    ),\r\n                    type: \"default\",\r\n                    autoDismiss: 7\r\n                  };\r\n                  this.refs.notificationAlert.notificationAlert(options);  \r\n            }\r\n        })\r\n    }\r\n\r\n    bottom(){\r\n        let scroll = document.getElementById('sc');\r\n        scroll.scrollTop = scroll.scrollHeight; \r\n    }\r\n\r\n\r\n    render() {\r\n        let { users , filter , chats , active , name , msg } = this.state;\r\n\r\n        let dataUsers = users.filter( x =>{\r\n            return x.USERNAME.toLowerCase().includes(filter.toLocaleLowerCase())\r\n        });\r\n\r\n        return (\r\n            <Page head={'Chats MTG'}>\r\n                <div className=\"rna-wrapper\">\r\n                 <NotificationAlert ref=\"notificationAlert\" />\r\n                </div>\r\n                <Row>\r\n                    <Col md='3'>\r\n                        <Input type='text' className='mb-2' onChange={this.getFilter} placeholder={'Cari User'} />\r\n                        <Scroll style={{ height: '450px' }}>\r\n                            {   \r\n                                dataUsers.map((x , i) => (\r\n                                        <ChatItem\r\n                                            avatar={require('assets/img/theme/man.png')}\r\n                                            alt={'Reactjs'}\r\n                                            title={x.USERNAME}\r\n                                            subtitle={'haloo brian wahyu anggriawan'}\r\n                                            statusColor={'#49E20E'}\r\n                                            date={new Date()}\r\n                                            key={i}\r\n                                            onClick={()=> this.setName(x.IDLOGIN , x.USERNAME)}\r\n                                            unread={1} />  \r\n                                ))\r\n                            }\r\n                        </Scroll>\r\n                    </Col>\r\n                    <Col md='9'>\r\n                        {\r\n                            active ? \r\n                                <div>\r\n                                        <Navbar className=\"navbar-horizontal bg-primary \">\r\n                                        <h3 className='text-secondary'>{name}</h3>\r\n                                        </Navbar>\r\n                                        <hr />\r\n                                            <div  style={{ height: '325px' , overflowY:'scroll' , overflowX:'hidden'  }} id='sc'  >\r\n                                            {\r\n                                                chats.map((x , i) =>(\r\n                                                    x.ID_USER === idUser ?\r\n                                                    <Row className=\"d-flex flex-row-reverse mb-1\" key={i}>\r\n                                                        <Col md='6'> \r\n                                                            <label className='d-flex flex-row-reverse' style={{ fontSize:'11px'}}>{date(x.DATE).format('LLL')}</label>\r\n                                                            <MessageBox\r\n                                                                position={'right'}\r\n                                                                text={x.MSG}\r\n                                                                date={x.DATE}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    :\r\n                                                    <Row className=\"d-flex flex-row mb-1\" key={i}>\r\n                                                        <Col md='6'> \r\n                                                            <label className='d-flex flex-row' style={{ fontSize:'11px'}}>{date(x.DATE).format('LLL')}</label>\r\n                                                            <MessageBox\r\n                                                                position={'left'}\r\n                                                                text={x.MSG}                                                                \r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                ))\r\n                                            }\r\n                                            </div>\r\n                                        <Row>\r\n                                            <Col md='10'>\r\n                                                <Form onSubmit={this.SendMsg}>\r\n                                                    <Input type='text' onChange={this.setMsg} value={msg}/>\r\n                                                </Form>\r\n                                            </Col>\r\n                                            <Col md='2'>\r\n                                                <Button color='info' onClick={this.bottom}>Bottom</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div> : <h1 className='text-center'> Chat MTG</h1>\r\n                        }\r\n                        \r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}