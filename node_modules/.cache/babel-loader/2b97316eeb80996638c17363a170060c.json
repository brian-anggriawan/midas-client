{"ast":null,"code":"import _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\list-file.jsx\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Pageadmin from 'layouts/page-admin';\nimport Formfile from './form-file';\nimport Listfiledetail from './list_file_detail';\nimport { Button, Row, Col, Card, CardText, Input, Badge } from 'reactstrap';\nimport app from 'app';\n\nvar listFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listFile, _React$Component);\n\n  function listFile() {\n    var _this;\n\n    _classCallCheck(this, listFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listFile).call(this));\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.mode2 = function () {\n      _this.setState({\n        modal2: !_this.state.modal2\n      });\n    };\n\n    _this.Showlist = function (repo) {\n      app.apiGet2('uploadfile', repo, _this.state.idperiod).then(function (res) {\n        _this.setState({\n          groupfile: res\n        });\n      });\n    };\n\n    _this.action = function (cell, row, enumObject, rowIndex) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: function onClick() {\n          return _this.onClickForm(rowIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"info\",\n        onClick: function onClick() {\n          return _this.onClickProductSelected(cell, row, rowIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"History\"));\n    };\n\n    _this.status = function (cell, row, enumObject, rowindex) {\n      var count = _this.state.groupfile[rowindex].COUNT;\n      return count;\n    };\n\n    _this.selectPeriod = function (e) {\n      _this.setState({\n        idperiod: e.target.value\n      });\n\n      app.apiGet2('uploadfile/repo', app.dataUser[0].IDLOGIN, e.target.value).then(function (res) {\n        _this.setState({\n          repo: res\n        });\n\n        _this.setState({\n          groupfile: []\n        });\n      });\n    };\n\n    _this.state = {\n      repo: [],\n      groupfile: [],\n      filedetail: [],\n      modal: false,\n      modal2: false,\n      accperiod: [],\n      dataform: [],\n      idperiod: app.dataUser[0].ID_PERIOD\n    };\n    return _this;\n  }\n\n  _createClass(listFile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      app.apiGet('accperiod').then(function (res) {\n        _this2.setState({\n          accperiod: res\n        });\n      });\n      app.apiGet2('uploadfile/repo', app.dataUser[0].IDLOGIN, app.dataUser[0].ID_PERIOD).then(function (res) {\n        _this2.setState({\n          repo: res\n        });\n      });\n    }\n  }, {\n    key: \"onClickProductSelected\",\n    value: function onClickProductSelected(cell, row, rowIndex) {\n      var _this3 = this;\n\n      var idtemplate = this.state.groupfile[rowIndex].ID_TEMPLATE,\n          idperiod = this.state.idperiod;\n      app.apiGet2('uploadfiledetail', idtemplate, idperiod).then(function (res) {\n        _this3.setState({\n          filedetail: res\n        });\n      });\n      this.setState({\n        modal: true\n      });\n      this.mode();\n    }\n  }, {\n    key: \"onClickForm\",\n    value: function onClickForm(rowindex) {\n      var idselect = document.getElementById('period');\n      var txselect = idselect.options[idselect.selectedIndex].text;\n      var data = [{\n        idperiod: this.state.idperiod,\n        idtemplate: this.state.groupfile[rowindex].ID_TEMPLATE,\n        directory: this.state.groupfile[rowindex].DIRECTORY,\n        period: txselect,\n        nodoc: this.state.groupfile[rowindex].NODOC,\n        repo: this.state.groupfile[rowindex].REPO\n      }];\n      this.setState({\n        dataform: data\n      });\n      this.mode2();\n    }\n  }, {\n    key: \"indexNumber\",\n    value: function indexNumber(row) {\n      return row.TEMPLATE;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Pageadmin, {\n        head: 'List File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Listfiledetail, {\n        modal: this.state.modal,\n        mode: this.mode,\n        data: this.state.filedetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Formfile, {\n        modal: this.state.modal2,\n        mode: this.mode2,\n        data: this.state.dataform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"select\",\n        id: \"period\",\n        style: {\n          marginBottom: '10px',\n          width: '23%'\n        },\n        onChange: this.selectPeriod,\n        value: this.state.idperiod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.accperiod.map(function (data) {\n        return React.createElement(\"option\", {\n          key: data.VCIDACCPERIOD,\n          value: data.VCIDACCPERIOD,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, data.VCDESCRIPTION);\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.state.repo.map(function (repo) {\n        return React.createElement(Card, {\n          body: true,\n          key: repo.ID_REPO,\n          style: {\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(CardText, {\n          style: {\n            fontSize: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, repo.REPOSITORY), React.createElement(CardText, {\n          className: \"text-center\",\n          style: {\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, repo.COUNT), React.createElement(Button, {\n          color: \"primary\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this4.Showlist(repo.ID_REPO);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Show File\"));\n      })), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.groupfile,\n        bordered: false,\n        striped: true,\n        pagination: true,\n        options: app.optionTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"ID_TEMPLATE\",\n        width: \"16%\",\n        isKey: true,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Periode\"), React.createElement(TableHeaderColumn, {\n        dataField: \"COUNT\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Jumlah File\"), React.createElement(TableHeaderColumn, {\n        dataFormat: this.status.bind(this),\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableHeaderColumn, {\n        dataField: \"TEMPLATE\",\n        dataFormat: this.indexNumber,\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Action\")))));\n    }\n  }]);\n\n  return listFile;\n}(React.Component);\n\nexport default listFile;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\list-file.jsx"],"names":["React","BootstrapTable","TableHeaderColumn","Pageadmin","Formfile","Listfiledetail","Button","Row","Col","Card","CardText","Input","Badge","app","listFile","mode","setState","modal","state","mode2","modal2","Showlist","repo","apiGet2","idperiod","then","res","groupfile","action","cell","row","enumObject","rowIndex","onClickForm","onClickProductSelected","status","rowindex","count","COUNT","selectPeriod","e","target","value","dataUser","IDLOGIN","filedetail","accperiod","dataform","ID_PERIOD","apiGet","idtemplate","ID_TEMPLATE","idselect","document","getElementById","txselect","options","selectedIndex","text","data","directory","DIRECTORY","period","nodoc","NODOC","REPO","TEMPLATE","marginBottom","width","map","VCIDACCPERIOD","VCDESCRIPTION","ID_REPO","fontSize","REPOSITORY","fontWeight","optionTable","bind","indexNumber","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport Pageadmin from 'layouts/page-admin';\r\nimport Formfile from './form-file';\r\nimport Listfiledetail from './list_file_detail';\r\nimport { Button , Row , Col , Card , CardText , Input , Badge } from 'reactstrap';\r\nimport app from 'app';\r\n\r\nclass listFile extends React.Component{\r\n    constructor(){\r\n        super()\r\n    \r\n        this.state = {\r\n          repo: [],\r\n          groupfile: [],\r\n          filedetail:[],\r\n          modal: false,\r\n          modal2: false,\r\n          accperiod: [],\r\n          dataform: [],\r\n          idperiod: app.dataUser[0].ID_PERIOD\r\n        }\r\n      }\r\n\r\n\r\n      mode = () =>{\r\n          this.setState({\r\n              modal: !this.state.modal\r\n          })\r\n      }\r\n\r\n      mode2 = () =>{\r\n        this.setState({\r\n          modal2: !this.state.modal2\r\n      })\r\n      }\r\n    \r\n    \r\n      componentDidMount(){\r\n\r\n        app.apiGet('accperiod')\r\n           .then(res =>{\r\n             this.setState({\r\n               accperiod: res\r\n             })\r\n           })\r\n\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN ,app.dataUser[0].ID_PERIOD)\r\n           .then(res =>{\r\n                this.setState({\r\n                  repo: res\r\n            })\r\n        }) \r\n         \r\n      }\r\n\r\n      Showlist = (repo) =>{\r\n\r\n        app.apiGet2('uploadfile',repo , this.state.idperiod)\r\n           .then(res =>{\r\n            this.setState({\r\n              groupfile: res\r\n            })\r\n           })\r\n      }\r\n\r\n      onClickProductSelected(cell, row, rowIndex){\r\n\r\n        let idtemplate = this.state.groupfile[rowIndex].ID_TEMPLATE,\r\n            idperiod = this.state.idperiod;\r\n\r\n            app.apiGet2('uploadfiledetail' , idtemplate , idperiod)\r\n               .then(res =>{\r\n                this.setState({\r\n                  filedetail: res\r\n                })\r\n               })\r\n\r\n            this.setState({\r\n              modal: true\r\n            })  \r\n            \r\n            this.mode();\r\n       }\r\n\r\n       onClickForm(rowindex){\r\n         let idselect  = document.getElementById('period');\r\n         let txselect= idselect.options[idselect.selectedIndex].text;\r\n\r\n         let data = [{\r\n           idperiod: this.state.idperiod,\r\n           idtemplate: this.state.groupfile[rowindex].ID_TEMPLATE,\r\n           directory: this.state.groupfile[rowindex].DIRECTORY,\r\n           period : txselect,\r\n           nodoc: this.state.groupfile[rowindex].NODOC,\r\n           repo : this.state.groupfile[rowindex].REPO\r\n         }]\r\n        this.setState({\r\n          dataform:data\r\n        })\r\n        this.mode2();\r\n\r\n       }\r\n\r\n      action = (cell, row, enumObject, rowIndex)=>{\r\n        return(\r\n          <>\r\n          <Button type=\"button\" size=\"sm\" color=\"success\" onClick={()=> this.onClickForm(rowIndex)}>Upload</Button>\r\n          {/*<Button type=\"button\" size=\"sm\" color=\"danger\">Download</Button>*/}\r\n          <Button type=\"button\" size=\"sm\" color=\"info\" onClick={() => this.onClickProductSelected(cell, row, rowIndex)}>History</Button>\r\n          </>\r\n          \r\n        )\r\n      }\r\n      status = (cell , row , enumObject , rowindex)=>{\r\n        let count = this.state.groupfile[rowindex].COUNT;\r\n\r\n\r\n        return count\r\n        }\r\n\r\n      selectPeriod =(e)=>{\r\n\r\n        this.setState({\r\n          idperiod: e.target.value\r\n        })\r\n\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN ,e.target.value)\r\n           .then(res =>{\r\n                this.setState({\r\n                  repo: res\r\n            })\r\n              this.setState({\r\n                groupfile: []\r\n              })\r\n        }) \r\n      }\r\n     \r\n      indexNumber( row) { \r\n        return row.TEMPLATE\r\n      }\r\n\r\n      render() {\r\n\r\n        return (\r\n          <Pageadmin head={'List File'}>\r\n          <Listfiledetail modal= {this.state.modal} mode ={this.mode} data ={this.state.filedetail} />\r\n          <Formfile modal={this.state.modal2} mode={this.mode2} data={this.state.dataform} />\r\n          <Input type=\"select\" id=\"period\" style={{marginBottom: '10px' , width:'23%'}}  onChange={this.selectPeriod} value={this.state.idperiod}>\r\n              {\r\n                this.state.accperiod.map(data =>\r\n                 <option key={data.VCIDACCPERIOD} value ={data.VCIDACCPERIOD}>{data.VCDESCRIPTION}</option> \r\n                )\r\n              }\r\n          </Input>\r\n          <Row>\r\n              <Col sm=\"3\"> \r\n              {\r\n                this.state.repo.map(repo =>\r\n                 <Card body key={repo.ID_REPO} style={{ marginBottom: '10px'}}>\r\n                  <CardText style={{fontSize:'15px'}}>{repo.REPOSITORY}</CardText>\r\n                  <CardText className=\"text-center\" style={{fontWeight: 'bold'}}>{repo.COUNT}</CardText>\r\n                  <Button color=\"primary\" size='sm' onClick={()=> this.Showlist(repo.ID_REPO)}>Show File</Button>\r\n                 </Card> \r\n                )\r\n              }\r\n              </Col>\r\n              <Col sm=\"9\">\r\n                      <BootstrapTable\r\n                        data={this.state.groupfile}\r\n                        bordered={false}\r\n                        striped\r\n                        pagination={true}\r\n                        options={app.optionTable}>\r\n                          <TableHeaderColumn\r\n                            dataField='ID_TEMPLATE'\r\n                            width='16%'\r\n                            isKey = {true}\r\n                            dataSort>\r\n                            Periode\r\n                          </TableHeaderColumn>\r\n                          <TableHeaderColumn\r\n                            dataField='COUNT'\r\n                            width='16%'\r\n                            dataSort>\r\n                            Jumlah File\r\n                          </TableHeaderColumn>\r\n                          <TableHeaderColumn\r\n                            dataFormat={this.status.bind(this)}\r\n                            width='16%'\r\n                            dataSort>\r\n                            Status\r\n                          </TableHeaderColumn>      \r\n                          <TableHeaderColumn\r\n                            dataField='TEMPLATE'\r\n                            dataFormat={this.indexNumber}\r\n                            width='16%'\r\n                            dataSort>\r\n                            Action\r\n                          </TableHeaderColumn>\r\n                      </BootstrapTable>\r\n              </Col>\r\n            </Row>\r\n          </Pageadmin>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default listFile;"]},"metadata":{},"sourceType":"module"}