{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\job\\\\web\\\\Midas\\\\Midas-Client\\\\src\\\\views\\\\list-file\\\\list-file.jsx\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Pageadmin from 'layouts/page-admin';\nimport Formfile from './form-file';\nimport Listfiledetail from './list_file_detail';\nimport { Button, Row, Col, Card, CardText, Input, Badge } from 'reactstrap';\nimport Scroll from 'simplebar-react';\nimport download from 'downloadjs';\nimport Loading from 'layouts/loading-modal';\nimport app from 'app';\n\nvar listFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(listFile, _React$Component);\n\n  function listFile() {\n    var _this;\n\n    _classCallCheck(this, listFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(listFile).call(this));\n\n    _this.mode = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.mode2 = function () {\n      _this.setState({\n        modal2: !_this.state.modal2\n      });\n    };\n\n    _this.Showlist = function (repo) {\n      app.apiGet2('uploadfile', repo, _this.state.idperiod).then(function (res) {\n        _this.setState({\n          groupfile: res\n        });\n      });\n    };\n\n    _this.action = function (index) {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: function onClick() {\n          return _this.onClickForm(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"info\",\n        onClick: function onClick() {\n          return _this.onClickProductSelected(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"History\"));\n    };\n\n    _this.status = function (count) {\n      if (count > 0) {\n        return React.createElement(Badge, {\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Sudah Upload\");\n      } else {\n        return React.createElement(Badge, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Belum Upload\");\n      }\n    };\n\n    _this.selectPeriod = function (e) {\n      _this.setState({\n        idperiod: e.target.value\n      });\n\n      app.apiGet2('uploadfile/repo', app.dataUser[0].IDLOGIN, e.target.value).then(function (res) {\n        _this.setState({\n          repo: res\n        });\n\n        _this.setState({\n          groupfile: []\n        });\n      });\n    };\n\n    _this.Downloadfile =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var data, idfile, name, res, blob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _this.props.repo.filter(function (res) {\n                  return res.ID_REPO === id;\n                })[0];\n                idfile = data.ID_FORMAT;\n                name = data.ORIGINAL_NAME;\n\n                _this.mode();\n\n                _context.next = 6;\n                return fetch(app.proxy + 'formatfile/download/' + idfile, {\n                  method: 'get',\n                  headers: app.head2\n                });\n\n              case 6:\n                res = _context.sent;\n\n                if (!res) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 10;\n                return res.blob();\n\n              case 10:\n                blob = _context.sent;\n                download(blob, name);\n\n                _this.mode();\n\n                app.apiGet1('formatfile/delete', idfile);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      repo: [],\n      groupfile: [],\n      filedetail: [],\n      modal: false,\n      modal2: false,\n      accperiod: [],\n      dataform: [],\n      idperiod: app.dataUser[0].ID_PERIOD\n    };\n    return _this;\n  }\n\n  _createClass(listFile, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      app.apiGet('accperiod').then(function (res) {\n        _this2.setState({\n          accperiod: res\n        });\n      });\n      app.apiGet2('uploadfile/repo', app.dataUser[0].IDLOGIN, app.dataUser[0].ID_PERIOD).then(function (res) {\n        _this2.setState({\n          repo: res\n        });\n      });\n    }\n  }, {\n    key: \"onClickProductSelected\",\n    value: function onClickProductSelected(index) {\n      var _this3 = this;\n\n      app.apiGet2('uploadfiledetail', index, this.state.idperiod).then(function (res) {\n        _this3.setState({\n          filedetail: res\n        });\n      });\n      this.setState({\n        modal: true\n      });\n      this.mode();\n    }\n  }, {\n    key: \"onClickForm\",\n    value: function onClickForm(rowindex) {\n      var groupfile = this.state.groupfile.filter(function (res) {\n        return res.ID_TEMPLATE === rowindex;\n      })[0];\n      var idselect = document.getElementById('period');\n      var txselect = idselect.options[idselect.selectedIndex].text;\n      var data = [{\n        idperiod: this.state.idperiod,\n        idtemplate: groupfile.ID_TEMPLATE,\n        directory: groupfile.DIRECTORY,\n        period: txselect,\n        nodoc: groupfile.NODOC,\n        repo: groupfile.REPO\n      }];\n      this.setState({\n        dataform: data\n      });\n      this.mode2();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Pageadmin, {\n        head: 'List File',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        modal: this.state.modal,\n        text: 'Proses Download',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Listfiledetail, {\n        modal: this.state.modal,\n        mode: this.mode,\n        data: this.state.filedetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Formfile, {\n        modal: this.state.modal2,\n        mode: this.mode2,\n        data: this.state.dataform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"select\",\n        id: \"period\",\n        style: {\n          marginBottom: '10px',\n          width: '23%'\n        },\n        onChange: this.selectPeriod,\n        value: this.state.idperiod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.accperiod.map(function (data) {\n        return React.createElement(\"option\", {\n          key: data.VCIDACCPERIOD,\n          value: data.VCIDACCPERIOD,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, data.VCDESCRIPTION);\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Scroll, {\n        style: {\n          height: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.repo.map(function (repo) {\n        return React.createElement(Card, {\n          id: \"cardfile\",\n          body: true,\n          key: repo.ID_REPO,\n          style: {\n            marginBottom: '10px',\n            border: '5px solid lightblue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(CardText, {\n          style: {\n            fontSize: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, repo.REPOSITORY), React.createElement(CardText, {\n          style: {\n            fontSize: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, repo.JENIS_REPO), React.createElement(CardText, {\n          className: \"text-center\",\n          style: {\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, repo.COUNT), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          onClick: function onClick() {\n            return _this4.Showlist(repo.ID_REPO);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Show File\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }), React.createElement(Button, {\n          color: \"default\",\n          size: \"sm\",\n          style: {\n            width: '100%'\n          },\n          onClick: function onClick() {\n            return _this4.Downloadfile.Downloadfile(repo.ID_REPO);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Download Format\")));\n      }))), React.createElement(Col, {\n        sm: \"9\",\n        className: \"table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.groupfile,\n        bordered: false,\n        striped: true,\n        pagination: true,\n        options: app.optionTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        dataField: \"TEMPLATE\",\n        width: \"16%\",\n        isKey: true,\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Periode\"), React.createElement(TableHeaderColumn, {\n        dataField: \"LAST_UPLOAD\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Last Upload\"), React.createElement(TableHeaderColumn, {\n        dataField: \"COUNT\",\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Jumlah File\"), React.createElement(TableHeaderColumn, {\n        dataField: \"COUNT\",\n        dataFormat: this.status,\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Status\"), React.createElement(TableHeaderColumn, {\n        dataField: \"ID_TEMPLATE\",\n        dataFormat: this.action,\n        width: \"16%\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Action\"))))));\n    }\n  }]);\n\n  return listFile;\n}(React.Component);\n\nexport default listFile;","map":{"version":3,"sources":["D:\\job\\web\\Midas\\Midas-Client\\src\\views\\list-file\\list-file.jsx"],"names":["React","BootstrapTable","TableHeaderColumn","Pageadmin","Formfile","Listfiledetail","Button","Row","Col","Card","CardText","Input","Badge","Scroll","download","Loading","app","listFile","mode","setState","modal","state","mode2","modal2","Showlist","repo","apiGet2","idperiod","then","res","groupfile","action","index","onClickForm","onClickProductSelected","status","count","selectPeriod","e","target","value","dataUser","IDLOGIN","Downloadfile","id","data","props","filter","ID_REPO","idfile","ID_FORMAT","name","ORIGINAL_NAME","fetch","proxy","method","headers","head2","blob","apiGet1","filedetail","accperiod","dataform","ID_PERIOD","apiGet","rowindex","ID_TEMPLATE","idselect","document","getElementById","txselect","options","selectedIndex","text","idtemplate","directory","DIRECTORY","period","nodoc","NODOC","REPO","marginBottom","width","map","VCIDACCPERIOD","VCDESCRIPTION","height","border","fontSize","REPOSITORY","JENIS_REPO","fontWeight","COUNT","optionTable","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport Pageadmin from 'layouts/page-admin';\r\nimport Formfile from './form-file';\r\nimport Listfiledetail from './list_file_detail';\r\nimport { Button , Row , Col , Card , CardText , Input , Badge } from 'reactstrap';\r\nimport Scroll from 'simplebar-react';\r\nimport download from 'downloadjs';\r\nimport Loading from 'layouts/loading-modal';\r\nimport app from 'app';\r\n\r\n\r\nclass listFile extends React.Component{\r\n    constructor(){\r\n        super()\r\n    \r\n        this.state = {\r\n          repo: [],\r\n          groupfile: [],\r\n          filedetail:[],\r\n          modal: false,\r\n          modal2: false,\r\n          accperiod: [],\r\n          dataform: [],\r\n          idperiod: app.dataUser[0].ID_PERIOD\r\n        }\r\n      }\r\n\r\n\r\n      mode = () =>{\r\n          this.setState({\r\n              modal: !this.state.modal\r\n          })\r\n      }\r\n\r\n      mode2 = () =>{\r\n        this.setState({\r\n          modal2: !this.state.modal2\r\n      })\r\n      }\r\n    \r\n    \r\n      componentWillMount(){\r\n\r\n        app.apiGet('accperiod')\r\n           .then(res =>{\r\n             this.setState({\r\n               accperiod: res\r\n             })\r\n           })\r\n\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN ,app.dataUser[0].ID_PERIOD)\r\n           .then(res =>{\r\n                this.setState({\r\n                  repo: res\r\n            })\r\n        }) \r\n\r\n      }\r\n\r\n      Showlist = (repo) =>{\r\n\r\n        app.apiGet2('uploadfile',repo , this.state.idperiod)\r\n           .then(res =>{\r\n            this.setState({\r\n              groupfile: res\r\n            })\r\n           })\r\n      }\r\n\r\n      onClickProductSelected(index){\r\n\r\n            app.apiGet2('uploadfiledetail' , index , this.state.idperiod)\r\n               .then(res =>{\r\n                this.setState({\r\n                  filedetail: res\r\n                })\r\n               })\r\n\r\n            this.setState({\r\n              modal: true\r\n            })  \r\n            \r\n            this.mode();\r\n       }\r\n\r\n       onClickForm(rowindex){\r\n         let groupfile = this.state.groupfile.filter(res => res.ID_TEMPLATE === rowindex)[0];\r\n         let idselect  = document.getElementById('period');\r\n         let txselect= idselect.options[idselect.selectedIndex].text;\r\n\r\n         let data = [{\r\n           idperiod: this.state.idperiod,\r\n           idtemplate: groupfile.ID_TEMPLATE,\r\n           directory: groupfile.DIRECTORY,\r\n           period : txselect,\r\n           nodoc: groupfile.NODOC,\r\n           repo : groupfile.REPO\r\n         }]\r\n        this.setState({\r\n          dataform:data\r\n        })\r\n        this.mode2();\r\n       }\r\n\r\n      action = (index)=>{\r\n        return(\r\n          <>\r\n          <Button type=\"button\" size=\"sm\" color=\"success\" onClick={()=> this.onClickForm(index)}>Upload</Button>\r\n          <Button type=\"button\" size=\"sm\" color=\"info\" onClick={() => this.onClickProductSelected(index)}>History</Button>\r\n          </>\r\n          \r\n        )\r\n      }\r\n      status = (count)=>{\r\n    \r\n        if (count > 0) {\r\n          return <Badge color=\"success\">Sudah Upload</Badge>\r\n        }else{\r\n          return <Badge color=\"danger\">Belum Upload</Badge>\r\n        }\r\n      }\r\n\r\n      selectPeriod =(e)=>{\r\n\r\n        this.setState({\r\n          idperiod: e.target.value\r\n        })\r\n\r\n        app.apiGet2('uploadfile/repo',app.dataUser[0].IDLOGIN ,e.target.value)\r\n           .then(res =>{\r\n                this.setState({\r\n                  repo: res\r\n            })\r\n              this.setState({\r\n                groupfile: []\r\n              })\r\n        }) \r\n      }\r\n\r\n      Downloadfile = async (id) =>{\r\n        let data = this.props.repo.filter(res => res.ID_REPO === id)[0];\r\n        let idfile = data.ID_FORMAT;\r\n        let name = data.ORIGINAL_NAME;\r\n       \r\n        this.mode();\r\n \r\n        let res = await fetch(app.proxy+'formatfile/download/'+idfile ,{\r\n            method: 'get',\r\n            headers: app.head2\r\n        });\r\n \r\n        if (res) {\r\n         let blob = await res.blob();\r\n     \r\n         download(blob , name);\r\n         this.mode();\r\n         app.apiGet1('formatfile/delete',idfile)  \r\n \r\n        }\r\n      }\r\n    \r\n      render() {\r\n\r\n        return (\r\n          <Pageadmin head={'List File'}>\r\n          <Loading modal={this.state.modal} text={'Proses Download'}/>\r\n          <Listfiledetail modal= {this.state.modal} mode ={this.mode} data ={this.state.filedetail} />\r\n          <Formfile modal={this.state.modal2} mode={this.mode2} data={this.state.dataform} />\r\n          <Input type=\"select\" id=\"period\" style={{marginBottom: '10px' , width:'23%'}}  onChange={this.selectPeriod} value={this.state.idperiod}>\r\n              {\r\n                this.state.accperiod.map(data =>\r\n                 <option key={data.VCIDACCPERIOD} value ={data.VCIDACCPERIOD}>{data.VCDESCRIPTION}</option> \r\n                )\r\n              }\r\n          </Input>\r\n          <Row>\r\n                <Col sm=\"3\"> \r\n                <Scroll style={{ height: '700px' }}>\r\n                {\r\n                  this.state.repo.map(repo =>\r\n                  <Card id=\"cardfile\" body key={repo.ID_REPO} style={{ marginBottom: '10px' , border: '5px solid lightblue'}}>\r\n                    <CardText style={{fontSize:'15px'}}>{repo.REPOSITORY}</CardText>\r\n                    <CardText style={{fontSize:'15px'}}>{repo.JENIS_REPO}</CardText>\r\n                    <CardText className=\"text-center\" style={{fontWeight: 'bold'}}>{repo.COUNT}</CardText>\r\n                    <div>\r\n                     <Button color=\"primary\" size='sm' style={{width: '100%'}} onClick={()=> this.Showlist(repo.ID_REPO)}>Show File</Button><br/><br/>\r\n                     <Button color=\"default\" size='sm' style={{width: '100%'}} onClick={()=> this.Downloadfile.Downloadfile(repo.ID_REPO)} >Download Format</Button>\r\n                    </div>\r\n                  </Card> \r\n                  )\r\n                }\r\n                </Scroll>\r\n                </Col>\r\n              \r\n              <Col sm=\"9\" className=\"table-responsive\">\r\n                <Scroll>\r\n                  <BootstrapTable\r\n                        data={this.state.groupfile}\r\n                        bordered={false}\r\n                        striped\r\n                        pagination={true}\r\n                        options={app.optionTable}>\r\n                          <TableHeaderColumn\r\n                            dataField='TEMPLATE'\r\n                            width='16%'\r\n                            isKey = {true}\r\n                            dataSort>\r\n                            Periode\r\n                          </TableHeaderColumn>\r\n                          <TableHeaderColumn\r\n                            dataField='LAST_UPLOAD'\r\n                            width='16%'\r\n                            dataSort>\r\n                            Last Upload\r\n                          </TableHeaderColumn>\r\n                          <TableHeaderColumn\r\n                            dataField='COUNT'\r\n                            width='16%'\r\n                            dataSort>\r\n                            Jumlah File\r\n                          </TableHeaderColumn>\r\n                          <TableHeaderColumn\r\n                            dataField='COUNT'\r\n                            dataFormat={this.status}\r\n                            width='16%'\r\n                            dataSort>\r\n                            Status\r\n                          </TableHeaderColumn>      \r\n                          <TableHeaderColumn\r\n                            dataField='ID_TEMPLATE'\r\n                            dataFormat={this.action}\r\n                            width='16%'\r\n                            dataSort>\r\n                            Action\r\n                          </TableHeaderColumn>\r\n                      </BootstrapTable>\r\n                  </Scroll>\r\n              </Col>\r\n            </Row>\r\n          </Pageadmin>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default listFile;"]},"metadata":{},"sourceType":"module"}